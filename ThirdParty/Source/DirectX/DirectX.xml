<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DirectX</name>
    </assembly>
    <members>
        <member name="T:SC.ThirdParty.DirectX.CoCreateInstanceDelegate">
            <summary>
            COM 구성 요소의 실제화를 수행하는 메서드의 대리자입니다.
            </summary>
            <param name="pUnknown"> 네이티브 COM 구성 요소 개체의 핸들이 전달됩니다. </param>
            <returns> 생성된 인스턴스 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ComObject">
            <summary>
            COM 구성 요소에서 필요한 기본 기능을 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.#ctor(System.IntPtr)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ComObject"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="handle"> 개체의 네이티브 핸들 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.Dispose">
            <summary>
            개체의 참조 횟수를 1회 감소시킵니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.AddRef">
            <summary>
            개체의 참조 횟수를 1회 증가시킵니다.
            </summary>
            <returns> 개체의 현재 참조 횟수가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.Release">
            <summary>
            개체의 참조 횟수를 1회 감소시킵니다.
            </summary>
            <returns> 개체의 현재 참조 횟수가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.QueryInterface(System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            사용 가능한 대상 인터페이스 개체를 조회합니다.
            </summary>
            <param name="iid"> 대상 인터페이스의 GUID를 전달합니다. </param>
            <param name="ppUnknown"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
            <exception cref="T:System.NotSupportedException"> 요청한 GUID가 지원되지 않는 인터페이스를 나타내는 경우 발생합니다. </exception>
        </member>
        <member name="P:SC.ThirdParty.DirectX.ComObject.Handle">
            <summary>
            개체의 네이티브 핸들 값을 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.ComObject.IsDisposed">
            <summary>
            개체가 종료되었는지 여부를 가져옵니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.OnDisposing">
            <summary>
            개체의 참조 횟수가 0이 되어 제거될 때 호출됩니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.RegisterCLSID(System.Guid,SC.ThirdParty.DirectX.CoCreateInstanceDelegate)">
            <summary>
            COM 구성 요소 클래스를 등록합니다.
            </summary>
            <param name="clsid"> 인터페이스 GUID를 전달합니다. </param>
            <param name="coCreateInstance"> 대리자 함수를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.RegisterCLSID``1(SC.ThirdParty.DirectX.CoCreateInstanceDelegate)">
            <summary>
            COM 구성 요소 클래스를 등록합니다.
            </summary>
            <typeparam name="T"> 등록을 해제할 인터페이스 유형을 전달합니다. </typeparam>
            <param name="coCreateInstance"> 대리자 함수를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.UnregisterCLSID(System.Guid)">
            <summary>
            COM 구성 요소 클래스의 등록을 해제합니다.
            </summary>
            <param name="clsid"> 인터페이스 GUID를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.UnregisterCLSID``1">
            <summary>
            COM 구성 요소 클래스의 등록을 해제합니다.
            </summary>
            <typeparam name="T"> 등록을 해제할 인터페이스 유형을 전달합니다. </typeparam>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.CoCreateInstance(System.Guid,System.IntPtr)">
            <summary>
            COM 구성 요소를 인스턴스화합니다.
            </summary>
            <param name="clsid"> 인터페이스 GUID를 전달합니다. </param>
            <param name="pUnknown"> 네이티브 COM 구성 요소 개체의 핸들을 전달합니다. </param>
            <returns> 생성된 인스턴스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.CoCreateInstance(System.Guid)">
            <summary>
            COM 구성 요소를 인스턴스화합니다.
            </summary>
            <param name="clsid"> 인터페이스 GUID를 전달합니다. </param>
            <returns> 생성된 인스턴스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.CoCreateInstance``1(System.IntPtr)">
            <summary>
            COM 구성 요소를 인스턴스화합니다.
            </summary>
            <typeparam name="T"> 인터페이스 유형을 전달합니다. </typeparam>
            <param name="pUnknown"> 네이티브 COM 구성 요소 개체의 핸들을 전달합니다. </param>
            <returns> 생성된 인스턴스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.CoCreateInstance``1">
            <summary>
            COM 구성 요소를 인스턴스화합니다.
            </summary>
            <typeparam name="T"> 인터페이스 유형을 전달합니다. </typeparam>
            <returns> 생성된 인스턴스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ComObject.HR(System.Int32)">
            <summary>
            HRESULT 코드를 이용해 코드 내용에 따른 예외를 생성합니다.
            </summary>
            <param name="hResult"> 네이티브 HRESULT 코드를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1AlphaMode">
            <summary>
            D2D1 알파 처리 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1AlphaMode.Unknown">
            <summary>
            알파 처리 모드가 암묵적으로 지정됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1AlphaMode.Premultiplied">
            <summary>
            미리 계산된 알파를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1AlphaMode.Straight">
            <summary>
            A 컴포넌트에만 알파를 적용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1AlphaMode.Ignore">
            <summary>
            알파 채널을 무시합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1BitmapOptions">
            <summary>
            D2D1 비트맵 옵션을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapOptions.None">
            <summary>
            기본 옵션을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapOptions.Target">
            <summary>
            비트맵이 렌더 타겟으로 지정될 수 있음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapOptions.CannotDraw">
            <summary>
            비트맵이 디바이스 컨텍스트 개체를 통해 그려질 수 있음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapOptions.CPURead">
            <summary>
            비트맵 데이터를 CPU에서 읽을 수 있음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapOptions.GDICompatible">
            <summary>
            GDI와 호환되어 작동합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1BitmapProperties1">
            <summary>
            D2D1 비트맵 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapProperties1.PixelFormat">
            <summary>
            픽셀 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapProperties1.DpiX">
            <summary>
            X축 DPI 계수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapProperties1.DpiY">
            <summary>
            Y축 DPI 계수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapProperties1.BitmapOptions">
            <summary>
            비트맵의 사용 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1BitmapProperties1.ColorContext">
            <summary>
            비트맵의 컬러 컨텍스트 개체를 지정합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D2D1BitmapProperties1.#ctor(SC.ThirdParty.DirectX.DXGIFormat,SC.ThirdParty.DirectX.D2D1AlphaMode,SC.ThirdParty.DirectX.D2D1BitmapOptions)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D2D1BitmapProperties1"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="format"> 비트맵 픽셀 형식을 전달합니다. </param>
            <param name="alphaMode"> 비트맵 알파 처리 방식을 전달합니다. </param>
            <param name="options"> 비트맵 옵션을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1CapStyle">
            <summary>
            D2D1 선 끝부분 스타일을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1CapStyle.Flat">
            <summary>
            평평한 끝 스타일을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1CapStyle.Square">
            <summary>
            사각형 끝 스타일을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1CapStyle.Round">
            <summary>
            둥근 끝 스타일을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1CapStyle.Triangle">
            <summary>
            삼각형 끝 스타일을 사용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1CreationProperties">
            <summary>
            D2D1 생성 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1CreationProperties.ThreadingMode">
            <summary>
            스레딩 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1CreationProperties.DebugLevel">
            <summary>
            디버그 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1CreationProperties.Options">
            <summary>
            디바이스 컨텍스트 옵션을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1DebugLevel">
            <summary>
            D2D1 디버그 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DebugLevel.None">
            <summary>
            디버그를 사용하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DebugLevel.Error">
            <summary>
            디버그 내용을 오류로 처리합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DebugLevel.Warning">
            <summary>
            디버그 내용을 경고로 처리합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DebugLevel.Information">
            <summary>
            디버그 내용을 알림으로 처리합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1DeviceContextOptions">
            <summary>
            D2D1 디바이스 컨텍스트 개체의 추가 옵션을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DeviceContextOptions.None">
            <summary>
            아무 옵션을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DeviceContextOptions.EnableMultithreadedOptimizations">
            <summary>
            기하 렌더링이 여러 스레드에서 병렬로 수행됩니다. 단일 스레드가 기본값입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1DrawTextOptions">
            <summary>
            D2D1 텍스트 렌더링 옵션을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DrawTextOptions.None">
            <summary>
            아무 옵션도 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DrawTextOptions.NoSnap">
            <summary>
            Do not snap the baseline of the text vertically.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DrawTextOptions.Clip">
            <summary>
            Clip the text to the content bounds.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DrawTextOptions.EnableColorFont">
            <summary>
            Render color versions of glyphs if defined by the font.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1DrawTextOptions.DisableColorBitmapSnapping">
            <summary>
            Bitmap origins of color glyph bitmaps are not snapped.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1Ellipse">
            <summary>
            D2D1 타원 영역을 정의합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1Ellipse.Point">
            <summary>
            타원의 중앙 지점을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1Ellipse.RadiusX">
            <summary>
            X축 반지름을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1Ellipse.RadiusY">
            <summary>
            Y축 반지름을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D2D1Ellipse.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D2D1Ellipse"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="pointX"> X축 중앙 지점 값을 전달합니다. </param>
            <param name="pointY"> Y축 중앙 지점 값을 전달합니다. </param>
            <param name="radius"> 반지름 값을 일괄 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D2D1Ellipse.#ctor(SmartEngine.Core.Numerics.Vector2,System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D2D1Ellipse"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="point"> 중앙 지점 값을 전달합니다. </param>
            <param name="radiusX"> X축 반지름 값을 일괄 전달합니다. </param>
            <param name="radiusY"> Y축 반지름 값을 일괄 전달합니다. </param>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D2D1Ellipse.Radius">
            <summary>
            반지름 값을 일괄 설정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1FillMode">
            <summary>
            D2D1 기하 모형이 교차하여 모양을 형성하는 방법을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1FillMode.Alternate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1FillMode.Winding">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1PixelFormat">
            <summary>
            D2D1 픽셀 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1PixelFormat.Format">
            <summary>
            픽셀 형식을 전달합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1PixelFormat.AlphaMode">
            <summary>
            알파 처리 형식을 전달합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1PrimitiveBlend">
            <summary>
            D2D1 단위 블렌딩 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1PrimitiveBlend.SourceOver">
            <summary>
            대상 위에 덮어씁니다. 알파 블렌딩이 기본 적용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1PrimitiveBlend.Copy">
            <summary>
            대상 위치로 복사합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1PrimitiveBlend.Min">
            <summary>
            두 값 중 최소 값을 적용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1PrimitiveBlend.Add">
            <summary>
            두 값을 더합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1PrimitiveBlend.Max">
            <summary>
            두 값 중 최대 값을 적용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1RoundedRect">
            <summary>
            D2D1 둥근 사각형을 정의합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1RoundedRect.Rect">
            <summary>
            사각 영역을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1RoundedRect.RadiusX">
            <summary>
            X축 둥근 범위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1RoundedRect.RadiusY">
            <summary>
            Y축 둥근 범위를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D2D1RoundedRect.#ctor(SmartEngine.Core.Numerics.Rectangle,System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D2D1RoundedRect"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="rect"> 사각 영역을 전달합니다. </param>
            <param name="radiusX"> X축 둥근 범위를 전달합니다. </param>
            <param name="radiusY"> Y축 둥근 범위를 전달합니다. </param>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D2D1RoundedRect.Radius">
            <summary>
            둥근 영역의 범위를 일괄 설정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D2D1ThreadingMode">
            <summary>
            D2D1 스레딩 모드를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1ThreadingMode.SingleThreaded">
            <summary>
            싱글 스레드 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D2D1ThreadingMode.MultiThreaded">
            <summary>
            멀티 스레드 모드를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Bitmap">
            <summary>
            D2D1 비트맵 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Bitmap.GetSize">
            <summary>
            비트맵의 해상도 독립적 단위를 가져옵니다.
            </summary>
            <returns> 크기가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Bitmap.GetPixelSize">
            <summary>
            비트맵의 픽셀 단위 해상도를 가져옵니다.
            </summary>
            <returns> 해상도가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Bitmap.GetPixelFormat">
            <summary>
            비트맵의 픽셀 형식을 가져옵니다.
            </summary>
            <returns> 픽셀 형식이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Bitmap.GetDpi(System.Single@,System.Single@)">
            <summary>
            비트맵의 DPI를 가져옵니다.
            </summary>
            <param name="dpiX"> X축 DPI 값을 받을 변수의 참조를 전달합니다. </param>
            <param name="dpiY"> Y축 DPI 값을 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Bitmap1">
            <summary>
            D2D1 DXGI 호환 가능한 비트맵 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Bitmap1.GetSurface">
            <summary>
            DXGI 표면 개체를 가져옵니다.
            </summary>
            <returns> 표면 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Brush">
            <summary>
            D2D1 브러시 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Brush.SetOpacity(System.Single)">
            <summary>
            불투명도 값을 설정합니다.
            </summary>
            <param name="opacity"> 불투명도 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Brush.SetTransform(SmartEngine.Core.Numerics.Matrix3x2)">
            <summary>
            브러시의 트랜스폼을 설정합니다.
            </summary>
            <param name="transform"> 트랜스폼 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Brush.GetOpacity">
            <summary>
            불투명도 값을 가져옵니다.
            </summary>
            <returns> 불투명도 값이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Brush.GetTransform">
            <summary>
            브러시의 트랜스폼 값을 가져옵니다.
            </summary>
            <returns> 트랜스폼 값이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1ColorContext">
            <summary>
            D2D1 비트맵에 사용되는 컬러 컨텍스트 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Device">
            <summary>
            D2D1 디바이스 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Device.CreateDeviceContext(SC.ThirdParty.DirectX.D2D1DeviceContextOptions)">
            <summary>
            디바이스 컨텍스트 개체를 생성합니다.
            </summary>
            <param name="options"> 디바이스 컨텍스트 옵션을 전달합니다. </param>
            <returns> 생성된 개체 인터페이스가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Device.GetFactory">
            <summary>
            팩토리 개체를 가져옵니다.
            </summary>
            <returns> 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1DeviceContext">
            <summary>
            D2D1 장치에 대한 상태를 설정하거나 비트맵을 대상으로 하는 명령 버퍼를 작성하는 디바이스 컨텍스트 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1DeviceContext.CreateSolidColorBrush(SmartEngine.Core.Numerics.Color)">
            <summary>
            단색 브러시 개체를 생성합니다.
            </summary>
            <param name="color"> 색상 값을 전달합니다. </param>
            <returns> 생성된 브러시 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1DeviceContext.CreateBitmapFromDxgiSurface(SC.ThirdParty.DirectX.IDXGISurface,System.Nullable{SC.ThirdParty.DirectX.D2D1BitmapProperties1})">
            <summary>
            DXGI 표면 개체로부터 비트맵 개체를 생성합니다.
            </summary>
            <param name="surface"> DXGI 표면 개체를 전달합니다. </param>
            <param name="bitmapProperties"> 비트맵 정보를 전달합니다. </param>
            <returns> 비트맵 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1DeviceContext.GetDevice">
            <summary>
            이 비트맵을 생성한 디바이스 개체를 가져옵니다.
            </summary>
            <returns> 디바이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1DeviceContext.SetTarget(SC.ThirdParty.DirectX.ID2D1Image)">
            <summary>
            이미지 개체를 렌더 타겟으로 설정합니다. 대상 이미지는 반드시 <see cref="F:SC.ThirdParty.DirectX.D2D1BitmapOptions.Target"/> 속성이 지정되어야 합니다.
            </summary>
            <param name="image"> 이미지 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1DeviceContext.GetTarget">
            <summary>
            렌더 타겟으로 설정된 이미지 개체를 가져옵니다.
            </summary>
            <returns> 이미지 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1DeviceContext.SetPrimitiveBlend(SC.ThirdParty.DirectX.D2D1PrimitiveBlend)">
            <summary>
            단위 블렌딩 형식을 설정합니다.
            </summary>
            <param name="primitiveBlend"> 블렌딩 형식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1DeviceContext.GetPrimitiveBlend">
            <summary>
            단위 블렌딩 형식을 가져옵니다.
            </summary>
            <returns> 블렌딩 형식이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Factory">
            <summary>
            D2D1 자원을 관리하는 팩토리 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Factory.CreatePathGeometry">
            <summary>
            패스 기하 인터페이스를 생성합니다.
            </summary>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Geometry">
            <summary>
            D2D1 기하 모형에 대한 제어를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Geometry.GetBounds(System.Nullable{SmartEngine.Core.Numerics.Matrix3x2})">
            <summary>
            이 모형에 대한 경계 사각형을 가져옵니다.
            </summary>
            <param name="worldTransform"> 트랜스폼을 전달합니다. </param>
            <returns> 경계 사각형이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1Geometry.GetWidenedBounds(System.Single,SC.ThirdParty.DirectX.ID2D1StrokeStyle,System.Nullable{SmartEngine.Core.Numerics.Matrix3x2},System.Single)">
            <summary>
            선분의 스타일 등으로 확장된 경계 사각형을 가져옵니다.
            </summary>
            <param name="strokeWidth"> 선분의 굵기를 전달합니다. </param>
            <param name="strokeStyle"> 선분 스타일을 전달합니다. </param>
            <param name="worldTransform"> 트랜스폼을 전달합니다. </param>
            <param name="flatteningTolerance"></param>
            <returns> 경계 사각형이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1GeometrySink">
            <summary>
            D2D1 기하 정보를 서술하는 개체에 대한 공통 제어 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Image">
            <summary>
            D2D1 2차원 데이터를 채우는 이미지 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1PathGeometry">
            <summary>
            D2D1 아치, 커브 및 라인 등에 대한 복합 모양에 대한 제어를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1PathGeometry.Open">
            <summary>
            Geometry sink를 오픈합니다.
            </summary>
            <returns> 기하 모형을 제어할 수 있는 개체에 대한 인터페이스가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1RenderTarget">
            <summary>
            D2D1 그리기 명령을 받을 수 있는 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.Clear(System.Nullable{SmartEngine.Core.Numerics.Color})">
            <summary>
            대상으로 지정된 렌더 타겟 비트맵을 단색으로 초기화합니다.
            </summary>
            <param name="clearColor"> 초기화 색을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.BeginDraw">
            <summary>
            렌더 타겟의 렌더링을 시작합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.EndDraw">
            <summary>
            렌더 타겟의 렌더링을 종료합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawLine(SmartEngine.Core.Numerics.Vector2,SmartEngine.Core.Numerics.Vector2,SC.ThirdParty.DirectX.ID2D1Brush,System.Single,SC.ThirdParty.DirectX.ID2D1StrokeStyle)">
            <summary>
            선분을 그립니다.
            </summary>
            <param name="point0"> 선분의 시작 위치를 전달합니다. </param>
            <param name="point1"> 선분의 종료 위치를 전달합니다. </param>
            <param name="brush"> 선분 내부를 채울 방식을 전달합니다. </param>
            <param name="strokeWidth"> 선분 굵기를 전달합니다. </param>
            <param name="strokeStyle"> 선분 스타일을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawRectangle(SmartEngine.Core.Numerics.Rectangle,SC.ThirdParty.DirectX.ID2D1Brush,System.Single,SC.ThirdParty.DirectX.ID2D1StrokeStyle)">
            <summary>
            사각형 테두리를 그립니다.
            </summary>
            <param name="rect"> 사각 영역을 전달합니다. </param>
            <param name="brush"> 선분 내부를 채울 방식을 전달합니다. </param>
            <param name="strokeWidth"> 선분 굵기를 전달합니다. </param>
            <param name="strokeStyle"> 선분 스타일을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.FillRectangle(SmartEngine.Core.Numerics.Rectangle,SC.ThirdParty.DirectX.ID2D1Brush)">
            <summary>
            사각형 내부를 채웁니다.
            </summary>
            <param name="rect"> 사각 영역을 전달합니다. </param>
            <param name="brush"> 내부 영역을 채울 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawRoundedRectangle(SC.ThirdParty.DirectX.D2D1RoundedRect,SC.ThirdParty.DirectX.ID2D1Brush,System.Single,SC.ThirdParty.DirectX.ID2D1StrokeStyle)">
            <summary>
            둥근 사각형 테두리를 그립니다.
            </summary>
            <param name="roundedRect"> 둥근 사각 영역을 전달합니다. </param>
            <param name="brush"> 선분 내부를 채울 방식을 전달합니다. </param>
            <param name="strokeWidth"> 선분 굵기를 전달합니다. </param>
            <param name="strokeStyle"> 선분 스타일을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.FillRoundedRectangle(SC.ThirdParty.DirectX.D2D1RoundedRect,SC.ThirdParty.DirectX.ID2D1Brush)">
            <summary>
            둥근 사각형 내부를 채웁니다.
            </summary>
            <param name="roundedRect"> 둥근 사각 영역을 전달합니다. </param>
            <param name="brush"> 내부 영역을 채울 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawEllipse(SC.ThirdParty.DirectX.D2D1Ellipse,SC.ThirdParty.DirectX.ID2D1Brush,System.Single,SC.ThirdParty.DirectX.ID2D1StrokeStyle)">
            <summary>
            타원 테두리를 그립니다.
            </summary>
            <param name="ellipse"> 타원 영역을 전달합니다. </param>
            <param name="brush"> 선분 내부를 채울 방식을 전달합니다. </param>
            <param name="strokeWidth"> 선분 굵기를 전달합니다. </param>
            <param name="strokeStyle"> 선분 스타일을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.FillEllipse(SC.ThirdParty.DirectX.D2D1Ellipse,SC.ThirdParty.DirectX.ID2D1Brush)">
            <summary>
            타원 내부를 채웁니다.
            </summary>
            <param name="ellipse"> 타원 영역을 전달합니다. </param>
            <param name="brush"> 내부 영역을 채울 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawGeometry(SC.ThirdParty.DirectX.ID2D1Geometry,SC.ThirdParty.DirectX.ID2D1Brush,System.Single,SC.ThirdParty.DirectX.ID2D1StrokeStyle)">
            <summary>
            기하 모형의 외각선을 그립니다.
            </summary>
            <param name="geometry"> 기하 모형을 전달합니다. </param>
            <param name="brush"> 선분 내부를 채울 방식을 전달합니다. </param>
            <param name="strokeWidth"> 선분 굵기를 전달합니다. </param>
            <param name="strokeStyle"> 선분 스타일을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.FillGeometry(SC.ThirdParty.DirectX.ID2D1Geometry,SC.ThirdParty.DirectX.ID2D1Brush,SC.ThirdParty.DirectX.ID2D1Brush)">
            <summary>
            기하 모형의 내부를 채웁니다.
            </summary>
            <param name="geometry"> 기하 모형을 전달합니다. </param>
            <param name="brush"> 내부 영역을 채울 방식을 전달합니다. </param>
            <param name="opacityBrush"> 선택적 알파 브러시를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawText(System.String,SC.ThirdParty.DirectX.IDWriteTextFormat,SmartEngine.Core.Numerics.Rectangle,SC.ThirdParty.DirectX.ID2D1Brush,SC.ThirdParty.DirectX.D2D1DrawTextOptions,SC.ThirdParty.DirectX.DWriteMeasuringMode)">
            <summary>
            텍스트를 렌더링합니다.
            </summary>
            <param name="string"> 렌더링할 텍스트를 전달합니다. </param>
            <param name="textFormat"> 텍스트 포맷을 전달합니다. </param>
            <param name="layoutRect"> 텍스트 배치 레이아웃을 전달합니다. </param>
            <param name="defaultFillBrush"> 기본 채우기 브러시를 전달합니다. </param>
            <param name="options"> 텍스트 렌더링 옵션을 전달합니다. </param>
            <param name="measuringMode"> 측정 모드를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawTextLayout(SmartEngine.Core.Numerics.Vector2,SC.ThirdParty.DirectX.IDWriteTextLayout,SC.ThirdParty.DirectX.ID2D1Brush,SC.ThirdParty.DirectX.D2D1DrawTextOptions)">
            <summary>
            텍스트 레이아웃 개체를 렌더링합니다.
            </summary>
            <param name="origin"> 렌더링 위치를 전달합니다. </param>
            <param name="textLayout"> 텍스트 레이아웃 개체를 전달합니다. </param>
            <param name="defaultFillBrush"> 기본 채우기 브러시를 전달합니다. </param>
            <param name="options"> 텍스트 렌더링 옵션을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.DrawGlyphRun(SmartEngine.Core.Numerics.Vector2,SC.ThirdParty.DirectX.DWriteGlyphRun,SC.ThirdParty.DirectX.ID2D1Brush,SC.ThirdParty.DirectX.DWriteMeasuringMode)">
            <summary>
            GlyphRun을 렌더링합니다.
            </summary>
            <param name="baselineOrigin"> 텍스트의 베이스라인 위치를 전달합니다. </param>
            <param name="glyphRun"> GlyphRun 정보를 전달합니다. </param>
            <param name="foregroundBrush"> 전경 채우기 브러시를 전달합니다. </param>
            <param name="measuringMode"> 측정 모드를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.SetTransform(SmartEngine.Core.Numerics.Matrix3x2)">
            <summary>
            현재 설정된 트랜스폼을 교체합니다.
            </summary>
            <param name="transform"> 새로 설정할 트랜스폼을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1RenderTarget.GetTransform">
            <summary>
            현재 설정된 트랜스폼을 가져옵니다.
            </summary>
            <returns> 트랜스폼이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1Resource">
            <summary>
            D2D1 전역 리소스에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1SimplifiedGeometrySink">
            <summary>
            D2D1 간략화된 기하 정보를 서술하는 개체에 대한 공통 제어 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1SimplifiedGeometrySink.SetFillMode(SC.ThirdParty.DirectX.D2D1FillMode)">
            <summary>
            도형 채우기 모드를 설정합니다.
            </summary>
            <param name="fillMode"> 채우기 모드를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1SimplifiedGeometrySink.Close">
            <summary>
            기하 모형 작성을 종료합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1SolidColorBrush">
            <summary>
            D2D1 단색 브러시 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1SolidColorBrush.SetColor(SmartEngine.Core.Numerics.Color)">
            <summary>
            브러시의 단색 값을 설정합니다.
            </summary>
            <param name="color"> 색을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID2D1SolidColorBrush.GetColor">
            <summary>
            브러시의 단색 값을 가져옵니다.
            </summary>
            <returns> 단색 값이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID2D1StrokeStyle">
            <summary>
            D2D1 선 긋기 스타일을 나타내는 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11BindFlags">
            <summary>
            D3D11 리소스 바인딩 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.VertexBuffer">
            <summary>
            정점 버퍼로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.IndexBuffer">
            <summary>
            인덱스 버퍼로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.ConstantBuffer">
            <summary>
            상수 버퍼로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.ShaderResource">
            <summary>
            셰이더 자원으로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.StreamOutput">
            <summary>
            스트림 출력으로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.RenderTarget">
            <summary>
            렌더 타겟으로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.DepthStencil">
            <summary>
            깊이 스텐실 자원으로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.UnorderedAccess">
            <summary>
            순서없는 접근으로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.Decoder">
            <summary>
            디코더 자원으로 바인딩합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11BindFlags.VideoEncoder">
            <summary>
            비디오 인코더 자원으로 바인딩합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11CPUAccessFlags">
            <summary>
            D3D11 CPU 엑세스 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CPUAccessFlags.None">
            <summary>
            CPU 엑세스를 허용하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CPUAccessFlags.Write">
            <summary>
            쓰기 엑세스를 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CPUAccessFlags.Read">
            <summary>
            읽기 엑세스를 허용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags">
            <summary>
            D3D11 장치를 생성하는데 지정하는 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.SingleThreaded">
            <summary>
            싱글 스레드 형식으로 작동합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.Debug">
            <summary>
            디버그 레이어를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.SwitchToRef">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.PreventInternalThreadingOptimizations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.BGRASupport">
            <summary>
            BGRA 형식을 지원합니다. Direct2D와 상호 운용을 위해서 이 속성이 필요할 수 있습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.Debuggable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.PreventAlteringLayerSettingsFromRegistry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.DisableGPUTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CreateDeviceFlags.VideoSupport">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11CullMode">
            <summary>
            D3D11 선별 모드를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CullMode.None">
            <summary>
            선별하지 않음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CullMode.Front">
            <summary>
            전면 선별을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11CullMode.Back">
            <summary>
            후면 선별을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11DrawIndexedInstancedIndirectArgs">
            <summary>
            D3D11 간접 DrawIndexedInstanced 명령에 대한 매개변수를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawIndexedInstancedIndirectArgs.IndexCountPerInstance">
            <summary>
            인스턴스당 인덱스 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawIndexedInstancedIndirectArgs.InstanceCount">
            <summary>
            인스턴스 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawIndexedInstancedIndirectArgs.StartIndexLocation">
            <summary>
            인덱스 시작 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawIndexedInstancedIndirectArgs.BaseVertexLocation">
            <summary>
            참조할 정점 위치의 시작 위치를 전달합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawIndexedInstancedIndirectArgs.StartInstanceLocation">
            <summary>
            시작 인스턴스 위치를 전달합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11DrawInstancedIndirectArgs">
            <summary>
            D3D11 간접 DrawInstanced 명령의 매개변수를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawInstancedIndirectArgs.VertexCountPerInstance">
            <summary>
            인스턴스당 정점 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawInstancedIndirectArgs.InstanceCount">
            <summary>
            인스턴스 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawInstancedIndirectArgs.StartVertexLocation">
            <summary>
            시작 정점 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11DrawInstancedIndirectArgs.StartInstanceLocation">
            <summary>
            시작 인스턴스 위치를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11FillMode">
            <summary>
            D3D11 채움 모드를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11FillMode.Wireframe">
            <summary>
            와이어프레임 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11FillMode.Solid">
            <summary>
            채움 모드를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11InputClassification">
            <summary>
            D3D11 입력 분류를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputClassification.PerVertexData">
            <summary>
            정점당 입력을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputClassification.PerInstanceData">
            <summary>
            인스턴스당 입력을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11InputElementDesc">
            <summary>
            D3D11 입력 원소에 대한 저옵를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputElementDesc.SemanticName">
            <summary>
            의미소 이름을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputElementDesc.SemanticIndex">
            <summary>
            의미소 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputElementDesc.Format">
            <summary>
            원소의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputElementDesc.InputSlot">
            <summary>
            입력 슬롯을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputElementDesc.AlignedByteOffset">
            <summary>
            정렬된 바이트 오프셋을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputElementDesc.InputSlotClass">
            <summary>
            입력 슬롯 분류를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11InputElementDesc.InstanceDataStepRate">
            <summary>
            
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D11InputElementDesc.#ctor(System.String,SC.ThirdParty.DirectX.DXGIFormat,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D11InputElementDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="name"> 의미소 이름을 전달합니다. </param>
            <param name="format"> 의미소 형식을 전달합니다. </param>
            <param name="offset"> 의미소가 이전 의미소에서 얼마만큼 이동하는지 나타내는 값을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11ResourceDimension">
            <summary>
            D3D11 리소스의 차원을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceDimension.Unknown">
            <summary>
            알 수 없는 차원 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceDimension.Buffer">
            <summary>
            버퍼 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceDimension.Texture1D">
            <summary>
            1차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceDimension.Texture2D">
            <summary>
            2차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceDimension.Texture3D">
            <summary>
            3차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11ResourceFlags">
            <summary>
            D3D11 자원에 대한 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceFlags.BindFlags">
            <summary>
            리소스 바인딩 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceFlags.MiscFlags">
            <summary>
            특수 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceFlags.CPUAccessFlags">
            <summary>
            CPU 엑세스 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceFlags.StructureByteStride">
            <summary>
            구조체 바이트 보폭을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D11ResourceFlags.#ctor(SC.ThirdParty.DirectX.D3D11BindFlags)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D11ResourceFlags"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="bindFlags"> 바인딩 속성을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags">
            <summary>
            D3D11 리소스 기타 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.None">
            <summary>
            아무 속성도 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.GenerateMips">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.Shared">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.TextureCube">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.DrawIndirectArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.BufferAllowRawViews">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.BufferStructured">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.ResourceClamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.SharedKeyedMutex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.GDICompatible">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.SharedNTHandle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.RestrictedContent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.RestrictSharedResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.RestrictSharedResourceDriver">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.Guarded">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.TilePool">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.Tiled">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11ResourceMiscFlags.HWProtected">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11SODeclarationEntry">
            <summary>
            D3D11 스트림 출력 선언 엔트리 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11SODeclarationEntry.Stream">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11SODeclarationEntry.SemanticName">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11SODeclarationEntry.SemanticIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11SODeclarationEntry.StartComponent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11SODeclarationEntry.ComponentCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11SODeclarationEntry.OutputSlot">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11Usage">
            <summary>
            D3D11 자원의 사용처를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Usage.Default">
            <summary>
            기본 사용처를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Usage.Immutable">
            <summary>
            불변 자원을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Usage.Dynamic">
            <summary>
            동적 자원을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Usage.Staging">
            <summary>
            스테이징 자원을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D11Viewport">
            <summary>
            D3D11 뷰포트 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Viewport.TopLeftX">
            <summary>
            왼쪽 시작 위치를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Viewport.TopLeftY">
            <summary>
            위쪽 시작 위치를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Viewport.Width">
            <summary>
            뷰포트의 넓이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Viewport.Height">
            <summary>
            뷰포트의 높이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Viewport.MinDepth">
            <summary>
            최소 깊이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D11Viewport.MaxDepth">
            <summary>
            최대 깊이를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D11Viewport.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D11Viewport"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="left"> 왼쪽 위치를 전달합니다. </param>
            <param name="top"> 위쪽 위치를 전달합니다. </param>
            <param name="right"> 오른쪽 위치를 전달합니다. </param>
            <param name="bottom"> 아래쪽 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D11Viewport.#ctor(System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D11Viewport"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="width"> 넓이를 전달합니다. </param>
            <param name="height"> 높이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D11Viewport.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D11Device">
            <summary>
            D3D11 디바이스 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11Device.GetImmediateContext">
            <summary>
            디바이스로 즉시 전송되는 명령 컨텍스트 개체를 가져옵니다.
            </summary>
            <returns> 디바이스 컨텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D11DeviceChild">
            <summary>
            D3D11 장치 개체에서 파생된 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D11DeviceContext">
            <summary>
            D3D11 디바이스에 명령을 전달하는 디바이스 컨텍스트 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11DeviceContext.ClearState">
            <summary>
            디바이스 컨텍스트의 현재 설정된 모든 상태를 초기화합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11DeviceContext.Flush">
            <summary>
            지금까지의 명령을 즉시 전송합니다. 즉시 명령을 전송하는 디바이스 컨텍스트 개체에서만 사용할 수 있습니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D11On12Device">
            <summary>
            D3D11On12 디바이스 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11On12Device.CreateWrappedResource(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.D3D11ResourceFlags,SC.ThirdParty.DirectX.D3D12ResourceStates,SC.ThirdParty.DirectX.D3D12ResourceStates,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            D3D12 호환 자원 개체를 생성합니다.
            </summary>
            <param name="pResource12"> 원본 D3D12 자원 개체를 전달합니다. </param>
            <param name="resourceFlags"> 리소스 속성을 전달합니다. </param>
            <param name="inState"> 입력 상태를 전달합니다. </param>
            <param name="outState"> 출력 상태를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppResource11"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11On12Device.AcquireWrappedResources(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D11Resource})">
            <summary>
            자원을 Direct3D 11에서 사용할 수 있도록 승인합니다.
            </summary>
            <param name="ppResources"> 승인할 자원 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11On12Device.ReleaseWrappedResources(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D11Resource})">
            <summary>
            자원의 승인을 해제합니다.
            </summary>
            <param name="ppResources"> 승인 해제할 자원 목록을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D11On12DeviceExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ID3D11On12Device"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11On12DeviceExtensions.CreateWrappedResource``1(SC.ThirdParty.DirectX.ID3D11On12Device,SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.D3D11BindFlags,SC.ThirdParty.DirectX.D3D12ResourceStates,SC.ThirdParty.DirectX.D3D12ResourceStates)">
            <summary>
            D3D12 호환 자원 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 변환할 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="pResource12"> 원본 D3D12 자원 개체를 전달합니다. </param>
            <param name="bindFlags"> 리소스 바이딩 속성을 전달합니다. </param>
            <param name="inState"> 입력 상태를 전달합니다. </param>
            <param name="outState"> 출력 상태를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11On12DeviceExtensions.CreateWrappedResource(SC.ThirdParty.DirectX.ID3D11On12Device,SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.D3D11BindFlags,SC.ThirdParty.DirectX.D3D12ResourceStates,SC.ThirdParty.DirectX.D3D12ResourceStates)">
            <summary>
            D3D12 호환 자원 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="pResource12"> 원본 D3D12 자원 개체를 전달합니다. </param>
            <param name="bindFlags"> 리소스 바이딩 속성을 전달합니다. </param>
            <param name="inState"> 입력 상태를 전달합니다. </param>
            <param name="outState"> 출력 상태를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11On12DeviceExtensions.AcquireWrappedResources(SC.ThirdParty.DirectX.ID3D11On12Device,SC.ThirdParty.DirectX.ID3D11Resource[])">
            <summary>
            자원을 Direct3D 11에서 사용할 수 있도록 승인합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="ppResources"> 승인할 자원 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D11On12DeviceExtensions.ReleaseWrappedResources(SC.ThirdParty.DirectX.ID3D11On12Device,SC.ThirdParty.DirectX.ID3D11Resource[])">
            <summary>
            자원의 승인을 해제합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="ppResources"> 승인 해제할 자원 목록을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D11Resource">
            <summary>
            D3D11 리소스 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Blend">
            <summary>
            D3D12 블렌드 계수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.Zero">
            <summary>
            값에 0을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.One">
            <summary>
            값에 1을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.SrcColor">
            <summary>
            값에 원본 색을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.InvSrcColor">
            <summary>
            값에 반전된 원본 색을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.SrcAlpha">
            <summary>
            원본 알파 값을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.InvSrcAlpha">
            <summary>
            값에 반전된 원본 알파 값을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.DestAlpha">
            <summary>
            값에 대상 알파 값을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.InvDestAlpha">
            <summary>
            값에 반전된 대상 알파 값을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.DestColor">
            <summary>
            값에 대상 색을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.InvDestColor">
            <summary>
            값에 반전된 대상 색을 곱합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.SrcAlphaSat">
            <summary>
            값에 원본 알파를 곱합니다. 값은 0에서 1로 한정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.BlendFactor">
            <summary>
            값에 사용자 지정 블렌드 계수를 곱합니다. 사용자 지정 블렌드 계수는 <see cref="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.OMSetBlendFactor(SmartEngine.Core.Numerics.Vector4)"/> 메서드를 통해 설정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.InvBlendFactor">
            <summary>
            값에 반전된 사용자 지정 블렌드 계수를 곱합니다. 사용자 지정 블렌드 계수는 <see cref="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.OMSetBlendFactor(SmartEngine.Core.Numerics.Vector4)"/> 메서드를 통해 설정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.Src1Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.InvSrc1Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.Src1Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Blend.InvSrc1Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12BlendDesc">
            <summary>
            D3D12 블렌드 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BlendDesc.AlphaToCoverageEnable">
            <summary>
            알파 값을 포괄도로 변경하는지 여부를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BlendDesc.IndependentBlendEnable">
            <summary>
            블렌드 정보가 각각의 렌더 타겟 정보를 사용하도록 하는 값을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12BlendDesc.RenderTarget">
            <summary>
            각 렌더 타겟에 대한 블렌드 정보를 서술합니다. 8개의 값을 담는 고정 배열입니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12BlendDesc.#ctor(SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc[])">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12BlendDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="blendDescs"> 블렌드 정보 서술 구조체 목록을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12BlendOP">
            <summary>
            D3D12 블렌딩 연산자를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BlendOP.Add">
            <summary>
            원본 값과 대상 값을 더합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BlendOP.Subtract">
            <summary>
            대상 값에서 원본 값을 뺍니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BlendOP.RevSubtract">
            <summary>
            원본 값에서 대상 값을 뺀 후, 대상 값을 원본 값으로 설정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BlendOP.Min">
            <summary>
            두 값 중 작은 값으로 설정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BlendOP.Max">
            <summary>
            두 값 중 큰 값으로 설정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Box">
            <summary>
            D3D12 직육면체 형식의 텍스처 크기를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Box.Left">
            <summary>
            자원의 X축 위치의 시작 지점을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Box.Top">
            <summary>
            자원의 Y축 위치의 시작 지점을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Box.Front">
            <summary>
            자원의 Z축 위치의 시작 지점을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Box.Right">
            <summary>
            자원의 X축 위치의 종료 지점을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Box.Bottom">
            <summary>
            자원의 Y축 위치의 종료 지점을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Box.Back">
            <summary>
            자원의 Z축 위치의 종료 지점을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Box.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12Box"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="left"> 자원의 X축 위치의 시작 지점을 전달합니다. </param>
            <param name="top"> 자원의 Y축 위치의 시작 지점을 전달합니다. </param>
            <param name="right"> 자원의 X축 위치의 종료 지점을 전달합니다. </param>
            <param name="bottom"> 자원의 Y축 위치의 종료 지점을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Box.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12BufferRTV">
            <summary>
            D3D12 렌더 타겟 접근 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferRTV.FirstElement">
            <summary>
            처음 원소의 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferRTV.NumElement">
            <summary>
            원소의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12BufferSRV">
            <summary>
            D3D12 버퍼 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferSRV.FirstElement">
            <summary>
            처음 원소의 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferSRV.NumElement">
            <summary>
            원소의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferSRV.StructureByteStride">
            <summary>
            원소의 바이트 단위 크기를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferSRV.Flags">
            <summary>
            버퍼의 셰이더 자원 서술자 속성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12BufferSRV.ToString">
            <summary>
            개체의 단순 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12BufferSRVFlags">
            <summary>
            D3D12 버퍼 셰이더 자원 서술자 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferSRVFlags.None">
            <summary>
            속성 없음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferSRVFlags.Raw">
            <summary>
            원시 데이터를 사용함을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12BufferUAV">
            <summary>
            D3D12 버퍼 순서없는 접근 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferUAV.FirstElement">
            <summary>
            처음 원소의 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferUAV.NumElement">
            <summary>
            원소의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferUAV.StructureByteStride">
            <summary>
            원소의 바이트 단위 크기를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferUAV.CounterOffsetInBytes">
            <summary>
            카운터 자원의 오프셋을 바이트 단위로 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12BufferUAV.Flags">
            <summary>
            버퍼의 셰이더 자원 서술자 속성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12BufferUAV.ToString">
            <summary>
            개체의 단순 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CachedPipelineState">
            <summary>
            D3D12 캐시된 파이프라인 상태에 대한 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CachedPipelineState.pCachedBlob">
            <summary>
            캐시된 데이터 블록의 네이티브 포인터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CachedPipelineState.CachedBlobSizeInBytes">
            <summary>
            캐시된 데이터 블록의 바이트 단위 사이즈를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12CachedPipelineState.#ctor(System.IntPtr,System.UInt64)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12CachedPipelineState"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="pCachedBlob"> 캐시된 데이터 블록의 네이티브 포인터를 전달합니다. </param>
            <param name="cachedBlobSizeInBytes"> 캐시된 데이터 블록의 바이트 단위 사이즈를 나타냅니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ClearFlags">
            <summary>
            D3D12 초기화 플래그를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ClearFlags.Depth">
            <summary>
            깊이 값을 초기화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ClearFlags.Stencil">
            <summary>
            스텐실 값을 초기화합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ClearValue">
            <summary>
            D3D12 자원 초기화 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ClearValue.Format">
            <summary>
            자원의 유형을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ClearValue.Color">
            <summary>
            색상 초기화 값을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ClearValue.DepthStencil">
            <summary>
            깊이 및 스텐실 초기화 값을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ClearValue.CurrentType">
            <summary>
            현재 초기화 값으로 설정된 구조체의 값을 가져옵니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ClearValue.#ctor(SC.ThirdParty.DirectX.DXGIFormat,SmartEngine.Core.Numerics.Color)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ClearValue"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="format"> 자원의 형식을 전달합니다. </param>
            <param name="colorClear"> 자원의 색상 초기화 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ClearValue.#ctor(SC.ThirdParty.DirectX.DXGIFormat,SC.ThirdParty.DirectX.D3D12DepthStencilValue)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ClearValue"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="format"> 자원의 형식을 전달합니다. </param>
            <param name="depthStencilValue"> 자원의 깊이 및 스텐실 초기화 값을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ColorWriteEnable">
            <summary>
            D3D12 컬러 쓰기 활성화 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ColorWriteEnable.None">
            <summary>
            활성화하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ColorWriteEnable.Red">
            <summary>
            빨간색 값을 활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ColorWriteEnable.Green">
            <summary>
            초록색 값을 활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ColorWriteEnable.Blue">
            <summary>
            파란색 값을 활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ColorWriteEnable.Alpha">
            <summary>
            알파 값을 활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ColorWriteEnable.All">
            <summary>
            모든 값을 활성화합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CommandListType">
            <summary>
            D3D12 명령 목록 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandListType.Direct">
            <summary>
            명령 대기열에 직접 사용되는 유형입니다. 대부분의 작업을 수행할 수 있습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandListType.Bundle">
            <summary>
            명령 대기열에 간접적으로 제공되는 유형입니다. 이 명령은 다른 직접 명령에 의해 실행되어야 합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandListType.Compute">
            <summary>
            계산 및 복사 유형의 명령을 실행할 수 있는 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandListType.Copy">
            <summary>
            복사 유형의 명령을 실행할 수 있는 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandListType.VideoDecode">
            <summary>
            비디오 복호화 명령을 실행할 수 있는 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandListType.VideoProcess">
            <summary>
            비디오 연산 명령을 실행할 수 있는 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandListType.VideoEncode">
            <summary>
            비디오 암호화 명령을 실행할 수 있는 유형입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CommandQueueDesc">
            <summary>
            D3D12 명령 대기열 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueueDesc.Type">
            <summary>
            명령 대기열에서 실행할 명령 목록 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueueDesc.Priority">
            <summary>
            명령 대기열의 우선 순위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueueDesc.Flags">
            <summary>
            명령 대기열의 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueueDesc.NodeMask">
            <summary>
            명령 대기열의 관측 비트 마스크를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12CommandQueueDesc.#ctor(SC.ThirdParty.DirectX.D3D12CommandListType,SC.ThirdParty.DirectX.D3D12CommandQueuePriority)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12CommandQueueDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <param name="priority"> 우선 순위를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12CommandQueueDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CommandQueueFlags">
            <summary>
            D3D12 명령 대기열 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueueFlags.None">
            <summary>
            속성을 사용하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueueFlags.DisableGPUTimeout">
            <summary>
            GPU 타임아웃을 비활성화합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CommandQueuePriority">
            <summary>
            D3D12 명령 대기열의 우선 순위를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueuePriority.Normal">
            <summary>
            기본값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueuePriority.High">
            <summary>
            높은 우선 순위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandQueuePriority.GlobalRelatime">
            <summary>
            실시간 우선 순위를 나타냅니다. 이 우선 순위를 사용하려면 응용 프로그램에 충분한 권한이 있어야 합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CommandSignatureDesc">
            <summary>
            D3D12 명령 서명 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandSignatureDesc.ByteStride">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandSignatureDesc.ArgumentDescs">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CommandSignatureDesc.NodeMask">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ComparisonFunc">
            <summary>
            D3D12 비교 함수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.Never">
            <summary>
            항상 false를 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.Less">
            <summary>
            원본이 대상보다 작으면 true를 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.Equal">
            <summary>
            원본과 대상이 같으면 true를 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.LessEqual">
            <summary>
            원본이 대상보다 작거나 같으면 true를 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.Greater">
            <summary>
            원본이 대상보다 크면 true를 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.NotEqual">
            <summary>
            원본과 대상이 같지 않으면 true를 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.GreaterEqual">
            <summary>
            원본이 대상보다 크거나 같으면 true를 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComparisonFunc.Always">
            <summary>
            항상 true를 반환합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc">
            <summary>
            D3D12 계산 파이프라인 정보를 서술하는 구조체입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc.pRootSignature">
            <summary>
            입력 서명 개체를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc.CS">
            <summary>
            계산 셰이더 바이트코드 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc.NodeMask">
            <summary>
            장치 관측 노드 마스크를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc.CachedPSO">
            <summary>
            캐시된 파이프라인 상태 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc.Flags">
            <summary>
            파이프라인 상태 속성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc.#ctor(SC.ThirdParty.DirectX.ID3D12RootSignature)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="rootSignature"> 입력 서명 개체를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationMode">
            <summary>
            D3D12 전통적 래스터라이즈 모드의 활성화 여부를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationMode.Off">
            <summary>
            비활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationMode.On">
            <summary>
            활성화합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationTier">
            <summary>
            D3D12 전통적 래스터라이즈 티어를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationTier.NotSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationTier.Tier1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationTier.Tier2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConservativeRasterizationTier.Tier3">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc">
            <summary>
            D3D12 상수 버퍼 서술자에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc.BufferLocation">
            <summary>
            버퍼의 GPU 가상 주소를 전달합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc.SizeInBytes">
            <summary>
            버퍼의 크기를 전달합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc.#ctor(SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="constantBuffer"> 상수 버퍼 리소스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc.#ctor(System.UInt64,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="bufferLocation"> 버퍼의 GPU 가상 주소를 전달합니다. </param>
            <param name="sizeInBytes"> 버퍼의 크기를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle">
            <summary>
            D3D12 CPU 서술자 핸들을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle.ptr">
            <summary>
            서술자 핸들의 위치를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle.#ctor(System.IntPtr)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="ptr"> 핸들의 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle.Offset(System.UInt32,System.Int32)">
            <summary>
            서술자 핸들을 지정한 위치만큼 이동합니다.
            </summary>
            <param name="stride"> 핸들의 이동 크기를 전달합니다. </param>
            <param name="offset"> 이동할 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CPUPageProperty">
            <summary>
            CPU 엑세스에 대한 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CPUPageProperty.Unknown">
            <summary>
            알 수 없는 속성을 의미합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CPUPageProperty.NotAvailable">
            <summary>
            CPU 엑세스가 지원되지 않음을 의미합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CPUPageProperty.WriteCombine">
            <summary>
            CPU에서 전송된 데이터가 병합됨을 의미합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CPUPageProperty.WriteBack">
            <summary>
            CPU에서 GPU 데이터를 읽을 수 있음을 의미합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CrossNodeSharingTier">
            <summary>
            D3D12 크로스 장치 노드의 공유 티어를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CrossNodeSharingTier.NotSupported">
            <summary>
            지원하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CrossNodeSharingTier.Tier1Emulated">
            <summary>
            에뮬레이트 된 1티어를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CrossNodeSharingTier.Tier1">
            <summary>
            1티어를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CrossNodeSharingTier.Tier2">
            <summary>
            2티어를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CrossNodeSharingTier.Tier3">
            <summary>
            3티어를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12CullMode">
            <summary>
            D3D12 선별 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CullMode.None">
            <summary>
            선별하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CullMode.Front">
            <summary>
            전면을 선별합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12CullMode.Back">
            <summary>
            후면을 선별합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DepthStencilDesc">
            <summary>
            D3D12 깊이 스텐실 상태를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.DepthEnable">
            <summary>
            깊이 상태의 활성화 여부를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.DepthWriteMask">
            <summary>
            깊이 쓰기 마스크를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.DepthFunc">
            <summary>
            깊이 비교 함수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.StencilEnable">
            <summary>
            스텐실 활성화 여부를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.StencilReadMask">
            <summary>
            스텐실 읽기 마스크를 비트 단위로 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.StencilWriteMask">
            <summary>
            스텐실 쓰기 마스크를 비트 단위로 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.FrontFace">
            <summary>
            선별되지 않은 전면 기하 도형에 대한 스텐실 연산 방식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.BackFace">
            <summary>
            선별되지 않은 후면 기하 도형에 대한 스텐실 연산 방식을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.Default">
            <summary>
            기본값을 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilDesc.DepthTest">
            <summary>
            기본 깊이 테스트를 수행하는 서술 구조체를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DepthStencilOPDesc">
            <summary>
            D3D12 스텐실 연산자 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilOPDesc.StencilFailOp">
            <summary>
            스텐실 테스트에 실패했을 경우에 대한 스텐실 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilOPDesc.StencilDepthFailOp">
            <summary>
            깊이 테스트에 실패했을 경우에 대한 스텐실 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilOPDesc.StencilPassOp">
            <summary>
            스텐실 테스트에 성공했을 경우에 대한 스텐실 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilOPDesc.StencilFunc">
            <summary>
            스텐실 연산 함수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DepthStencilValue">
            <summary>
            D3D12 깊이 및 스텐실 쌍을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilValue.Depth">
            <summary>
            깊이 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilValue.Stencil">
            <summary>
            스텐실 값을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc">
            <summary>
            D3D12 깊이 스텐실 서술자에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Format">
            <summary>
            자원의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.ViewDimension">
            <summary>
            자원의 차원을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Flags">
            <summary>
            깊이 스텐실 속성을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Texture1D">
            <summary>
            1차원 텍스처 깊이 스텐실 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Texture1DArray">
            <summary>
            1차원 텍스처 배열 깊이 스텐실에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Texture2D">
            <summary>
            2차원 텍스처 깊이 스텐실에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Texture2DArray">
            <summary>
            2차원 텍스처 배열 깊이 스텐실에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Texture2DMS">
            <summary>
            2차원 멀티샘플 텍스처 깊이 스텐실에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc.Texture2DMSArray">
            <summary>
            2차원 멀티샘플 텍스처 배열 깊이 스텐실에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DepthWriteMask">
            <summary>
            D3D12 깊이 쓰기 마스크를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthWriteMask.Zero">
            <summary>
            값을 쓰지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DepthWriteMask.All">
            <summary>
            모든 값을 씁니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc">
            <summary>
            D3D12 서술자 힙에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc.Type">
            <summary>
            서술자 힙 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc.NumDescriptors">
            <summary>
            서술자 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc.Flags">
            <summary>
            서술자 힙 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc.NodeMask">
            <summary>
            힙의 노드 마스크를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc.#ctor(SC.ThirdParty.DirectX.D3D12DescriptorHeapType,System.UInt32,System.Boolean)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="type"> 힙 유형을 전달합니다. </param>
            <param name="numDescriptors"> 개수를 전달합니다. </param>
            <param name="isShaderVisible"> 힙의 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DescriptorHeapFlags">
            <summary>
            D3D12 서술자 힙 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapFlags.None">
            <summary>
            속성 없음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapFlags.ShaderVisible">
            <summary>
            셰이더 관측 가능을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DescriptorHeapType">
            <summary>
            D3D12 서술자 힙 유형을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapType.CBV_SRV_UAV">
            <summary>
            상수 버퍼 서술자, 셰이더 자원 서술자, 순서없는 접근 서술자에 대한 힙을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapType.SAPMLER">
            <summary>
            샘플러에 대한 힙을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapType.RTV">
            <summary>
            렌더 타겟 서술자에 대한 힙을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorHeapType.DSV">
            <summary>
            깊이 스텐실 서술자에 대한 힙을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DescriptorRange">
            <summary>
            D3D12 서술자 범위에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRange.RangeType">
            <summary>
            서술자 범위 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRange.NumDescriptors">
            <summary>
            서술자 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRange.BaseShaderRegister">
            <summary>
            서술자의 레지스터 번호의 첫 번째를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRange.RegisterSpace">
            <summary>
            레지스터 공간을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRange.OffsetInDescriptorsFromTableStart">
            <summary>
            테이블 시작 지점으로부터의 오프셋을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DescriptorRangeType">
            <summary>
            D3D12 서술자 범위 유형을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRangeType.SRV">
            <summary>
            셰이더 자원 서술자에 대한 범위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRangeType.UAV">
            <summary>
            순서없는 접근 서술자에 대한 범위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRangeType.CBV">
            <summary>
            상수 버퍼 서술자에 대한 범위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DescriptorRangeType.SAMPLER">
            <summary>
            샘플러 서술자에 대한 범위를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DiscardRegion">
            <summary>
            D3D12 버려질 영역에 대한 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DiscardRegion.Rects">
            <summary>
            버려질 영역 목록을 표현합니다. null일 경우 전체 영역을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DiscardRegion.FirstSubresource">
            <summary>
            첫 번째 서브리소스 인덱스를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DiscardRegion.NumSubresources">
            <summary>
            서브리소스 개수를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12DiscardRegion.#ctor(System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12DiscardRegion"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="numSubresources"> 서브리소스 개수를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DSVDimension">
            <summary>
            D3D12 깊이 스텐실 서술자의 차원을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVDimension.Unknown">
            <summary>
            알 수 없는 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVDimension.Texture1D">
            <summary>
            1차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVDimension.Texture1DArray">
            <summary>
            1차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVDimension.Texture2D">
            <summary>
            2차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVDimension.Texture2DArray">
            <summary>
            2차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVDimension.Texture2DMS">
            <summary>
            2차원 멀티샘플 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVDimension.Texture2DMSArray">
            <summary>
            2차원 멀티샘플 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12DSVFlags">
            <summary>
            D3D12 깊이 스텐실 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVFlags.None">
            <summary>
            아무 속성도 사용하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVFlags.ReadOnlyDepth">
            <summary>
            깊이 읽기 전용 속성입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12DSVFlags.ReadOnlyStencil">
            <summary>
            스텐실 읽기 전용 속성입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture">
            <summary>
            D3D12 아키텍처에 관한 정보를 조회합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture.NodeIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture.TileBasedRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture.UMA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture.CacheCoherentUMA">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture1">
            <summary>
            D3D12 아키텍처에 관한 정보를 조회합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture1.NodeIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture1.TileBasedRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture1.UMA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture1.CacheCoherentUMA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataArchitecture1.IsolatedMMU">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options">
            <summary>
            D3D12 추가 기능에 대한 기능 단계를 점검합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.DoublePrecisionFloatShaderOps">
            <summary>
            셰이더에서 배정밀도 부동 소수점 값을 사용할 수 있습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.OutputMergerLogicOp">
            <summary>
            출력 병합기에서 논리 연산을 사용할 수 있습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.MinPrecisionSupport">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.TiledResourceTier">
            <summary>
            지원되는 타일 리소스 티어 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.ResourceBindingTier">
            <summary>
            리소스 바인딩 티어 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.PSSpecifiedStencilRefSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.TypedUAVLoadAdditionalFormats">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.ROVsSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.ConservativeRasterizationTier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.MaxGPUVirtualAddressBitsPerResource">
            <summary>
            리소스당 GPU 가상 주소의 최대 비트 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.StandardSwizzle64KBSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.CrossNodeSharingTier">
            <summary>
            크로스 장치 노드 공유 티어를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.CrossAdapterRowMajorTextureSupported">
            <summary>
            크로스 어댑터에서 열 우선 텍스처를 지원하는지 여부를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options.ResourceHeapTier">
            <summary>
            리소스 힙의 티어를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options1">
            <summary>
            D3D12 추가 기능에 대한 기능 단계를 점검합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options1.WaveOps">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options1.WaveLaneCountMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options1.WaveLaneCountMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options1.TotalLaneCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options1.ExpandedComputeResourceStates">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options1.Int64ShaderOps">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options2">
            <summary>
            D3D12 추가 기능에 대한 기능 단계를 점검합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options2.DepthBoundsTestSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataD3D12Options2.ProgrammableSamplePositionsTier">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataFeatureLevels">
            <summary>
            D3D12 기능 레벨을 점검합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataFeatureLevels.pFeatureLevelsRequest">
            <summary>
            (입력 매개변수) 오름차순으로 정렬된 기능 레벨 목록을 나타냅니다. null일 경우, 전체 목록을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataFeatureLevels.MaxSupportedFeatureLevel">
            <summary>
            (출력 매개변수) 점검 결과, 지원 가능한 기능 레벨의 가장 높은 단계입니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12FeatureDataFeatureLevels.#ctor(SC.ThirdParty.DirectX.D3DFeatureLevel)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12FeatureDataFeatureLevels"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="minimumFeatureLevel"> 필요한 최소 기능 레벨을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataRootSignature">
            <summary>
            D3D12 입력 서명에 대한 기능 단계를 점검합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataRootSignature.HighestVersion">
            <summary>
            사용 가능한 최신 버전을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FeatureDataShaderModel">
            <summary>
            D3D12 셰이더 모델 레벨을 점검합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FeatureDataShaderModel.HighestShaderModel">
            <summary>
            지원 형식 중 가장 높은 단계의 셰이더 모델을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FenceFlags">
            <summary>
            D3D12 펜스 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FenceFlags.None">
            <summary>
            속성을 사용하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FenceFlags.Shared">
            <summary>
            공유된 펜스입을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FenceFlags.SharedCrossAdapter">
            <summary>
            크로스 어댑터 환경에서 고유된 펜스임을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FenceFlags.NonMonitored">
            <summary>
            모니터링 되지 않는 펜스 유형을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12FillMode">
            <summary>
            D3D12 채움 모드를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FillMode.Wireframe">
            <summary>
            내부를 채우지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12FillMode.Solid">
            <summary>
            내부를 채웁니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Filter">
            <summary>
            D3D12 샘플링 필터를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_POINT_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_LINEAR_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MIN_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.ANISOTROPIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_POINT_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_LINEAR_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_MIN_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.COMPARISON_ANISOTROPIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_MIN_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MINIMUM_ANISOTROPIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_MIN_MAG_MIP_LINEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Filter.MAXIMUM_ANISOTROPIC">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle">
            <summary>
            D3D12 CPU 서술자 핸들을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle.ptr">
            <summary>
            서술자 핸들의 위치를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle.#ctor(System.UInt64)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="ptr"> 핸들의 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle.Offset(System.UInt32,System.Int32)">
            <summary>
            서술자 핸들을 지정한 위치만큼 이동합니다.
            </summary>
            <param name="stride"> 핸들의 이동 크기를 전달합니다. </param>
            <param name="offset"> 이동할 위치를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc">
            <summary>
            D3D12 그래픽 파이프라인 정보를 서술하는 구조체입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.pRootSignature">
            <summary>
            입력 서명 개체를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.VS">
            <summary>
            정점 셰이더 바이트코드 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.PS">
            <summary>
            픽셀 셰이더 바이트코드 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.DS">
            <summary>
            영역 셰이더 바이트코드 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.HS">
            <summary>
            덮개 셰이더 바이트코드 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.GS">
            <summary>
            기하 셰이더 바이트코드 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.StreamOutput">
            <summary>
            스트림 출력 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.BlendState">
            <summary>
            블렌드 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.SampleMask">
            <summary>
            샘플 횟수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.RasterizerState">
            <summary>
            래스터라이저 서술 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.DepthStencilState">
            <summary>
            깊이 스텐실 상태 서술 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.InputLayout">
            <summary>
            입력 배치 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.IBStripCutValue">
            <summary>
            인덱스 버퍼 스트립 절단 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.PrimitiveTopologyType">
            <summary>
            기본 기하 도형의 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.NumRenderTargets">
            <summary>
            설정한 렌더 타겟 개수를 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.RTVFormats">
            <summary>
            렌더 타겟의 픽셀 형식 목록을 가져옵니다. 개체는 8개의 원소를 가지는 고정 배열입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.DSVFormat">
            <summary>
            깊이 스텐실 버퍼의 픽셀 형식 목록을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.SampleDesc">
            <summary>
            샘플 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.NodeMask">
            <summary>
            장치 관측 노드 마스크를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.CachedPSO">
            <summary>
            캐시된 파이프라인 상태 데이터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.Flags">
            <summary>
            파이프라인 상태 속성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc.#ctor(SC.ThirdParty.DirectX.ID3D12RootSignature)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="rootSignature"> 입력 서명 개체를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12HeapDesc">
            <summary>
            D3D12 힙 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapDesc.SizeInBytes">
            <summary>
            힙의 크기를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapDesc.Properties">
            <summary>
            힙의 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapDesc.Alignment">
            <summary>
            힙의 배치 정렬 단위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapDesc.Flags">
            <summary>
            힙의 속성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12HeapDesc.#ctor(System.UInt64,SC.ThirdParty.DirectX.D3D12HeapType)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12HeapDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="sizeInBytes"> 힙의 크기를 전달합니다. </param>
            <param name="type"> 힙의 유형을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12HeapDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12HeapFlags">
            <summary>
            힙 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.None">
            <summary>
            <see cref="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowAllBuffersAndTextures"/> 항목과 동일합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.Shared">
            <summary>
            공유된 힙임을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.DenyBuffers">
            <summary>
            버퍼 사용을 제한합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowDisplay">
            <summary>
            출력으로 사용을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.SharedCrossAdapter">
            <summary>
            멀티 어댑터 사용을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.DenyRTDSTextures">
            <summary>
            렌더 타겟 및 깊이 스텐실 텍스처로의 사용을 제한합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.DenyNonRTDSTextures">
            <summary>
            렌더 타겟 및 깊이 스텐실 대상이 아닌 텍스처로의 사용을 제한합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.HardwareProtected">
            <summary>
            하드웨어로 보호됨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowWriteWatch">
            <summary>
            쓰기 상태를 감시합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowShaderAtomics">
            <summary>
            셰이더 원자적 명령을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowAllBuffersAndTextures">
            <summary>
            모든 버퍼 및 텍스처로의 사용을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowOnlyBuffers">
            <summary>
            버퍼로의 사용만을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowOnlyNonRTDSTextures">
            <summary>
            렌더 타겟 및 깊이 스텐실이 아닌 텍스처로의 사용만을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapFlags.AllowOnlyRTDSTextures">
            <summary>
            렌더 타겟 및 깊이 스텐실 텍스처로의 사용만을 허용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12HeapProperties">
            <summary>
            D3D12 힙 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapProperties.Type">
            <summary>
            힙 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapProperties.CPUPageProperty">
            <summary>
            CPU 엑세스 가능성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapProperties.MemoryPoolPreference">
            <summary>
            GPU 메모리 위치에 대한 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapProperties.CreationNodeMask">
            <summary>
            생성 노드 마스크를 전달합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapProperties.VisibleNodeMask">
            <summary>
            관측 노드 마스크를 전달합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12HeapProperties.#ctor(SC.ThirdParty.DirectX.D3D12HeapType)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12HeapProperties"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="heapType"> 힙 유형을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12HeapType">
            <summary>
            D3D12 힙 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapType.Default">
            <summary>
            기본 힙 유형을 사용합니다. 일반적으로, GPU에서 읽기 및 쓰기가 가능하며 CPU에선 접근할 수 없습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapType.Upload">
            <summary>
            업로드 힙 유형을 사용합니다. 일반적으로, GPU에서 읽기가 가능하며 CPU에서 쓰기가 가능합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapType.Readback">
            <summary>
            CPU에서 읽기 위한 힙 유형입니다. 일반적으로, GPU에서 쓰기가 가능하며 CPU에서 읽기가 가능합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12HeapType.Custom">
            <summary>
            힙 유형을 직접 지정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndexBufferStripCutValue">
            <summary>
            D3D12 인덱스 버퍼 스트립의 절단 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndexBufferStripCutValue.Disabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndexBufferStripCutValue.xFFFF">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndexBufferStripCutValue.xFFFFFFFF">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndexBufferView">
            <summary>
            D3D12 인덱스 버퍼 서술자 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndexBufferView.BufferLocation">
            <summary>
            버퍼의 바이트 단위 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndexBufferView.SizeInBytes">
            <summary>
            버퍼의 바이트 단위 크기를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndexBufferView.Format">
            <summary>
            인덱스 버퍼의 인덱스 형식을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12IndexBufferView.#ctor(System.UInt64,SC.ThirdParty.DirectX.DXGIFormat,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12IndexBufferView"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
            <param name="format"> 인덱스 버퍼의 인덱스 형식을 전달합니다. </param>
            <param name="indexCount"> 인덱스 버퍼의 인덱스 개수를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12IndexBufferView.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndirectArgumentDesc">
            <summary>
            D3D12 간접 명령에 대한 매개변수 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentDesc.Type">
            <summary>
            간접 매개변수 유형을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12IndirectArgumentDesc.VertexBuffer">
            <summary>
            간접 매개변수 정점 버퍼 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12IndirectArgumentDesc.Constant">
            <summary>
            간접 매개변수 상수 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12IndirectArgumentDesc.ConstantBufferView">
            <summary>
            간접 매개변수 상수 버퍼 서술 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12IndirectArgumentDesc.ShaderResourceView">
            <summary>
            간접 매개변수 셰이더 자원 서술 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12IndirectArgumentDesc.UnorderedAccessView">
            <summary>
            간접 매개변수 순서없는 접근 서술 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndirectArgumentType">
            <summary>
            D3D12 간접 명령 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.DrawIndexed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.Dispatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.VertexBufferView">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.IndexBufferView">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.Constant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.ConstantBufferView">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.ShaderResourceView">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectArgumentType.UnorderedAccessView">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndirectConstantArgument">
            <summary>
            D3D12 간접 상수 매개변수 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectConstantArgument.RootParameterIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectConstantArgument.DestOffsetIn32BitValues">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectConstantArgument.Num32BitValuesToSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndirectConstantBufferViewArgument">
            <summary>
            D3D12 간접 상수 버퍼 서술 매개변수 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectConstantBufferViewArgument.RootParameterIndex">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndirectShaderResourceViewArgument">
            <summary>
            D3D12 간접 셰이더 자원 서술 매개변수 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectShaderResourceViewArgument.RootParameterIndex">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndirectUnorderedAccessViewArgument">
            <summary>
            D3D12 간접 순서없는 접근 서술 매개변수 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectUnorderedAccessViewArgument.RootParameterIndex">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12IndirectVertexBufferArgument">
            <summary>
            D3D12 간접 정점 버퍼 매개변수 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12IndirectVertexBufferArgument.Slot">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12InputClassification">
            <summary>
            D3D12 입력 분류를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputClassification.PerVertexData">
            <summary>
            입력이 정점 데이터와 매핑됨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputClassification.PerInstanceData">
            <summary>
            입력이 인스턴스 데이터와 매핑됨을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12InputElementDesc">
            <summary>
            D3D12 입력 원소에 대한 저옵를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputElementDesc.SemanticName">
            <summary>
            의미소 이름을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputElementDesc.SemanticIndex">
            <summary>
            의미소 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputElementDesc.Format">
            <summary>
            원소의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputElementDesc.InputSlot">
            <summary>
            입력 슬롯을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputElementDesc.AlignedByteOffset">
            <summary>
            정렬된 바이트 오프셋을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputElementDesc.InputSlotClass">
            <summary>
            입력 슬롯 분류를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputElementDesc.InstanceDataStepRate">
            <summary>
            
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12InputElementDesc.#ctor(System.String,SC.ThirdParty.DirectX.DXGIFormat,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12InputElementDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="name"> 의미소 이름을 전달합니다. </param>
            <param name="format"> 의미소 형식을 전달합니다. </param>
            <param name="offset"> 의미소가 이전 의미소에서 얼마만큼 이동하는지 나타내는 값을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12InputLayoutDesc">
            <summary>
            D3D12 입력 배치 서술 구조체를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12InputLayoutDesc.InputElementDescs">
            <summary>
            입력 요소 서술 구조체 목록을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12InputLayoutDesc.Add(System.String,SC.ThirdParty.DirectX.DXGIFormat,System.UInt32)">
            <summary>
            구조체에 새 요소를 추가합니다. <see cref="F:SC.ThirdParty.DirectX.D3D12InputLayoutDesc.InputElementDescs"/> 개체가 null일 경우 새 <see cref="T:System.Collections.Generic.List`1"/> 개체가 생성됩니다.
            </summary>
            <param name="name"> 요소 이름을 전달합니다. </param>
            <param name="format"> 요소 형식을 전달합니다. </param>
            <param name="offset"> 요소 오프셋을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12InputLayoutDesc.Add(SC.ThirdParty.DirectX.D3D12InputElementDesc)">
            <summary>
            구조체에 새 요소를 추가합니다. <see cref="F:SC.ThirdParty.DirectX.D3D12InputLayoutDesc.InputElementDescs"/> 개체가 null일 경우 새 <see cref="T:System.Collections.Generic.List`1"/> 개체가 생성됩니다.
            </summary>
            <param name="desc"> 요소 서술 구조체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12InputLayoutDesc.Add(System.String,SC.ThirdParty.DirectX.DXGIFormat)">
            <summary>
            구조체에 새 요소를 추가합니다. <see cref="F:SC.ThirdParty.DirectX.D3D12InputLayoutDesc.InputElementDescs"/> 개체가 null일 경우 새 <see cref="T:System.Collections.Generic.List`1"/> 개체가 생성됩니다. 요소 오프셋이 자동으로 설정됩니다.
            </summary>
            <param name="name"> 요소 이름을 전달합니다. </param>
            <param name="format"> 요소 형식을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12LogicOP">
            <summary>
            D3D12 논리 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Set">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Copy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.CopyInverted">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Noop">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Invert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.And">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Nand">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Or">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Nor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Xor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.Equiv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.AndReverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.AndInverted">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.OrReverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12LogicOP.OrInverted">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12MemoryPool">
            <summary>
            D3D12 GPU 메모리 단계를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12MemoryPool.Unknown">
            <summary>
            알 수 없는 메모리 단계입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12MemoryPool.L0">
            <summary>
            L0 단계입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12MemoryPool.L1">
            <summary>
            L1 단계입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12PackedMipInfo">
            <summary>
            D3D12 포장된 MIP 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PackedMipInfo.NumStandardMips">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PackedMipInfo.NumPackedMips">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PackedMipInfo.NumTilesForPackedMips">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PackedMipInfo.StartTileIndexInOverallResource">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12PipelineStateFlags">
            <summary>
            D3D12 파이프라인 상태 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PipelineStateFlags.None">
            <summary>
            아무 속성을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PipelineStateFlags.ToolDebug">
            <summary>
            디버그 상태를 활성화합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12PlacedSubresourceFootprint">
            <summary>
            D3D12 배치된 서브리소스 자원의 배치 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PlacedSubresourceFootprint.Offset">
            <summary>
            바이트 단위 오프셋을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PlacedSubresourceFootprint.Footprint">
            <summary>
            배치 형식을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12PredicationOP">
            <summary>
            D3D12 Predication 연산 방식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PredicationOP.EqualZero">
            <summary>
            값이 0과 같을 경우 참을 반환합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PredicationOP.NotEqualZero">
            <summary>
            값이 0과 같지 않을 경우 참을 반환합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12PrimitiveTopologyType">
            <summary>
            D3D12 기본 기하 도형의 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PrimitiveTopologyType.Undefined">
            <summary>
            정의되지 않은 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PrimitiveTopologyType.Point">
            <summary>
            점 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PrimitiveTopologyType.Line">
            <summary>
            선 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PrimitiveTopologyType.Triangle">
            <summary>
            삼각형 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12PrimitiveTopologyType.Patch">
            <summary>
            패치 컨트롤 형식을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ProgrammableSamplePositionsTier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ProgrammableSamplePositionsTier.NotSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ProgrammableSamplePositionsTier.Tier1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ProgrammableSamplePositionsTier.Tier2">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics">
            <summary>
            D3D12 파이프라인 통계 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.IAVertices">
            <summary>
            IA 스테이지에서 읽은 정점 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.IAPrimitives">
            <summary>
            IA 스테이지에서 읽은 기본 기하 모형 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.VSInvocations">
            <summary>
            정점 셰이더 호출 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.GSInvocations">
            <summary>
            기하 셰이더 호출 수를 나타냅니다. 기하 셰이더가 설정되지 않았을 경우 이 통계는 그래픽 어댑터 종류에 따라 증가하거나 증가하지 않을 수 있습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.GSPrimitives">
            <summary>
            기하 셰이더가 출력한 기본 기하 모형 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.CInvocations">
            <summary>
            래스터라이저 스테이지로 전송된 기본 기하 모형 수를 나타냅니다. 래스터라이저가 설정되지 않았을 경우 증가하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.CPrimitives">
            <summary>
            렌더링이 완료된 기본 기하 모형 수를 나타냅니다. 기본 기하 모형은 클리핑 및 분할 등에 의해 <see cref="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.CInvocations"/> 값보다 크거나 작을 수 있습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.PSInvocations">
            <summary>
            픽셀 셰이더 호출 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.HSInvocations">
            <summary>
            덮개 셰이더 호출 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.DSInvocations">
            <summary>
            영역 셰이더 호출 수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics.CSInvocations">
            <summary>
            계산 셰이더 호출 수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12QueryHeapDesc">
            <summary>
            D3D12 정보 요청 힙 서술 구조체를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapDesc.Type">
            <summary>
            정보 요청 힙 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapDesc.Count">
            <summary>
            정보 요청 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapDesc.NodeMask">
            <summary>
            노드 마스크를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12QueryHeapDesc.#ctor(SC.ThirdParty.DirectX.D3D12QueryHeapType,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12QueryHeapDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="type"> 힙 유형을 전달합니다. </param>
            <param name="count"> 요청 개수를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12QueryHeapType">
            <summary>
            D3D12 정보 요청 힙 유형을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapType.Occlusion">
            <summary>
            차폐 정보 요청 힙 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapType.Timestamp">
            <summary>
            시간 정보 요청 힙 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapType.PipelineStatistics">
            <summary>
            파이프라인 통계 요청 힙 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapType.SOStatistics">
            <summary>
            스트림 출력 통계 요청 힙 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapType.VideoDecodeStatistics">
            <summary>
            비디오 디코드 통계 요청 힙 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryHeapType.CopyQueueTimestamp">
            <summary>
            복사 대기열 시간 정보 요청 힙 유형입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12QueryType">
            <summary>
            D3D12 정보 요청 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.Occlusion">
            <summary>
            정보가 깊이 및 스텐실 검사에 통과한 횟수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.BinaryOcclusion">
            <summary>
            정보가 깊이 및 스텐실 검사에 통과하였는지 여부를 나타냅니다.
            </summary>
            <remarks> 이 유형은 0, 1의 결과만 반환한다는 점을 제외하고 <see cref="F:SC.ThirdParty.DirectX.D3D12QueryType.Occlusion"/> 유형과 같이 작동합니다. 0은 샘플이 깊이 및 스텐실 테스트를 통과하지 않음을 나타내고, 1은 하나 이상의 샘플이 깊이 및 스텐실 테스트를 통과했음을 나타냅니다. </remarks>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.Timestamp">
            <summary>
            정보가 고성능 GPU 시간임을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.PipelineStatistics">
            <summary>
            정보가 그래픽 파이프라인 통계에 대한 것임을 나타냅니다. <see cref="T:SC.ThirdParty.DirectX.D3D12QueryDataPipelineStatistics"/> 구조체 정보를 가져옵니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.SOStatisticsStream0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.SOStatisticsStream1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.SOStatisticsStream2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.SOStatisticsStream3">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12QueryType.VideoDecodeStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Range">
            <summary>
            D3D12 메모리 공간 범위를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Range.Begin">
            <summary>
            범위의 시작 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Range.End">
            <summary>
            범위의 끝 위치를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Range.#ctor(System.UInt64,System.UInt64)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12Range"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="begin"> 범위의 시작 위치를 전달합니다.</param>
            <param name="width"> 범위의 크기를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Range.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Range.Equals(System.Object)">
            <summary>
            두 개체가 같은지 비교합니다.
            </summary>
            <param name="right"> 비교 대상 개체를 전달합니다. </param>
            <returns> 비교 결과를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Range.GetHashCode">
            <summary>
            개체의 간단한 해쉬 값을 가져옵니다.
            </summary>
            <returns> 해쉬 값을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Range.Equals(SC.ThirdParty.DirectX.D3D12Range)">
            <summary>
            두 개체가 같은지 비교합니다.
            </summary>
            <param name="right"> 비교 대상 개체를 전달합니다. </param>
            <returns> 비교 결과를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Range.Offset(System.Int64)">
            <summary>
            범위의 시작 위치 및 종료 위치를 함께 이동합니다.
            </summary>
            <param name="offset"> 이동량을 전달합니다. </param>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12Range.Width">
            <summary>
            범위의 크기를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RasterizerDesc">
            <summary>
            D3D12 래스터라이저 서술 구조체를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.FillMode">
            <summary>
            내부 채움 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.CullMode">
            <summary>
            선별 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.FrontCounterClockwise">
            <summary>
            반시계방향으로 삼각형을 생성합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.DepthBias">
            <summary>
            깊이 바이어스 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.DepthBiasClamp">
            <summary>
            깊이 바이어스 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.SlopeScaledDepthBias">
            <summary>
            기울기 비례 깊이 바이어스 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.DepthClipEnable">
            <summary>
            깊이 자르기를 활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.MultisampleEnable">
            <summary>
            멀티샘플을 활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.AntialiasedLineEnable">
            <summary>
            안티앨리어싱 선분을 활성화합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.ForcedSampleCount">
            <summary>
            강제 샘플 횟수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RasterizerDesc.ConservativeRaster">
            <summary>
            전통적 래스터라이즈 모드를 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RasterizerDesc.Default">
            <summary>
            기본 래스터라이즈 상태를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RasterizerDesc.Wireframe">
            <summary>
            와이어프레임 래스터라이즈 상태를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RaytracingAccelerationStructureSRV">
            <summary>
            D3D12 레이트레이싱 가속화 구조체 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RaytracingAccelerationStructureSRV.Location">
            <summary>
            가속화 구조체 자원의 GPU 가상 주소를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RaytracingAccelerationStructureSRV.#ctor(SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12RaytracingAccelerationStructureSRV"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc">
            <summary>
            D3D12 렌더 타겟에 대한 블렌드 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.BlendEnable">
            <summary>
            블렌드 활성화 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.LogicOpEnable">
            <summary>
            논리 연산 활성화 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.SrcBlend">
            <summary>
            원본 블렌드 계수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.DestBlend">
            <summary>
            대상 블렌드 계수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.BlendOp">
            <summary>
            블렌드 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.SrcBlendAlpha">
            <summary>
            원본 알파 블렌드 계수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.DestBlendAlpha">
            <summary>
            대상 알파 블렌드 계수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.BlendOpAlpha">
            <summary>
            알파 블렌드 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.LogicOp">
            <summary>
            논리 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.RenderTargetWriteMask">
            <summary>
            렌더 타겟 컬러 쓰기 활성화를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.Default">
            <summary>
            기본값으로 설정된 정보 서술 구조체를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetBlendDesc.AlphaBlend">
            <summary>
            알파 블렌드를 사용하는 정보 서술 구조체를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc">
            <summary>
            D3D12 렌더 타겟 서술자에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Format">
            <summary>
            자원의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.ViewDimension">
            <summary>
            자원의 차원을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Buffer">
            <summary>
            버퍼 렌더 타겟에 대한 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Texture1D">
            <summary>
            1차원 텍스처 렌더 타겟에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Texture1DArray">
            <summary>
            1차원 텍스처 배열 렌더 타겟에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Texture2D">
            <summary>
            2차원 텍스처 렌더 타겟에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Texture2DArray">
            <summary>
            2차원 텍스처 배열 렌더 타겟에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Texture2DMS">
            <summary>
            2차원 멀티샘플 텍스처 렌더 타겟에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Texture2DMSArray">
            <summary>
            2차원 멀티샘플 텍스처 배열 렌더 타겟에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc.Texture3D">
            <summary>
            3차원 텍스처 렌더 타겟에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier">
            <summary>
            D3D12 자원 앨리어싱 장벽을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier.pResourceBefore">
            <summary>
            이전 자원 상태를 전달합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier.pResourceAfter">
            <summary>
            이후 자원 상태를 전달합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier.#ctor(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="resourceBefore"> 이전 자원 상태를 전달합니다. </param>
            <param name="resourceAfter"> 이후 자원 상태를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier.Swap">
            <summary>
            자원의 변환 이전 상태와 이후 상태를 교환합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceAllocationInfo">
            <summary>
            D3D12 리소스 할당 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceAllocationInfo.SizeInBytes">
            <summary>
            할당 크기를 바이트 단위로 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceAllocationInfo.Alignment">
            <summary>
            할당 정렬을 바이트 단위로 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceAllocationInfo.ToString">
            <summary>
            개체의 간단한 정보를 텍스트 형식으로 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceBarrier">
            <summary>
            D3D12 자원 상태 장벽을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrier.Type">
            <summary>
            자원 장벽 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrier.Flags">
            <summary>
            자원 장벽 속성을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ResourceBarrier.Transition">
            <summary>
            자원 상태 전이 장벽을 나타냅니다. <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.Transition"/> 유형일 경우 사용됩니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ResourceBarrier.Aliasing">
            <summary>
            자원 앨리어싱 장벽을 나타냅니다. <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.Aliasing"/> 유형일 경우 사용됩니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ResourceBarrier.UAV">
            <summary>
            순서없는 접근 자원 장벽을 나타냅니다. <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.UAV"/> 유형일 경우 사용됩니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceBarrier.#ctor(SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ResourceBarrier"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="transition"> 상태 전이 장벽을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceBarrier.#ctor(SC.ThirdParty.DirectX.D3D12ResourceAliasingBarrier)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ResourceBarrier"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="aliasing"> 앨리어싱 장벽을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceBarrier.#ctor(SC.ThirdParty.DirectX.D3D12ResourceUAVBarrier)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ResourceBarrier"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="uav"> 순서없는 접근 장벽을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceBarrier.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceBarrier.Swap">
            <summary>
            자원의 변환 이전 상태와 이후 상태를 교환합니다. 이 메서드는 <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.Transition"/> 또는 <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.Aliasing"/> 일 경우에만 작동합니다.
            </summary>
            <returns> 교환에 성공하였을 경우 true를, 아닐 경우 false를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceBarrier.TransitionBarrier(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12ResourceStates,SC.ThirdParty.DirectX.D3D12ResourceStates,System.UInt32)">
            <summary>
            자원 상태 전이 배리어 구조체를 생성합니다.
            </summary>
            <param name="pResource"> 자원을 전달합니다. </param>
            <param name="stateBefore"> 변경 이전 상태를 전달합니다. </param>
            <param name="stateAfter"> 변경 이후 상태를 전달합니다. </param>
            <param name="subresourceIndex"> 서브리소스 인덱스를 전달합니다. </param>
            <returns> 생성된 구조체가 반환됩니다.</returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceBarrierFlags">
            <summary>
            D3D12 자원 장벽 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierFlags.None">
            <summary>
            아무 속성도 나타내지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierFlags.BeginOnly">
            <summary>
            장벽 시작만을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierFlags.EndOnly">
            <summary>
            장벽 종료만을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceBarrierType">
            <summary>
            D3D12 자원 장벽 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.Transition">
            <summary>
            자원 상태 전이 장벽 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.Aliasing">
            <summary>
            자원 앨리어싱 장벽 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBarrierType.UAV">
            <summary>
            순서없는 접근 장벽 유형을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceBindingTier">
            <summary>
            D3D12 리소스 바인딩 티어를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBindingTier.Tier1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBindingTier.Tier2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceBindingTier.Tier3">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceDesc">
            <summary>
            D3D12 자원의 정보를 서술하는 구조체를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.Dimension">
            <summary>
            자원의 차원 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.Alignment">
            <summary>
            자원의 정렬 바이트 단위를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.Width">
            <summary>
            자원의 너비를 나타냅니다. 버퍼 및 1차원 자원의 경우 이 값은 바이트 단위 크기가 됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.Height">
            <summary>
            자원의 높이를 나타냅니다. 버퍼 및 1차원 자원의 경우 이 값은 1이 되어야 합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.DepthOrArraySize">
            <summary>
            자원의 깊이를 나타냅니다. 버퍼 및 1차원, 2차원 자원의 경우 이 값은 1이 되어야 합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.MipLevels">
            <summary>
            자원의 MIP 레벨 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.Format">
            <summary>
            자원의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.SampleDesc">
            <summary>
            자원의 샘플 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.Layout">
            <summary>
            자원의 배치 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDesc.Flags">
            <summary>
            자원의 속성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceDesc.#ctor(SC.ThirdParty.DirectX.D3D12ResourceDimension,System.UInt64,System.UInt32,SC.ThirdParty.DirectX.DXGIFormat,SC.ThirdParty.DirectX.D3D12TextureLayout,SC.ThirdParty.DirectX.D3D12ResourceFlags)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ResourceDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="dimension"> 자원의 차원 형식을 전달합니다. </param>
            <param name="width"> 자원의 너비를 전달합니다. </param>
            <param name="height"> 자원의 높이를 전달합니다. </param>
            <param name="format"> 자원의 형식을 전달합니다. </param>
            <param name="layout"> 자원의 배치 형식을 전달합니다. </param>
            <param name="flags"> 자원의 속성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceDesc.Buffer(System.UInt64,SC.ThirdParty.DirectX.D3D12ResourceFlags)">
            <summary>
            버퍼 형식의 자원에 대한 서술 구조체로 초기화합니다.
            </summary>
            <param name="sizeInBytes"> 버퍼의 바이트 단위 크기를 전달합니다. </param>
            <param name="flags"> 버퍼의 속성을 전달합니다. </param>
            <returns> 생성된 서술 구조체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceDesc.Texture2D(System.UInt64,System.UInt32,SC.ThirdParty.DirectX.DXGIFormat,SC.ThirdParty.DirectX.D3D12ResourceFlags,System.UInt16)">
            <summary>
            2차원 텍스처 형식의 자원에 대한 서술 구조체로 초기화합니다.
            </summary>
            <param name="width"> 2차원 텍스처의 너비를 전달합니다. </param>
            <param name="height"> 2차원 텍스처의 높이를 전달합니다. </param>
            <param name="format"> 2차원 텍스처의 형식을 전달합니다. </param>
            <param name="flags"> 2차원 텍스처의 속성을 전달합니다. </param>
            <param name="mipLevels"> 2차원 텍스처의 MIP 레벨 개수를 전달합니다. </param>
            <returns> 생성된 서술 구조체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceDimension">
            <summary>
            자원의 차원을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDimension.Unknown">
            <summary>
            자원이 알 수 없는 형식을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDimension.Buffer">
            <summary>
            자원이 버퍼임을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDimension.Texture1D">
            <summary>
            자원이 1차원 텍스처임을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDimension.Texture2D">
            <summary>
            자원이 2차원 텍스처임을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceDimension.Texture3D">
            <summary>
            자원이 3차원 텍스처임을 표현합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceFlags">
            <summary>
            D3D12 자원의 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.None">
            <summary>
            아무 속성을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.AllowRenderTarget">
            <summary>
            자원이 렌더 타겟으로 사용되도록 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.AllowDepthStencil">
            <summary>
            자원이 깊이 스텐실로 사용되도록 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.AllowUnorderedAccess">
            <summary>
            자원이 순서없는 접근으로 사용되도록 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.DenyShaderResource">
            <summary>
            자원이 셰이더 자원으로 사용될 수 없습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.AllowCrossAdapter">
            <summary>
            자원이 다중 어댑터에서 사용될 수 있도록 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.AllowSimultaneousAccess">
            <summary>
            자원이 동시에 엑세스 될 수 있도록 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceFlags.VideoDecodeReferenceOnly">
            <summary>
            자원이 비디오 디코드 전용으로 사용되도록 합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceHeapTier">
            <summary>
            D3D12 리소스 힙 티어를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceHeapTier.Tier1">
            <summary>
            1티어 리소스 힙을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceHeapTier.Tier2">
            <summary>
            2티어 리소스 힙을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceStates">
            <summary>
            D3D12 자원 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.Common">
            <summary>
            일반 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.VertexAndConstantBuffer">
            <summary>
            정점 및 상수 버퍼를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.IndexBuffer">
            <summary>
            인덱스 버퍼를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.RenderTarget">
            <summary>
            렌더 타겟 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.UnorderedAccess">
            <summary>
            순서없는 접근 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.DepthWrite">
            <summary>
            깊이 쓰기 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.DepthRead">
            <summary>
            깊이 읽기 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.NonPixelShaderResource">
            <summary>
            픽셀 셰이더가 아닌 셰이더의 자원으로 사용됨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.PixelShaderResource">
            <summary>
            픽셀 셰이더의 자원으로 사용됨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.StreamOut">
            <summary>
            스트림 아웃 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.IndirectArgument">
            <summary>
            간접 명령 버퍼의 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.CopyDest">
            <summary>
            복사 대상으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.CopySource">
            <summary>
            복사 원본으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.ResolveDest">
            <summary>
            샘플링 해결 대상으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.ResolveSource">
            <summary>
            샘플링 원본으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.RaytracingAccelerationStructure">
            <summary>
            레이트레이싱 가속화 구조체 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.ShadingRateSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.GenericRead">
            <summary>
            <para> 일반적 읽기 가능 조합을 사용합니다. </para>
            <para> <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceStates.VertexAndConstantBuffer"/> </para>
            <para> <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceStates.IndexBuffer"/> </para>
            <para> <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceStates.NonPixelShaderResource"/> </para>
            <para> <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceStates.PixelShaderResource"/> </para>
            <para> <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceStates.IndirectArgument"/> </para>
            <para> <see cref="F:SC.ThirdParty.DirectX.D3D12ResourceStates.CopySource"/> </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.Present">
            <summary>
            디스플레이 출력 가능 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.Predication">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceStates.VideoDecodeRead">
            <summary>
            비디오 복호화 읽기 상태를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier">
            <summary>
            D3D12 자원 상태 전이 장벽을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier.pResource">
            <summary>
            대상 자원을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier.Subresource">
            <summary>
            서브리소스 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier.StateBefore">
            <summary>
            이전 상태를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier.StateAfter">
            <summary>
            변경 이후 상태를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier.#ctor(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12ResourceStates,SC.ThirdParty.DirectX.D3D12ResourceStates)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="resource"> 대상 자원 개체를 전달합니다. </param>
            <param name="stateBefore"> 변환 이전 상태를 나타냅니다. </param>
            <param name="stateAfter"> 변환 이후 상태를 나타냅니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceTransitionBarrier.Swap">
            <summary>
            자원의 변환 이전 상태와 이후 상태를 교환합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ResourceUAVBarrier">
            <summary>
            D3D12 자원의 순서없는 접근 장벽을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ResourceUAVBarrier.pResource">
            <summary>
            대상 자원을 전달합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ResourceUAVBarrier.#ctor(SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ResourceUAVBarrier"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="resource"> 대상 자원 개체를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RootConstants">
            <summary>
            D3D12 루트 서명 32비트 상수에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootConstants.ShaderRegister">
            <summary>
            셰이더 레지스터 번호를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootConstants.RegisterSpace">
            <summary>
            레지스터 공간을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootConstants.Num32BitValues">
            <summary>
            32비트 값의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RootDescriptor">
            <summary>
            D3D12 루트 서명 서술자에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootDescriptor.ShaderRegister">
            <summary>
            셰이더 레지스터 번호를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootDescriptor.RegisterSpace">
            <summary>
            레지스터 공간을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RootDescriptorTable">
            <summary>
            D3D12 루트 서명 서술자 테이블에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootDescriptorTable.DescriptorRanges">
            <summary>
            서술자 범위 목록을 전달합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RootParameter">
            <summary>
            D3D12 셰이더 입력 매개변수를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootParameter.ParameterType">
            <summary>
            루트 서명 매개변수의 유형을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootParameter.DescriptorTable">
            <summary>
            서술자 테이블에 대한 정보를 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootParameter.Constants">
            <summary>
            32비트 상수에 대한 정보를 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootParameter.Descriptor">
            <summary>
            루트 서명 서술자에 대한 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootParameter.ShaderVisibility">
            <summary>
            셰이더 관측 가능성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootParameter.#ctor(SC.ThirdParty.DirectX.D3D12RootDescriptorTable,SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12RootParameter"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="descriptorTable"> 서술자 테이블 정보를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootParameter.#ctor(SC.ThirdParty.DirectX.D3D12RootConstants,SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12RootParameter"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="constants"> 32비트 상수에 대한 정보를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootParameter.#ctor(SC.ThirdParty.DirectX.D3D12RootParameterType,System.UInt32,SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12RootParameter"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="type"> 서술자 유형을 전달합니다. </param>
            <param name="shaderRegister"> 레지스터 번호를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RootParameterType">
            <summary>
            D3D12 입력 서명 매개변수의 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootParameterType.DescriptorTable">
            <summary>
            서술자 테이블 개체에 대한 매개변수를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootParameterType.Constants32Bit">
            <summary>
            32비트 상수 매개변수를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootParameterType.CBV">
            <summary>
            상수 버퍼 서술자 매개변수를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootParameterType.SRV">
            <summary>
            셰이더 자원 서술자 매개변수를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootParameterType.UAV">
            <summary>
            순서없는 접근 서술자 매개변수를 사용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RootSignatureDesc">
            <summary>
            D3D12 입력 서명 개체에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.Parameters">
            <summary>
            루트 서명 매개변수 목록을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.StaticSamplers">
            <summary>
            정적 샘플러 목록을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.Flags">
            <summary>
            루트 서명 개체의 속성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AddRoot32BitConstants(System.UInt32,System.UInt32,SC.ThirdParty.DirectX.D3D12ShaderVisibility,System.UInt32)">
            <summary>
            루트 서명 매개변수 목록에 32비트 상수 정보를 추가합니다.
            </summary>
            <param name="shaderRegister"> 레지스터 번호를 전달합니다. </param>
            <param name="num32BitValues"> 32비트 데이터 개수를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
            <param name="registerSpace"> 레지스터 공간을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AddConstantBufferView(System.UInt32,SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            루트 상수 버퍼 서술자를 매개변수 목록에 추가합니다.
            </summary>
            <param name="shaderRegister"> 레지스터 번호를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AddShaderResourceView(System.UInt32,SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            루트 셰이더 자원 서술자를 매개변수 목록에 추가합니다.
            </summary>
            <param name="shaderRegister"> 레지스터 번호를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AddUnorderedAccessView(System.UInt32,SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            루트 순서없는 접근 서술자를 매개변수 목록에 추가합니다.
            </summary>
            <param name="shaderRegister"> 레지스터 번호를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AddDescriptorTable(System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12DescriptorRange},SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            서술자 목록에 서술자 테이블 목록을 추가합니다.
            </summary>
            <param name="descriptorRanges"> 서술자 테이블 목록을 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AddDescriptorTable(SC.ThirdParty.DirectX.D3D12ShaderVisibility,SC.ThirdParty.DirectX.D3D12DescriptorRange[])">
            <summary>
            서술자 목록에 서술자 테이블 목록을 추가합니다.
            </summary>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
            <param name="descriptorRanges"> 서술자 테이블 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AddStaticSampler(SC.ThirdParty.DirectX.D3D12StaticSamplerDesc)">
            <summary>
            정적 샘플러 목록에 새 샘플러 정보를 추가합니다.
            </summary>
            <param name="staticSamplerDesc"> 샘플러 정보를 전달합니다. </param>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.AllowInputAssemblerInputLayout">
            <summary>
            입력 어셈블러 및 입력 배치의 루트 서명 접근을 허용하는 값을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.DenyVertexShaderRootAccess">
            <summary>
            정점 셰이더에서 루트 서명에 엑세스하는 것을 비허용합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.DenyPixelShaderRootAccess">
            <summary>
            픽셀 셰이더에서 루트 서명에 엑세스하는 것을 비허용합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.DenyDomainShaderRootAccess">
            <summary>
            영역 셰이더에서 루트 서명에 엑세스하는 것을 비허용합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.DenyHullShaderRootAccess">
            <summary>
            덮개 셰이더에서 루트 서명에 엑세스하는 것을 비허용합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12RootSignatureDesc.DenyGeometryShaderRootAccess">
            <summary>
            기하 셰이더에서 루트 서명에 엑세스하는 것을 비허용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RootSignatureFlags">
            <summary>
            D3D12 루트 서명 개체의 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.None">
            <summary>
            아무 속성도 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.AllowInputAssemblerInputLayout">
            <summary>
            입력 어셈블러 및 입력 배치의 값을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.DenyVertexShaderRootAccess">
            <summary>
            정점 셰이더의 루트 서명 엑세스를 차단합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.DenyHullShaderRootAccess">
            <summary>
            덮개 셰이더의 루트 서명 엑세스를 차단합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.DenyDomainShaderRootAccess">
            <summary>
            영역 셰이더의 루트 서명 엑세스를 차단합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.DenyGeometryShaderRootAccess">
            <summary>
            기하 셰이더의 루트 서명 엑세스를 차단합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.DenyPixelShaderRootAccess">
            <summary>
            픽셀 셰이더의 루트 서명 엑세스를 차단합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.AllowStreamOutput">
            <summary>
            스트림 출력을 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RootSignatureFlags.LocalRootSignature">
            <summary>
            지역 루트 서명 개체로 사용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12RTVDimension">
            <summary>
            D3D12 렌더 타겟 서술자의 차원을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Unknown">
            <summary>
            알 수 없는 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Buffer">
            <summary>
            버퍼 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Texture1D">
            <summary>
            1차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Texture1DArray">
            <summary>
            1차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Texture2D">
            <summary>
            2차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Texture2DArray">
            <summary>
            2차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Texture2DMS">
            <summary>
            2차원 멀티샘플 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Texture2DMSArray">
            <summary>
            2차원 멀티샘플 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12RTVDimension.Texture3D">
            <summary>
            3차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12SamplerDesc">
            <summary>
            D3D12 샘플러 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.Filter">
            <summary>
            필터 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.AddressU">
            <summary>
            텍스처 주소 매핑 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.AddressV">
            <summary>
            텍스처 주소 매핑 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.AddressW">
            <summary>
            텍스처 주소 매핑 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.MipLODBias">
            <summary>
            MIP LOD 바이어스 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.MaxAnisotropy">
            <summary>
            최대 비등방성 필터링 퀄리티를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.ComparisonFunc">
            <summary>
            필터 형식이 비교 필터일 경우, 비교 함수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.BorderColor">
            <summary>
            경계선 색을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.MinLOD">
            <summary>
            최소 LOD 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SamplerDesc.MaxLOD">
            <summary>
            최대 LOD 값을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12SamplerDesc.#ctor(SC.ThirdParty.DirectX.D3D12Filter,SC.ThirdParty.DirectX.D3D12TextureAddressMode)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12SamplerDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="filter"> 필터 형식을 전달합니다. </param>
            <param name="addressMode"> 텍스처 주소 매핑 형식을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ShaderBytecode">
            <summary>
            D3D12 셰이더 바이트코드를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderBytecode.pShaderBytecode">
            <summary>
            셰이더 바이트코드에 대한 네이티브 포인터를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderBytecode.BytecodeLength">
            <summary>
            바이트코드 길이를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ShaderBytecode.#ctor(System.IntPtr,System.UInt64)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ShaderBytecode"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="pShaderBytecode"> 셰이더 바이트코드에 대한 네이티브 포인터를 전달합니다. </param>
            <param name="bytecodeLength"> 바이트코드 길이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ShaderBytecode.#ctor(System.Byte*,System.UInt64)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ShaderBytecode"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="pShaderBytecode"> 셰이더 바이트코드에 대한 바이트 배열을 전달합니다. </param>
            <param name="bytecodeLength"> 바이트코드 길이를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping">
            <summary>
            D3D12 셰이더 컴포넌트 매핑 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping.None">
            <summary>
            값을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping.FromMemoryComponent0">
            <summary>
            0번 컴포넌트로부터 값을 가져옵니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping.FromMemoryComponent1">
            <summary>
            1번 컴포넌트로부터 값을 가져옵니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping.FromMemoryComponent2">
            <summary>
            2번 컴포넌트로부터 값을 가져옵니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping.FromMemoryComponent3">
            <summary>
            3번 컴포넌트로부터 값을 가져옵니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping.ForceValue0">
            <summary>
            강제로 값을 0으로 가져옵니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping.ForceValue1">
            <summary>
            강제로 값을 1로 가져옵니다. 이 값은 입력 형식에 따라 <see cref="T:System.Int32"/> 1 또는 <see cref="T:System.Single"/> 1.0이 될 수 있습니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ShaderComponentMappingExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12ShaderComponentMapping"/> 열거형의 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ShaderComponentMappingExtensions.Encode(SC.ThirdParty.DirectX.D3D12ShaderComponentMapping,SC.ThirdParty.DirectX.D3D12ShaderComponentMapping,SC.ThirdParty.DirectX.D3D12ShaderComponentMapping,SC.ThirdParty.DirectX.D3D12ShaderComponentMapping,SC.ThirdParty.DirectX.D3D12ShaderComponentMapping)">
            <summary>
            셰이더 매핑 방식을 인코드합니다.
            </summary>
            <param name="this"> 열거형을 전달합니다. </param>
            <param name="src0"> 0번 컴포넌트 소스를 전달합니다. </param>
            <param name="src1"> 1번 컴포넌트 소스를 전달합니다. </param>
            <param name="src2"> 2번 컴포넌트 소스를 전달합니다. </param>
            <param name="src3"> 3번 컴포넌트 소스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ShaderComponentMappingExtensions.Decode(SC.ThirdParty.DirectX.D3D12ShaderComponentMapping,SC.ThirdParty.DirectX.D3D12ShaderComponentMapping,SC.ThirdParty.DirectX.D3D12ShaderComponentMapping)">
            <summary>
            셰이더 매핑 방식을 디코드합니다.
            </summary>
            <param name="this"> 열거형을 전달합니다. </param>
            <param name="componentToExtract"> 추출할 값을 전달합니다. </param>
            <param name="mapping"> 매핑 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12ShaderComponentMappingExtensions.Default">
            <summary>
            기본 셰이더 매핑 값을 가져옵니다.
            </summary>
            <returns> 값이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ShaderMinPrecisionSupport">
            <summary>
            D3D12 지원 가능한 최소 정밀도 셰이더를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderMinPrecisionSupport.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderMinPrecisionSupport._10Bit">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderMinPrecisionSupport._16Bit">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc">
            <summary>
            D3D12 셰이더 자원 서술자에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Format">
            <summary>
            셰이더 자원의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.ViewDimension">
            <summary>
            셰이더 자원의 서술 차원을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Shader4ComponentMapping">
            <summary>
            셰이더 컴포넌트 매핑 방식을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Buffer">
            <summary>
            버퍼 셰이더 자원에 대한 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Texture1D">
            <summary>
            1차원 텍스처 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Texture1DArray">
            <summary>
            1차원 텍스처 배열 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Texture2D">
            <summary>
            2차원 텍스처 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Texture2DArray">
            <summary>
            2차원 텍스처 배열 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Texture2DMS">
            <summary>
            2차원 멀티샘플 텍스처 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Texture2DMSArray">
            <summary>
            2차원 멀티샘플 텍스처 배열 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.Texture3D">
            <summary>
            3차원 텍스처 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.TextureCube">
            <summary>
            텍스처 큐브 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.TextureCubeArray">
            <summary>
            텍스처 큐브 배열 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc.RaytracingAccelerationStructure">
            <summary>
            레이트레이싱 가속화 구조체 셰이더 자원에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12ShaderVisibility">
            <summary>
            D3D12 셰이더 관측 가능성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderVisibility.All">
            <summary>
            모든 셰이더에서 관측 가능합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderVisibility.Vertex">
            <summary>
            정점 셰이더에서만 관측 가능합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderVisibility.Hull">
            <summary>
            덮개 셰이더에서만 관측 가능합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderVisibility.Domain">
            <summary>
            영역 셰이더에서만 관측 가능합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderVisibility.Geometry">
            <summary>
            기하 셰이더에서만 관측 가능합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12ShaderVisibility.Pixel">
            <summary>
            픽셀 셰이더에서만 관측 가능합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12SODeclarationEntry">
            <summary>
            D3D12 스트림 출력 선언 엔트리 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SODeclarationEntry.Stream">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SODeclarationEntry.SemanticName">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SODeclarationEntry.SemanticIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SODeclarationEntry.StartComponent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SODeclarationEntry.ComponentCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SODeclarationEntry.OutputSlot">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12SRVDimension">
            <summary>
            D3D12 셰이더 자원 서술자의 차원을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Unknown">
            <summary>
            알 수 없는 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Buffer">
            <summary>
            버퍼 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Texture1D">
            <summary>
            1차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Texture1DArray">
            <summary>
            1차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Texture2D">
            <summary>
            2차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Texture2DArray">
            <summary>
            2차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Texture2DMS">
            <summary>
            2차원 멀티샘플 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Texture2DMSArray">
            <summary>
            2차원 멀티셈플 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.Texture3D">
            <summary>
            3차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.TextureCube">
            <summary>
            텍스처 큐브 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.TextureCubeArray">
            <summary>
            텍스처 큐브 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SRVDimension.RaytracingAccelerationStructure">
            <summary>
            레이트레이싱 가속화 구조체 형식을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12StaticBorderColor">
            <summary>
            D3D12 정적 샘플러에 대한 경계선 색의 미리 정의된 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticBorderColor.TransparentBlack">
            <summary>
            투명한 검은색 값입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticBorderColor.OpaqueBlack">
            <summary>
            불투명한 검은색 값입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticBorderColor.OpaqueWhite">
            <summary>
            불투명한 흰색 값입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc">
            <summary>
            D3D12 정적 샘플러 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.Filter">
            <summary>
            필터 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.AddressU">
            <summary>
            텍스처 주소 매핑 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.AddressV">
            <summary>
            텍스처 주소 매핑 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.AddressW">
            <summary>
            텍스처 주소 매핑 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.MipLODBias">
            <summary>
            MIP LOD 바이어스 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.MaxAnisotropy">
            <summary>
            최대 비등방성 필터링 퀄리티를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.ComparisonFunc">
            <summary>
            필터 형식이 비교 필터일 경우, 비교 함수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.BorderColor">
            <summary>
            경계선 색을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.MinLOD">
            <summary>
            최소 LOD 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.MaxLOD">
            <summary>
            최대 LOD 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.ShaderRegister">
            <summary>
            셰이더 레지스터 번호를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.RegisterSpace">
            <summary>
            레지스터 공간을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.ShaderVisibility">
            <summary>
            셰이더 관측 가능성을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12StaticSamplerDesc.#ctor(SC.ThirdParty.DirectX.D3D12Filter,SC.ThirdParty.DirectX.D3D12TextureAddressMode,System.UInt32,SC.ThirdParty.DirectX.D3D12ShaderVisibility)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12SamplerDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="filter"> 필터 형식을 전달합니다. </param>
            <param name="addressMode"> 텍스처 주소 매핑 형식을 전달합니다. </param>
            <param name="shaderRegister"> 셰이더 레지스터 번호를 전달합니다. </param>
            <param name="shaderVisibility"> 셰이더 관측 가능성을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12StencilOP">
            <summary>
            D3D12 스텐실 연산자를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.Keep">
            <summary>
            스텐실 상태를 유지합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.Zero">
            <summary>
            스텐실 값을 0으로 바꿉니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.Replace">
            <summary>
            스텐실 값을 사용자 지정 스텐실 값으로 설정합니다. 사용자 지정 스텐실 값은 <see cref="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.OMSetStencilRef(System.UInt32)"/> 메서드로 설정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.IncrSat">
            <summary>
            스텐실 값을 증가시키고, 값을 최대값으로 한정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.DecrSat">
            <summary>
            스텐실 값을 감소시키고, 값을 최소값으로 한정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.Invert">
            <summary>
            대상 스텐실 값을 반전합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.Incr">
            <summary>
            스텐실 값을 증가시키고, 최대값을 넘었을 경우 최소값으로 바꿉니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StencilOP.Decr">
            <summary>
            스텐실 값을 감소시키고, 최소값보다 작아졌을 경우 최대값으로 바꿉니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12StreamOutputBufferView">
            <summary>
            D3D12 스트림 출력 대상 버퍼를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StreamOutputBufferView.BufferLocation">
            <summary>
            버퍼의 바이트 단위 위치를 전달합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StreamOutputBufferView.SizeInBytes">
            <summary>
            버퍼의 바이트 단위 크기를 전달합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StreamOutputBufferView.BufferFilledSizeLocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12StreamOutputBufferView.#ctor(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12StreamOutputBufferView"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
            <param name="sizeInBytes"> 버퍼의 바이트 단위 크기를 전달합니다. </param>
            <param name="bufferFilledSizeLocation"> </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12StreamOutputDesc">
            <summary>
            D3D12 스트림 출력 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StreamOutputDesc.SODeclaration">
            <summary>
            스트림 출력 선언 목록을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StreamOutputDesc.BufferStrides">
            <summary>
            버퍼 간격 목록을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12StreamOutputDesc.RasterizedStream">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12SubresourceFootprint">
            <summary>
            D3D12 서브리소스 배치 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceFootprint.Format">
            <summary>
            자원의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceFootprint.Width">
            <summary>
            자원의 넓이를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceFootprint.Height">
            <summary>
            자원의 높이를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceFootprint.Depth">
            <summary>
            자원의 깊이를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceFootprint.RowPitch">
            <summary>
            자원의 바이트 단위 너비의 크기를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12SubresourceTiling">
            <summary>
            D3D12 서브리소스 타일링 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceTiling.WidthInTiles">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceTiling.HeightInTiles">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceTiling.DepthInTiles">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12SubresourceTiling.StartTileIndexInOverallResource">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DArrayDSV">
            <summary>
            D3D12 1차원 텍스처 배열 깊이 스텐실 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayDSV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayDSV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayDSV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DArrayRTV">
            <summary>
            D3D12 1차원 텍스처 배열 렌더 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayRTV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayRTV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayRTV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DArraySRV">
            <summary>
            D3D12 1차원 텍스처 배열 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArraySRV.MostDetailedMip">
            <summary>
            가장 정확한 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArraySRV.MipLevels">
            <summary>
            MIP 단계 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArraySRV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArraySRV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArraySRV.ResourceMinLODClamp">
            <summary>
            최소 LOD 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12Tex1DArraySRV.Default">
            <summary>
            기본값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DArrayUAV">
            <summary>
            D3D12 1차원 텍스처 배열 순서없는 접근 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayUAV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayUAV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DArrayUAV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DDSV">
            <summary>
            D3D12 1차원 깊이 스텐실 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DDSV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DRTV">
            <summary>
            D3D12 1차원 텍스처 렌더 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DRTV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DSRV">
            <summary>
            D3D12 1차원 텍스처 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DSRV.MostDetailedMip">
            <summary>
            가장 정확한 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DSRV.MipLevels">
            <summary>
            MIP 단계 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DSRV.ResourceMinLODClamp">
            <summary>
            최소 LOD 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12Tex1DSRV.Default">
            <summary>
            기본값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex1DUAV">
            <summary>
            D3D12 1차원 텍스처 순서없는 접근 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex1DUAV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DArrayDSV">
            <summary>
            D3D12 2차원 텍스처 배열 깊이 스텐실 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayDSV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayDSV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayDSV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DArrayRTV">
            <summary>
            D3D12 2차원 텍스처 배열 렌더 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayRTV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayRTV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayRTV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayRTV.PlaneSlice">
            <summary>
            평면 조각의 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV">
            <summary>
            D3D12 2차원 텍스처 배열 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV.MostDetailedMip">
            <summary>
            가장 정확한 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV.MipLevels">
            <summary>
            MIP 단계 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV.PlaneSlice">
            <summary>
            평면 조각의 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV.ResourceMinLODClamp">
            <summary>
            최소 LOD 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12Tex2DArraySRV.Default">
            <summary>
            기본값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DArrayUAV">
            <summary>
            D3D12 2차원 텍스처 배열 순서없는 접근 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayUAV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayUAV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayUAV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DArrayUAV.PlaneSlice">
            <summary>
            평면 조각의 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DDSV">
            <summary>
            D3D12 2차원 텍스처 깊이 스텐실 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DDSV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DMSArrayDSV">
            <summary>
            D3D12 2차원 멀티샘플 텍스처 배열 깊이 스텐실 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DMSArrayDSV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DMSArrayDSV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DMSArrayRTV">
            <summary>
            D3D12 2차원 멀티샘플 텍스처 배열 렌더 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DMSArrayRTV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DMSArrayRTV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DMSArraySRV">
            <summary>
            D3D12 2차원 멀티샘플 텍스처 배열 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DMSArraySRV.FirstArraySlice">
            <summary>
            배열의 첫 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DMSArraySRV.ArraySize">
            <summary>
            배열의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DMSDSV">
            <summary>
            D3D12 2차원 멀티샘플 텍스처 깊이 스텐실 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DMSRTV">
            <summary>
            D3D12 2차원 멀티샘플 텍스처 렌더 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DMSSRV">
            <summary>
            D3D12 2차원 멀티샘플 텍스처 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DRTV">
            <summary>
            D3D12 2차원 텍스처 렌더 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DRTV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DRTV.PlaneSlice">
            <summary>
            평면 조각의 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DSRV">
            <summary>
            D3D12 2차원 텍스처 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DSRV.MostDetailedMip">
            <summary>
            가장 정확한 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DSRV.MipLevels">
            <summary>
            MIP 단계 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DSRV.PlaneSlice">
            <summary>
            평면 조각의 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DSRV.ResourceMinLODClamp">
            <summary>
            최소 LOD 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12Tex2DSRV.Default">
            <summary>
            기본값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex2DUAV">
            <summary>
            D3D12 2차원 텍스처 순서없는 접근 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DUAV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex2DUAV.PlaneSlice">
            <summary>
            평면 조각의 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex3DRTV">
            <summary>
            D3D12 3차원 텍스처 렌더 타겟 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DRTV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DRTV.FirstWSlice">
            <summary>
            처음 W축 조각 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DRTV.WSize">
            <summary>
            W축 크기를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex3DSRV">
            <summary>
            D3D12 3차원 텍스처 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DSRV.MostDetailedMip">
            <summary>
            가장 정확한 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DSRV.MipLevels">
            <summary>
            MIP 단계 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DSRV.ResourceMinLODClamp">
            <summary>
            최소 LOD 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12Tex3DSRV.Default">
            <summary>
            기본값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Tex3DUAV">
            <summary>
            D3D12 3차원 텍스처 순서없는 접근 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DUAV.MipSlice">
            <summary>
            사용할 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DUAV.FirstWSlice">
            <summary>
            처음 W축 조각 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Tex3DUAV.WSize">
            <summary>
            W축 크기를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TexCubeArraySRV">
            <summary>
            D3D12 텍스처 큐브 배열 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeArraySRV.MostDetailedMip">
            <summary>
            가장 정확한 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeArraySRV.MipLevels">
            <summary>
            MIP 단계 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeArraySRV.First2DArrayFace">
            <summary>
            첫 2차원 배열 표면을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeArraySRV.NumCubes">
            <summary>
            큐브의 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeArraySRV.ResourceMinLODClamp">
            <summary>
            최소 LOD 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TexCubeSRV">
            <summary>
            D3D12 텍스처 큐브 셰이더 자원 서술자 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeSRV.MostDetailedMip">
            <summary>
            가장 정확한 MIP 단계를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeSRV.MipLevels">
            <summary>
            MIP 단계 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TexCubeSRV.ResourceMinLODClamp">
            <summary>
            최소 LOD 한정 값을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12TexCubeSRV.Default">
            <summary>
            기본값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TextureAddressMode">
            <summary>
            D3D12 텍스처 좌표 모드를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureAddressMode.Wrap">
            <summary>
            좌표가 범위를 벗어나면 시작 위치에서 다시 시작합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureAddressMode.Mirror">
            <summary>
            좌표가 범위를 벗어나면 반대 방향으로 전진합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureAddressMode.Clamp">
            <summary>
            좌표가 범위를 벗어나면 좌표의 값을 범위로 한정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureAddressMode.Border">
            <summary>
            좌표가 범위를 벗어나면 지정한 경계선 색을 사용하도록 합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureAddressMode.MirrorOnce">
            <summary>
            텍스처 좌표의 절대값을 가져온 다음, 최대 값으로 고정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TextureCopyLocation">
            <summary>
            D3D12 텍스처 복사 위치에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureCopyLocation.pResource">
            <summary>
            복사 위치를 나타내는 자원 개체를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureCopyLocation.Type">
            <summary>
            복사 위치 자원의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12TextureCopyLocation.PlacedFootprint">
            <summary>
            복사 형식이 <see cref="F:SC.ThirdParty.DirectX.D3D12TextureCopyType.PlacedFootprint"/>일 때, 자세한 정보를 서술합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12TextureCopyLocation.SubresourceIndex">
            <summary>
            복사 형식이 <see cref="F:SC.ThirdParty.DirectX.D3D12TextureCopyType.SubresourceIndex"/>일 때, 자세한 정보를 서술합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12TextureCopyLocation.#ctor(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12PlacedSubresourceFootprint)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12TextureCopyLocation"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="pResource"> 자원을 전달합니다. </param>
            <param name="layout"> 배치 정보를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12TextureCopyLocation.#ctor(SC.ThirdParty.DirectX.ID3D12Resource,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12TextureCopyLocation"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="pResource"> 자원을 전달합니다. </param>
            <param name="subresourceIndex"> 서브리소스 인덱스를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TextureCopyType">
            <summary>
            D3D12 텍스처 복사 서술 유형을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureCopyType.SubresourceIndex">
            <summary>
            서브리소스 인덱스 정보를 사용하여 텍스처 복사 위치를 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureCopyType.PlacedFootprint">
            <summary>
            리소스 배치 정보를 사용하여 버퍼 복사 위치를 지정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TextureLayout">
            <summary>
            텍스처 자원의 배치 레이아웃을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureLayout.Unknown">
            <summary>
            알 수 없는 레이아웃을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureLayout.RowMajor">
            <summary>
            열 우선 레이아웃을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureLayout.UndefinedSwizzle64KB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TextureLayout.StandardSwizzle64KB">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TileCopyFlags">
            <summary>
            D3D12 타일 리소스 복사 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileCopyFlags.None">
            <summary>
            아무 속성도 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileCopyFlags.NoHazard">
            <summary>
            GPU가 현재 대상 메모리 부분을 참조하고 있지 않음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileCopyFlags.LinearBufferToSwizzledTiledResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileCopyFlags.SwizzledTiledResourceToLinearBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate">
            <summary>
            D3D12 타일 리소스의 위치를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate.X">
            <summary>
            자원의 X축 시작 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate.Y">
            <summary>
            자원의 Y축 시작 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate.Z">
            <summary>
            자원의 Z축 시작 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate.Subresource">
            <summary>
            자원의 서브리소스 인덱스를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="x"> X축 시작 위치를 전달합니다. </param>
            <param name="y"> Y축 시작 위치를 전달합니다. </param>
            <param name="z"> Z축 시작 위치를 전달합니다. </param>
            <param name="subresource"> 서브리소스 인덱스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TiledResourceTier">
            <summary>
            D3D12 타일 리소스 티어를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceTier.NotSupported">
            <summary>
            타일 리소스를 지원하지 안습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceTier._1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceTier._2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceTier._3">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TiledResourceTier._4">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TileMappingFlags">
            <summary>
            D3D12 타일 매핑 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileMappingFlags.None">
            <summary>
            아무 속성도 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileMappingFlags.NoHazard">
            <summary>
            GPU가 현재 대상 메모리 부분을 참조하고 있지 않음을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TileRangeFlags">
            <summary>
            D3D12 타일 범위 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRangeFlags.None">
            <summary>
            아무 속성도 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRangeFlags.Null">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRangeFlags.Skip">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRangeFlags.ReuseSingleTile">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TileRegionSize">
            <summary>
            D3D12 타일 영역 크기를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRegionSize.NumTiles">
            <summary>
            타일 개수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRegionSize.UseBox">
            <summary>
            박스 형태의 기하를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRegionSize.Width">
            <summary>
            타일의 넓이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRegionSize.Height">
            <summary>
            타일의 높이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileRegionSize.Depth">
            <summary>
            타일의 깊이를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12TileRegionSize.#ctor(System.UInt32,System.Boolean,System.UInt32,System.UInt16,System.UInt16)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12TileRegionSize"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="numTiles"> 타일 개수를 전달합니다. </param>
            <param name="useBox"> 박스 형태의 기하를 사용합니다. </param>
            <param name="width"> 타일의 넓이를 전달합니다. </param>
            <param name="height"> 타일의 높이를 전달합니다. </param>
            <param name="depth"> 타일의 깊이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12TileRegionSize.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12TileShape">
            <summary>
            D3D12 타일 모양을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileShape.WidthInTexels">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileShape.HeightInTexels">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12TileShape.DepthInTexels">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12UAVDimension">
            <summary>
            D3D12 순서없는 접근 서술자의 차원을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UAVDimension.Unknown">
            <summary>
            알 수 없는 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UAVDimension.Buffer">
            <summary>
            버퍼 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UAVDimension.Texture1D">
            <summary>
            1차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UAVDimension.Texture1DArray">
            <summary>
            1차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UAVDimension.Texture2D">
            <summary>
            2차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UAVDimension.Texture2DArray">
            <summary>
            2차원 텍스처 배열 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UAVDimension.Texture3D">
            <summary>
            3차원 텍스처 형식을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12UInt4">
            <summary>
            D3D12 4개의 부호 없는 정수형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UInt4.X">
            <summary>
            첫 번째 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UInt4.Y">
            <summary>
            두 번째 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UInt4.Z">
            <summary>
            세 번째 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UInt4.W">
            <summary>
            네 번째 값을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12UInt4.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12UInt4"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="x"> 첫 번째 값을 전달합니다. </param>
            <param name="y"> 두 번째 값을 전달합니다. </param>
            <param name="z"> 세 번째 값을 전달합니다. </param>
            <param name="w"> 네 번째 값을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc">
            <summary>
            D3D12 순서없는 접근 서술자에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.Format">
            <summary>
            순서없는 접근의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.ViewDimension">
            <summary>
            순서없는 접근 서술 차원을 나타냅니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.Buffer">
            <summary>
            버퍼 순서없는 접근에 대한 정보를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.Texture1D">
            <summary>
            1차원 텍스처 순서없는 접근에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.Texture1DArray">
            <summary>
            1차원 텍스처 배열 순서없는 접근에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.Texture2D">
            <summary>
            2차원 텍스처 순서없는 접근에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.Texture2DArray">
            <summary>
            2차원 텍스처 배열 순서없는 접근에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc.Texture3D">
            <summary>
            3차원 텍스처 순서없는 접근에 대한 정보를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12VertexBufferView">
            <summary>
            D3D12 정점 버퍼 서술자 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12VertexBufferView.BufferLocation">
            <summary>
            버퍼의 바이트 단위 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12VertexBufferView.SizeInBytes">
            <summary>
            버퍼의 바이트 단위 크기를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12VertexBufferView.StrideInBytes">
            <summary>
            각 정점의 바이트 단위 크기를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12VertexBufferView.#ctor(System.UInt64,System.UInt32,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12IndexBufferView"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
            <param name="strideInBytes"> 정점 버퍼의 각 정점의 바이트 단위 크기를 전달합니다. </param>
            <param name="vertexCount"> 인덱스 버퍼의 인덱스 개수를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12VertexBufferView.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3D12Viewport">
            <summary>
            D3D12 뷰포트 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Viewport.TopLeftX">
            <summary>
            왼쪽 시작 위치를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Viewport.TopLeftY">
            <summary>
            위쪽 시작 위치를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Viewport.Width">
            <summary>
            뷰포트의 넓이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Viewport.Height">
            <summary>
            뷰포트의 높이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Viewport.MinDepth">
            <summary>
            최소 깊이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3D12Viewport.MaxDepth">
            <summary>
            최대 깊이를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Viewport.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12Viewport"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="left"> 왼쪽 위치를 전달합니다. </param>
            <param name="top"> 위쪽 위치를 전달합니다. </param>
            <param name="right"> 오른쪽 위치를 전달합니다. </param>
            <param name="bottom"> 아래쪽 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Viewport.#ctor(System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3D12Viewport"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="width"> 넓이를 전달합니다. </param>
            <param name="height"> 높이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3D12Viewport.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12CommandAllocator">
            <summary>
            D3D12 명령을 할당할 수 있는 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandAllocator.Reset">
            <summary>
            할당된 모든 명령을 제거합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12CommandList">
            <summary>
            D3D12 명령 목록 제어에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandList.GetType">
            <summary>
            명령 목록이 실행 가능한 명령 유형을 가져옵니다.
            </summary>
            <returns> 명령 목록 유형이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12CommandQueue">
            <summary>
            D3D12 명령 대기열 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.UpdateTileMappings(SC.ThirdParty.DirectX.ID3D12Resource,System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate},System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12TileRegionSize},SC.ThirdParty.DirectX.ID3D12Heap,System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12TileRangeFlags},System.Collections.Generic.IList{System.UInt32},System.Collections.Generic.IList{System.UInt32},SC.ThirdParty.DirectX.D3D12TileMappingFlags)">
            <summary>
            예약된 리소스의 타일 위치를 리소스 힙의 메모리 위치로 업데이트합니다.
            </summary>
            <param name="resource"> 예약된 자원을 전달합니다. </param>
            <param name="resourceRegionStartCoordinates"> 예약된 자원의 시작 위치 목록을 전달합니다. </param>
            <param name="resourceRegionSizes"> 예약된 자원의 크기 목록을 전달합니다. </param>
            <param name="heap"> 리소스 힙을 전달합니다. </param>
            <param name="rangeFlags"> 각 타일의 범위 속성을 전달합니다. </param>
            <param name="heapRangeStartOffsets"> 각 타일의 범위에 맞는 시작 위치를 전달합니다. 바이트 단위를 의미하지 않습니다. </param>
            <param name="rangeTileCounts"> 범위 타일 개수 목록을 전달합니다. </param>
            <param name="flags"> 타일 매핑 속성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.CopyTileMappings(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate,SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate,SC.ThirdParty.DirectX.D3D12TileRegionSize,SC.ThirdParty.DirectX.D3D12TileMappingFlags)">
            <summary>
            원본 예약 리소스에서 대상 예약 리소스로 복사합니다.
            </summary>
            <param name="dstResource"> 대상 예약 리소스를 전달합니다. </param>
            <param name="dstRegionStartCoordinate"> 대상 예약 리소스의 시작 좌표를 전달합니다. </param>
            <param name="srcResource"> 원본 예약 리소스를 전달합니다. </param>
            <param name="srcRegionStartCoordinate"> 원본 예약 리소스의 시작 좌표를 전달합니다. </param>
            <param name="regionSize"> 예약된 영역의 크기를 전달합니다. </param>
            <param name="flags"> 타일 매핑 속성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.ExecuteCommandLists(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12CommandList})">
            <summary>
            명령 목록을 이 대기열에서 실행합니다.
            </summary>
            <param name="commandLists"> 명령 목록 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.Signal(SC.ThirdParty.DirectX.ID3D12Fence,System.UInt64)">
            <summary>
            명령 대기열에 신호 명령을 추가합니다. 신호 명령이 실행될 경우 대상 펜스는 지정한 값으로 설정됩니다.
            </summary>
            <param name="fence"> 펜스 개체를 전달합니다. </param>
            <param name="value"> 설정할 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.Wait(SC.ThirdParty.DirectX.ID3D12Fence,System.UInt64)">
            <summary>
            명령 대기열에 대기 명령을 추가합니다. 대기 명령이 실행될 경우 대상 펜스의 값이 지정한 값으로 될 때까지 GPU는 대기합니다.
            </summary>
            <param name="fence"> 펜스 개체를 전달합니다. </param>
            <param name="value"> 설정할 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.GetTimestampFrequency">
            <summary>
            GPU 시간 측정 주파수를 가져옵니다.
            </summary>
            <returns> 주파수 값이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.GetClockCalibration(System.UInt64@,System.UInt64@)">
            <summary>
            CPU 시간 및 GPU 시간을 동시에 측정합니다.
            </summary>
            <param name="gpuTimestamp"> GPU 시간을 받을 변수의 참조를 전달합니다. </param>
            <param name="cpuTimestamp"> CPU 시간을 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueue.GetDesc">
            <summary>
            명령 대기열의 정보를 서술하는 구조체를 가져옵니다.
            </summary>
            <returns> 서술 구조체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12CommandQueueExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ID3D12CommandQueue"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueueExtensions.ExecuteCommandLists(SC.ThirdParty.DirectX.ID3D12CommandQueue,SC.ThirdParty.DirectX.ID3D12CommandList[])">
            <summary>
            명령 목록을 이 대기열에서 실행합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="commandLists"> 명령 목록 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12CommandQueueExtensions.ExecuteCommandLists(SC.ThirdParty.DirectX.ID3D12CommandQueue,SC.ThirdParty.DirectX.ID3D12GraphicsCommandList[])">
            <summary>
            명령 목록을 이 대기열에서 실행합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="commandLists"> 그래픽 명령 목록 목록을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12CommandSignature">
            <summary>
            D3D12 명령 서명 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12Debug">
            <summary>
            D3D12 디버그 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Debug.EnableDebugLayer">
            <summary>
            디버그 레이어를 활성화합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12DescriptorHeap">
            <summary>
            D3D12 서술자 데이터가 저장되는 서술자 힙에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DescriptorHeap.GetDesc">
            <summary>
            서술자 힙을 서술하는 구조체를 가져옵니다.
            </summary>
            <returns> 서술 구조체를 가져옵니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DescriptorHeap.GetCPUDescriptorHandleForHeapStart">
            <summary>
            CPU 서술자 힙의 시작 지점 핸들을 가져옵니다.
            </summary>
            <returns> CPU 서술자 힙 구조체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DescriptorHeap.GetGPUDescriptorHandleForHeapStart">
            <summary>
            GPU 서술자 힙의 시작 지점 핸들을 가져옵니다.
            </summary>
            <returns> GPU 서술자 힙 구조체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12Device">
            <summary>
            D3D12 자원 관리를 수행하는 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.GetNodeCount">
            <summary>
            이 디바이스 개체와 연결된 물리 디바이스의 개수를 가져옵니다.
            </summary>
            <returns> 개수가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateCommandQueue(SC.ThirdParty.DirectX.D3D12CommandQueueDesc,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            명령 대기열 개체를 생성합니다.
            </summary>
            <param name="desc"> 명령 대기열 서술 정보를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppCommandQueue"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateCommandAllocator(SC.ThirdParty.DirectX.D3D12CommandListType,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            명령 할당기 개체를 생성합니다.
            </summary>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppCommandAllocator"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateGraphicsPipelineState(SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            그래픽 파이프라인 개체를 생성합니다.
            </summary>
            <param name="desc"> 그래픽 파이프라인 정보 서술 구조체를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppPipelineState"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateComputePipelineState(SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            계산 파이프라인 개체를 생성합니다.
            </summary>
            <param name="desc"> 계산 파이프라인 정보 서술 구조체를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppPipelineState"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateCommandList(System.UInt32,SC.ThirdParty.DirectX.D3D12CommandListType,SC.ThirdParty.DirectX.ID3D12CommandAllocator,SC.ThirdParty.DirectX.ID3D12PipelineState,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            그래픽 명령 목록 개체를 생성합니다.
            </summary>
            <param name="nodeMask"> 장치 관측 노드 마스크를 전달합니다. </param>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <param name="pCommandAllocator"> 명령 할당기 개체를 전달합니다. </param>
            <param name="pInitialPipelineState"> 초기 파이프라인 상태 개체를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppCommandList"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CheckFeatureSupport(System.ValueType@)">
            <summary>
            기능 레벨을 점검합니다.
            </summary>
            <param name="pFeatureSupportData"> 점검 대상 기능 레벨 구조체의 참조를 전달합니다. 매개변수는 입력 및 출력용으로 사용됩니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateDescriptorHeap(SC.ThirdParty.DirectX.D3D12DescriptorHeapDesc,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            서술자 힙 개체를 생성합니다. 
            </summary>
            <param name="descriptorHeapDesc"> 서술자 힙 정보를 서술하는 구조체를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppHeap"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.GetDescriptorHandleIncrementSize(SC.ThirdParty.DirectX.D3D12DescriptorHeapType)">
            <summary>
            서술자 힙의 핸들 크기를 가져옵니다.
            </summary>
            <param name="descriptorHeapType"> 서술자 힙 유형을 전달합니다. </param>
            <returns> 크기를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateRootSignature(System.UInt32,System.IntPtr,System.UInt64,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            루트 서명 개체를 생성합니다.
            </summary>
            <param name="nodeMask"> 노드 마스크를 전달합니다. </param>
            <param name="pBlobWithRootSignature"> 입력 서명 데이터 블록을 전달합니다. </param>
            <param name="blobLengthInBytes"> 입력 서명 데이터의 바이트 단위 크기를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppRootSignature"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateConstantBufferView(SC.ThirdParty.DirectX.D3D12ConstantBufferViewDesc,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle)">
            <summary>
            상수 버퍼 서술자를 생성합니다.
            </summary>
            <param name="desc"> 상수 버퍼 서술 구조체를 전달합니다. </param>
            <param name="handle"> 서술자 힙 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateShaderResourceView(SC.ThirdParty.DirectX.ID3D12Resource,System.Nullable{SC.ThirdParty.DirectX.D3D12ShaderResourceViewDesc},SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle)">
            <summary>
            셰이더 자원 서술자를 생성합니다.
            </summary>
            <param name="pResource"> 셰이더 자원으로 사용할 리소스를 전달합니다. </param>
            <param name="desc"> 셰이더 자원 정보 서술 구조체를 전달합니다. null을 전달할 경우 자원 형식에 기초한 기본값이 사용됩니다. </param>
            <param name="handle"> 서술자 힙 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateUnorderedAccessView(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.ID3D12Resource,System.Nullable{SC.ThirdParty.DirectX.D3D12UnorderedAccessViewDesc},SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle)">
            <summary>
            순서없는 접근 서술자를 생성합니다.
            </summary>
            <param name="pResource"> 순서없는 접근으로 사용할 리소스를 전달합니다. </param>
            <param name="pCounterResource"> 카운터 리소스를 전달합니다. </param>
            <param name="desc"> 순서없는 접근 정보 서술 구조체를 전달합니다. null을 전달할 경우 자원 형식에 기초한 기본값이 사용됩니다. </param>
            <param name="handle"> 서술자 힙 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateRenderTargetView(SC.ThirdParty.DirectX.ID3D12Resource,System.Nullable{SC.ThirdParty.DirectX.D3D12RenderTargetViewDesc},SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle)">
            <summary>
            렌더 타겟 서술자를 생성합니다.
            </summary>
            <param name="pResource"> 렌더 타겟으로 사용할 리소스를 전달합니다. </param>
            <param name="desc"> 렌더 타겟 정보 서술 구조체를 전달합니다. null을 전달할 경우 자원 형식에 기초한 기본값이 사용됩니다. </param>
            <param name="handle"> 서술자 힙 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateDepthStencilView(SC.ThirdParty.DirectX.ID3D12Resource,System.Nullable{SC.ThirdParty.DirectX.D3D12DepthStencilViewDesc},SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle)">
            <summary>
            깊이 스텐실 서술자를 생성합니다.
            </summary>
            <param name="pResource"> 깊이 스텐실 대상으로 사용할 리소스를 전달합니다. </param>
            <param name="desc"> 깊이 스텐실 정보 서술 구조체를 전달합니다. null을 전달할 경우 자원 형식에 기초한 기본값이 사용됩니다. </param>
            <param name="handle"> 서술자 힙 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateSampler(SC.ThirdParty.DirectX.D3D12SamplerDesc,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle)">
            <summary>
            샘플러 상태 서술자를 생성합니다.
            </summary>
            <param name="desc"> 샘플러 상태를 서술하는 구조체를 전달합니다. </param>
            <param name="handle"> 서술자 힙 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CopyDescriptors(System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle},System.Collections.Generic.IList{System.UInt32},System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle},System.Collections.Generic.IList{System.UInt32},SC.ThirdParty.DirectX.D3D12DescriptorHeapType)">
            <summary>
            서술자 목록을 복사합니다.
            </summary>
            <param name="destDescriptorRangeStarts"> 서술자 복사 대상 위치 목록을 전달합니다. </param>
            <param name="destDescriptorRangeSizes"> 서술자 복사 대상의 크기 목록을 전달합니다. </param>
            <param name="srcDescriptorRangeStarts"> 서술자 복사 원본 위치 목록을 전달합니다. </param>
            <param name="srcDescriptorRangeSizes"> 서술자 복사 원본의 크기 목록을 전달합니다. </param>
            <param name="descriptorHeapType"> 서술자 힙 유형을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CopyDescriptorsSimple(System.UInt32,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12DescriptorHeapType)">
            <summary>
            서술자를 복사합니다.
            </summary>
            <param name="numDescriptors"> 복사할 서술자 개수를 전달합니다. </param>
            <param name="destDescriptorRangeStart"> 서술자 복사 대상 위치를 전달합니다. </param>
            <param name="srcDescriptorRangeStart"> 서술자 복사 원본 위치를 전달합니다. </param>
            <param name="descriptorHeapsType"> 서술자힙 유형을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.GetResourceAllocationInfo(System.UInt32,System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12ResourceDesc})">
            <summary>
            리소스 할당 정보를 가져옵니다.
            </summary>
            <param name="visibleMask"> 장치 관측 마스크를 전달합니다. </param>
            <param name="resourceDescs"> 리소스 정보 구조체 목록을 전달합니다. </param>
            <returns> 리소스 할당 정보를 가져옵니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.GetCustomHeapProperties(System.UInt32,SC.ThirdParty.DirectX.D3D12HeapType)">
            <summary>
            사용자 지정 힙의 속성을 가져옵니다.
            </summary>
            <param name="nodeMask"> 노드 마스크를 전달합니다. </param>
            <param name="heapType"> 힙 유형을 전달합니다. </param>
            <returns> 힙 속성 구조체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateCommittedResource(SC.ThirdParty.DirectX.D3D12HeapProperties,SC.ThirdParty.DirectX.D3D12HeapFlags,SC.ThirdParty.DirectX.D3D12ResourceDesc,SC.ThirdParty.DirectX.D3D12ResourceStates,System.Nullable{SC.ThirdParty.DirectX.D3D12ClearValue},System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            미리 커밋된 자원을 생성합니다.
            </summary>
            <param name="heapProperties"> 힙 속성을 전달합니다. </param>
            <param name="heapFlags"> 힙 속성을 전달합니다. </param>
            <param name="desc"> 자원 정보 구조체를 전달합니다. </param>
            <param name="initialResourceState"> 초기 자원 상태를 전달합니다. </param>
            <param name="optimizedClearValue"> 최적화된 초기화 값을 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppResource"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateHeap(SC.ThirdParty.DirectX.D3D12HeapDesc,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            힙 개체를 생성합니다.
            </summary>
            <param name="desc"> 힙 정보를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppHeap"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreatePlacedResource(SC.ThirdParty.DirectX.ID3D12Heap,System.UInt64,SC.ThirdParty.DirectX.D3D12ResourceDesc,SC.ThirdParty.DirectX.D3D12ResourceStates,System.Nullable{SC.ThirdParty.DirectX.D3D12ClearValue},System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            배치된 자원을 생성합니다.
            </summary>
            <param name="pHeap"> 힙 개체를 전달합니다. </param>
            <param name="heapOffset"> 힙 오프셋을 전달합니다. </param>
            <param name="desc"> 자원 정보 구조체를 전달합니다. </param>
            <param name="initialResourceState"> 초기 자원 상태를 전달합니다. </param>
            <param name="optimizedClearValue"> 최적화된 초기화 값을 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppResource"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateReservedResource(SC.ThirdParty.DirectX.D3D12ResourceDesc,SC.ThirdParty.DirectX.D3D12ResourceStates,System.Nullable{SC.ThirdParty.DirectX.D3D12ClearValue},System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            예약된 자원 개체를 생성합니다.
            </summary>
            <param name="desc"> 자원 정보 구조체를 전달합니다. </param>
            <param name="initialResourceState"> 초기 자원 상태를 전달합니다. </param>
            <param name="optimizedClearValue"> 최적화된 초기화 값을 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppResource"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateSharedHandle(SC.ThirdParty.DirectX.ID3D12DeviceChild,System.IntPtr,SmartEngine.Platform.Win32.GenericAccess,System.String)">
            <summary>
            공유 가능한 개체에 대한 핸들을 생성합니다.
            </summary>
            <param name="pObject"> 공유 가능한 개체를 전달합니다. </param>
            <param name="pAttributes"> 보안 속성을 전달합니다. </param>
            <param name="access"> 핸들의 엑세스 가능성을 전달합니다. 현재 유일하게 허용되는 값은 <see cref="F:SmartEngine.Platform.Win32.GenericAccess.All"/>입니다. </param>
            <param name="name"> 핸들의 이름을 전달합니다. </param>
            <returns> 생성된 핸들 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.OpenSharedHandle(SmartEngine.Platform.Win32.HHandleBase,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            공유 가능한 개체에 대한 핸들을 엽니다.
            </summary>
            <param name="ntHandle"> 공유 핸들을 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppObject"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.OpenSharedHandleByName(System.String,SmartEngine.Platform.Win32.GenericAccess)">
            <summary>
            공유 가능한 개체에 대한 핸들을 엽니다.
            </summary>
            <param name="name"> 핸들의 이름을 전달합니다. </param>
            <param name="access"> 핸들의 엑세스 가능성을 전달합니다. </param>
            <returns> 열린 핸들 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.MakeResident(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12Pageable})">
            <summary>
            개체를 GPU 메모리에 상주하도록 변경합니다.
            </summary>
            <param name="ppObjects"> 개체 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.Evict(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12Pageable})">
            <summary>
            개체를 GPU 메모리에 상주하지 않도록 변경합니다.
            </summary>
            <param name="ppObjects"> 개체 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateFence(System.UInt64,SC.ThirdParty.DirectX.D3D12FenceFlags,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            펜스 개체를 생성합니다.
            </summary>
            <param name="initialValue"> 초기 값을 전달합니다. </param>
            <param name="flags"> 펜스 속성을 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppFence"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.GetCopyableFootprints(SC.ThirdParty.DirectX.D3D12ResourceDesc,System.UInt32,System.UInt32,System.UInt64,System.UInt32[]@,System.UInt64[]@,System.UInt64@)">
            <summary>
            자원의 복사 가능한 배치 방식을 조회합니다.
            </summary>
            <param name="resourceDesc"> 자원 정보를 전달합니다. </param>
            <param name="firstSubresource"> 처음 서브리소스 인덱스를 전달합니다. </param>
            <param name="numSubresources"> 조회할 서브리소스 개수를 전달합니다. </param>
            <param name="baseOffset"> 기초 오프셋을 전달합니다. </param>
            <param name="numRows"> 각 서브리소스당 줄 개수를 가져옵니다. </param>
            <param name="rowSizeInBytes"> 각 서브리소스당 바이트 단위 너비를 가져옵니다. </param>
            <param name="totalBytes"> 최종 바이트 수를 가져옵니다. </param>
            <returns> 자원의 배치 형식을 서술하는 구조체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateQueryHeap(SC.ThirdParty.DirectX.D3D12QueryHeapDesc,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            정보 요청 힙을 생성합니다.
            </summary>
            <param name="desc"> 정보 요청 힙 서술 구조체를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppHeap"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.SetStablePowerState(System.Boolean)">
            <summary>
            안정적인 전원 상태를 활성화합니다.
            </summary>
            <param name="enable"> 안정적 상태 활성화 여부를 전달합니다. </param>
            <remarks> 이 메서드는 기기가 개발자 모드로 설정된 경우에만 사용할 수 있습니다. 그 이외의 경우, 디바이스가 제거됩니다. </remarks>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.CreateCommandSignature(SC.ThirdParty.DirectX.D3D12CommandSignatureDesc,SC.ThirdParty.DirectX.ID3D12RootSignature,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            명령 서명 개체를 생성합니다.
            </summary>
            <param name="desc"> 명령 서명 개체에 대한 서술 정보를 전달합니다. </param>
            <param name="pRootSignature"> 입력 서명 개체를 전달합니다. </param>
            <param name="riid"> 개체의 GUID를 전달합니다. </param>
            <param name="ppCommandSignature"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.GetResourceTiling(SC.ThirdParty.DirectX.ID3D12Resource,System.UInt32@,SC.ThirdParty.DirectX.D3D12PackedMipInfo@,SC.ThirdParty.DirectX.D3D12TileShape@,System.UInt32)">
            <summary>
            
            </summary>
            <param name="pTiledResource"></param>
            <param name="numTilesForEntireResource"></param>
            <param name="packedMipDesc"></param>
            <param name="standardTileShapeForNonPackedMips"></param>
            <param name="firstSubresourceTilingToGet"></param>
            <returns></returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Device.GetAdapterLuid">
            <summary>
            어댑터의 LUID를 가져옵니다.
            </summary>
            <returns> LUID 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12DeviceChild">
            <summary>
            D3D12 장치에서 파생된 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceChild.GetDevice(System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            장치 개체를 가져옵니다.
            </summary>
            <param name="riid"> 장치 인터페이스의 GUID를 전달합니다. </param>
            <param name="device"> 장치 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12DeviceChildExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ID3D12DeviceChild"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceChildExtensions.GetDevice``1(SC.ThirdParty.DirectX.ID3D12DeviceChild,System.Guid)">
            <summary>
            장치 개체를 가져옵니다.
            </summary>
            <typeparam name="T"> 장치 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="riid"> 장치 인터페이스의 GUID를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceChildExtensions.GetDevice``1(SC.ThirdParty.DirectX.ID3D12DeviceChild)">
            <summary>
            장치 개체를 가져옵니다.
            </summary>
            <typeparam name="T"> 장치 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12DeviceExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ID3D12Device"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommandQueue``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12CommandQueueDesc)">
            <summary>
            명령 대기열 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="desc"> 명령 대기열 서술 정보를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommandQueue``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12CommandListType,SC.ThirdParty.DirectX.D3D12CommandQueuePriority)">
            <summary>
            명령 대기열 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <param name="priority"> 대기열의 우선 순위를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommandQueue(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12CommandListType,SC.ThirdParty.DirectX.D3D12CommandQueuePriority)">
            <summary>
            명령 대기열 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <param name="priority"> 대기열의 우선 순위를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateFence``1(SC.ThirdParty.DirectX.ID3D12Device,System.UInt64,SC.ThirdParty.DirectX.D3D12FenceFlags)">
            <summary>
            펜스 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="initialValue"> 초기 값을 전달합니다. </param>
            <param name="flags"> 펜스 속성을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateFence(SC.ThirdParty.DirectX.ID3D12Device,System.UInt64,SC.ThirdParty.DirectX.D3D12FenceFlags)">
            <summary>
            펜스 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="initialValue"> 초기 값을 전달합니다. </param>
            <param name="flags"> 펜스 속성을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommandAllocator``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12CommandListType)">
            <summary>
            명령 할당기 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommandAllocator(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12CommandListType)">
            <summary>
            명령 할당기 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommandList``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12CommandListType,SC.ThirdParty.DirectX.ID3D12CommandAllocator,SC.ThirdParty.DirectX.ID3D12PipelineState)">
            <summary>
            그래픽 명령 목록 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <param name="pCommandAllocator"> 명령 할당기 개체를 전달합니다. </param>
            <param name="pInitialPipelineState"> 초기 파이프라인 상태 개체를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommandList(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12CommandListType,SC.ThirdParty.DirectX.ID3D12CommandAllocator,SC.ThirdParty.DirectX.ID3D12PipelineState)">
            <summary>
            그래픽 명령 목록 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 명령 목록 유형을 전달합니다. </param>
            <param name="pCommandAllocator"> 명령 할당기 개체를 전달합니다. </param>
            <param name="pInitialPipelineState"> 초기 파이프라인 상태 개체를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateDescriptorHeap``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12DescriptorHeapType,System.UInt32,SC.ThirdParty.DirectX.D3D12DescriptorHeapFlags)">
            <summary>
            서술자 힙 개체를 생성합니다. 
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 서술자 유형을 전달합니다. </param>
            <param name="numDescriptors"> 서술자 개수를 전달합니다. </param>
            <param name="flags"> 서술자 속성을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateDescriptorHeap(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12DescriptorHeapType,System.UInt32,SC.ThirdParty.DirectX.D3D12DescriptorHeapFlags)">
            <summary>
            서술자 힙 개체를 생성합니다. 
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="type"> 서술자 유형을 전달합니다. </param>
            <param name="numDescriptors"> 서술자 개수를 전달합니다. </param>
            <param name="flags"> 서술자 속성을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommittedResource``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12HeapProperties,SC.ThirdParty.DirectX.D3D12HeapFlags,SC.ThirdParty.DirectX.D3D12ResourceDesc,SC.ThirdParty.DirectX.D3D12ResourceStates,System.Nullable{SC.ThirdParty.DirectX.D3D12ClearValue})">
            <summary>
            미리 커밋된 자원을 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="heapProperties"> 힙 속성을 전달합니다. </param>
            <param name="heapFlags"> 힙 속성을 전달합니다. </param>
            <param name="desc"> 자원 정보 구조체를 전달합니다. </param>
            <param name="initialResourceState"> 초기 자원 상태를 전달합니다. </param>
            <param name="optimizedClearValue"> 최적화된 초기화 값을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateCommittedResource(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12HeapProperties,SC.ThirdParty.DirectX.D3D12HeapFlags,SC.ThirdParty.DirectX.D3D12ResourceDesc,SC.ThirdParty.DirectX.D3D12ResourceStates,System.Nullable{SC.ThirdParty.DirectX.D3D12ClearValue})">
            <summary>
            미리 커밋된 자원을 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="heapProperties"> 힙 속성을 전달합니다. </param>
            <param name="heapFlags"> 힙 속성을 전달합니다. </param>
            <param name="desc"> 자원 정보 구조체를 전달합니다. </param>
            <param name="initialResourceState"> 초기 자원 상태를 전달합니다. </param>
            <param name="optimizedClearValue"> 최적화된 초기화 값을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateRootSignature``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.ID3DBlob)">
            <summary>
            루트 서명 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="pBlobWithRootSignature"> 입력 서명 데이터 블록을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreateRootSignature(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.ID3DBlob)">
            <summary>
            루트 서명 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="pBlobWithRootSignature"> 입력 서명 데이터 블록을 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreatePipelineState``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc)">
            <summary>
            그래픽 파이프라인 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="desc"> 그래픽 파이프라인 정보 서술 구조체를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreatePipelineState(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12GraphicsPipelineStateDesc)">
            <summary>
            그래픽 파이프라인 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="desc"> 그래픽 파이프라인 정보 서술 구조체를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreatePipelineState``1(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc)">
            <summary>
            계산 파이프라인 개체를 생성합니다.
            </summary>
            <typeparam name="T"> 개체의 인터페이스 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="desc"> 계산 파이프라인 정보 서술 구조체를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12DeviceExtensions.CreatePipelineState(SC.ThirdParty.DirectX.ID3D12Device,SC.ThirdParty.DirectX.D3D12ComputePipelineStateDesc)">
            <summary>
            계산 파이프라인 개체를 생성합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="desc"> 계산 파이프라인 정보 서술 구조체를 전달합니다. </param>
            <returns> 생성된 인터페이스 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12Fence">
            <summary>
            D3D12 펜스 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Fence.GetCompletedValue">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ID3D12CommandQueue"/> 개체 또는 <see cref="M:SC.ThirdParty.DirectX.ID3D12Fence.Signal(System.UInt64)"/> 메서드를 통해 마지막으로 지정된 값을 반환합니다.
            </summary>
            <returns> 현재 값이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Fence.SetEventOnCompletion(System.UInt64,SmartEngine.Platform.Win32.HHandleBase)">
            <summary>
            펜스의 값이 지정한 값이 될 경우 이벤트를 활성화 상태로 설정합니다.
            </summary>
            <param name="value"> 값을 전달합니다. </param>
            <param name="hEvent"> 이벤트 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Fence.Signal(System.UInt64)">
            <summary>
            펜스의 값을 설정합니다.
            </summary>
            <param name="value"> 값을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList">
            <summary>
            D3D12 그래픽 관련 명령을 처리할 수 있는 명령 목록에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.Close">
            <summary>
            명령 목록을 닫습니다. 이후 명령을 추가할 수 없습니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.Reset(SC.ThirdParty.DirectX.ID3D12CommandAllocator,SC.ThirdParty.DirectX.ID3D12PipelineState)">
            <summary>
            명령 목록을 초기화하고 명령 목록을 엽니다. 이후 명령을 추가할 수 있습니다.
            </summary>
            <param name="allocator"> 명령 할당기 개체를 전달합니다. </param>
            <param name="initialPipelineState"> 초기 상태로 사용할 파이프라인 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ClearState(SC.ThirdParty.DirectX.ID3D12PipelineState)">
            <summary>
            현재 셰이더 상태를 초기화합니다.
            </summary>
            <param name="pipelineState"> 초기 상태로 사용할 파이프라인 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.DrawInstanced(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            설정된 정점 버퍼 데이터로 기하 모형을 렌더링합니다.
            </summary>
            <param name="vertexCountPerInstance"> 렌더링에 필요한 정점 개수를 전달합니다. </param>
            <param name="instanceCount"> 렌더링 인스턴스 개수를 전달합니다. </param>
            <param name="startVertexLocation"> 정점 버퍼에서 필요한 정점의 시작 위치를 전달합니다. </param>
            <param name="startInstanceLocation"> 인스턴스 시작 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.DrawIndexedInstanced(System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            설정된 정점 버퍼 데이터 및 인덱스 버퍼 데이터로 기하 모형을 렌더링합니다.
            </summary>
            <param name="indexCountPerInstance"> 렌더링에 필요한 인덱스 개수를 전달합니다. </param>
            <param name="instanceCount"> 렌더링 인스턴스 개수를 전달합니다. </param>
            <param name="startIndexLocation"> 인덱스 버퍼에서 필요한 인덱스의 시작 위치를 전달합니다. </param>
            <param name="baseVertexLocation"> 각 인덱스가 가리키는 정점 오프셋의 이동량을 전달합니다. </param>
            <param name="startInstanceLocation"> 인스턴스 시작 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.Dispatch(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            계산 명령을 배치합니다.
            </summary>
            <param name="threadGroupCountX"> X축 스레드 그룹의 개수를 전달합니다. </param>
            <param name="threadGroupCountY"> Y축 스레드 그룹의 개수를 전달합니다. </param>
            <param name="threadGroupCountZ"> Z축 스레드 그룹의 개수를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.CopyBufferRegion(SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64,SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64,System.UInt64)">
            <summary>
            <paramref name="srcBuffer"/> 자원의 데이터를 <paramref name="dstBuffer"/> 자원으로 GPU 차원에서 전송합니다.
            </summary>
            <param name="dstBuffer"> 복사 대상 자원을 전달합니다. </param>
            <param name="dstOffset"> 복사 대상 바이트 위치를 전달합니다. </param>
            <param name="srcBuffer"> 복사 원본 자원을 전달합니다. </param>
            <param name="srcOffset"> 복사 원본 바이트 위치를 전달합니다. </param>
            <param name="numBytes"> 복사 바이트 단위 크기를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.CopyTextureRegion(SC.ThirdParty.DirectX.D3D12TextureCopyLocation,System.UInt32,System.UInt32,System.UInt32,SC.ThirdParty.DirectX.D3D12TextureCopyLocation,System.Nullable{SC.ThirdParty.DirectX.D3D12Box})">
            <summary>
            베치된 텍스처 데이터를 대상 텍스처 자원에 전송합니다.
            </summary>
            <param name="dst"> 복사 대상 정보를 전달합니다. </param>
            <param name="dstX"> 복사 대상의 X축 시작 위치를 전달합니다. </param>
            <param name="dstY"> 복사 대상의 Y축 시작 위치를 전달합니다. </param>
            <param name="dstZ"> 복사 대상의 Z축 시작 위치를 전달합니다. </param>
            <param name="src"> 복사 원본 정보를 전달합니다. </param>
            <param name="pSrcBox"> 복사 원본의 복사 영역을 전달합니다. null을 전달할 경우 전체 영역이 복사됩니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.CopyResource(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            <paramref name="srcResource"/> 자원의 데이터를 <paramref name="dstResource"/> 자원으로 GPU 차원에서 단순 전송합니다. 두 자원의 형식 및 크기는 같아야 합니다.
            </summary>
            <param name="dstResource"> 복사 대상 자원을 전달합니다. </param>
            <param name="srcResource"> 복사 원본 자원을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.CopyTiles(SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12TiledResourceCoordinate,SC.ThirdParty.DirectX.D3D12TileRegionSize,SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64,SC.ThirdParty.DirectX.D3D12TileCopyFlags)">
            <summary>
            타일 리소스를 복사합니다.
            </summary>
            <param name="tiledResource"> 대상 타일 리소스를 전달합니다. </param>
            <param name="tileRegionStartCoordinate"> 복사 대상 시작 위치를 전달합니다. </param>
            <param name="tileRegionSize"> 복사 대상 크기를 전달합니다. </param>
            <param name="buffer"> 복사 원본 버퍼를 전달합니다. </param>
            <param name="bufferStartOffsetInBytes"> 복사 시작 바이트 위치를 전달합니다. </param>
            <param name="flags"> 복사 속성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ResolveSubresource(SC.ThirdParty.DirectX.ID3D12Resource,System.UInt32,SC.ThirdParty.DirectX.ID3D12Resource,System.UInt32,SC.ThirdParty.DirectX.DXGIFormat)">
            <summary>
            멀티 샘플 리소스를 일반 리소스에 복사합니다.
            </summary>
            <param name="dstResource"> 대상 일반 리소스를 전달합니다. </param>
            <param name="dstSubresource"> 대상 일반 리소스의 서브리소스 인덱스를 전달합니다. </param>
            <param name="srcResource"> 원본 멀티 샘플 리소스를 전달합니다. </param>
            <param name="srcSubresource"> 원본 멀티 샘플 리소스의 서브리소스 인덱스를 전달합니다. </param>
            <param name="format"> 일반 리소스로 나타낼 형식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.IASetPrimitiveTopology(SC.ThirdParty.DirectX.D3DPrimitiveTopology)">
            <summary>
            기하 렌더링에 사용되는 최소 기하 모형 정보를 설정합니다.
            </summary>
            <param name="primitiveTopology"> 최소 기하 모형을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.RSSetViewports(System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12Viewport})">
            <summary>
            뷰포트를 설정합니다.
            </summary>
            <param name="viewports"> 뷰포트 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.RSSetScissorRects(System.Collections.Generic.IList{SmartEngine.Core.Numerics.Rectangle})">
            <summary>
            절단 영역을 설정합니다.
            </summary>
            <param name="rects"> 절단 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.OMSetBlendFactor(SmartEngine.Core.Numerics.Vector4)">
            <summary>
            사용자 지정 블렌딩 계수를 설정합니다. 
            </summary>
            <param name="blendFactor"> 블렌딩 계수를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.OMSetStencilRef(System.UInt32)">
            <summary>
            사용자 지정 스텐실 값을 설정합니다.
            </summary>
            <param name="stencilRef"> 스텐실 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetPipelineState(SC.ThirdParty.DirectX.ID3D12PipelineState)">
            <summary>
            파이프라인 상태 개체를 설정합니다.
            </summary>
            <param name="pipelineState"> 파이프라인 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ResourceBarrier(System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12ResourceBarrier})">
            <summary>
            자원 상태 장벽을 설정합니다.
            </summary>
            <param name="barriers"> 자원 상태 장벽 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ExecuteBundle(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList)">
            <summary>
            묶음 그래픽 명령을 실행합니다.
            </summary>
            <param name="bundleCommandList"> 묶음 그래픽 명령 목록 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetDescriptorHeaps(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12DescriptorHeap})">
            <summary>
            서술자 힙 개체를 설정합니다.
            </summary>
            <param name="descriptorHeaps"> 서술자 힙 개체 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetComputeRootSignature(SC.ThirdParty.DirectX.ID3D12RootSignature)">
            <summary>
            계산 루트 서명 개체를 설정합니다.
            </summary>
            <param name="rootSignature"> 루트 서명 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetGraphicsRootSignature(SC.ThirdParty.DirectX.ID3D12RootSignature)">
            <summary>
            그래픽 루트 서명 개체를 설정합니다.
            </summary>
            <param name="rootSignature"> 루트 서명 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetComputeRootDescriptorTable(System.UInt32,SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle)">
            <summary>
            컴퓨트 루트 서명 서술자 테이블을 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="baseDescriptor"> GPU 서술자 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetGraphicsRootDescriptorTable(System.UInt32,SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle)">
            <summary>
            그래픽 루트 서명 서술자 테이블을 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="baseDescriptor"> GPU 서술자 핸들을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetComputeRoot32BitConstant(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            32비트 컴퓨트 루트 서명 값을 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetGraphicsRoot32BitConstant(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            32비트 그래픽 루트 서명 값을 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetComputeRoot32BitConstants(System.UInt32,System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            32비트 컴퓨트 루트 서명 값을 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="num32BitValuesToSet"> 설정할 32비트 값을의 개수를 전달합니다. </param>
            <param name="pSrcData"> 설정할 데이터를 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetGraphicsRoot32BitConstants(System.UInt32,System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            32비트 그래픽 루트 서명 값을 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="num32BitValuesToSet"> 설정할 32비트 값을의 개수를 전달합니다. </param>
            <param name="pSrcData"> 설정할 데이터를 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetComputeRootConstantBufferView(System.UInt32,System.UInt64)">
            <summary>
            컴퓨트 루트 상수 버퍼 서술자를 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetGraphicsRootConstantBufferView(System.UInt32,System.UInt64)">
            <summary>
            그래픽 루트 상수 버퍼 서술자를 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetComputeRootShaderResourceView(System.UInt32,System.UInt64)">
            <summary>
            컴퓨트 루트 셰이더 자원 서술자를 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetGraphicsRootShaderResourceView(System.UInt32,System.UInt64)">
            <summary>
            그래픽 루트 셰이더 자원 서술자를 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetComputeRootUnorderedAccessView(System.UInt32,System.UInt64)">
            <summary>
            컴퓨트 루트 순서없는 접근 서술자를 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetGraphicsRootUnorderedAccessView(System.UInt32,System.UInt64)">
            <summary>
            그래픽 루트 순서없는 접근 서술자를 설정합니다.
            </summary>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="bufferLocation"> 버퍼의 바이트 단위 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.IASetIndexBuffer(System.Nullable{SC.ThirdParty.DirectX.D3D12IndexBufferView})">
            <summary>
            색인 버퍼 서술 정보를 설정합니다.
            </summary>
            <param name="view"> 서술 정보 구조체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.IASetVertexBuffers(System.UInt32,System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12VertexBufferView})">
            <summary>
            정점 버퍼 서술 정보를 설정합니다.
            </summary>
            <param name="startSlot"> 설정할 슬롯 인덱스를 전달합니다. </param>
            <param name="views"> 서술 정보 구조체 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SOSetTargets(System.UInt32,System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12StreamOutputBufferView})">
            <summary>
            스트림 출력 서술 정보를 설정합니다.
            </summary>
            <param name="startSlot"> 설정할 슬롯 인덱스를 전달합니다. </param>
            <param name="views"> 서술 정보 구조체 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.OMSetRenderTargets(System.UInt32,System.Collections.Generic.IList{SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle},System.Nullable{SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle})">
            <summary>
            렌더 타겟을 설정합니다.
            </summary>
            <param name="numRenderTargetDescriptors"> 렌더 타겟 서술자 개수를 전달합니다. </param>
            <param name="renderTargetDescriptors"> 렌더 타겟 서술자 목록을 전달합니다. </param>
            <param name="depthStencilDescriptor"> 깊이 스텐실 서술자를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.OMSetRenderTargets(System.UInt32,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,System.Nullable{SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle})">
            <summary>
            렌더 타겟을 설정합니다.
            </summary>
            <param name="numRenderTargetDescriptors"> 렌더 타겟 연속된 서술자 개수를 전달합니다. </param>
            <param name="renderTargetDescriptor"> 렌더 타겟 서술자 목록을 전달합니다. </param>
            <param name="depthStencilDescriptor"> 깊이 스텐실 서술자를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ClearDepthStencilView(SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12ClearFlags,System.Single,System.UInt32,System.Collections.Generic.IList{SmartEngine.Core.Numerics.Rectangle})">
            <summary>
            깊이 스텐실 텍스처를 초기화합니다.
            </summary>
            <param name="depthStencilView"> 깊이 스텐실 서술자를 전달합니다. </param>
            <param name="clearFlags"> 초기화 플래그를 전달합니다. </param>
            <param name="depth"> 초기화 깊이 값을 전달합니다. </param>
            <param name="stencil"> 초기화 스텐실 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ClearRenderTargetView(SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SmartEngine.Core.Numerics.Color,System.Collections.Generic.IList{SmartEngine.Core.Numerics.Rectangle})">
            <summary>
            렌더 타겟 텍스처를 초기화합니다.
            </summary>
            <param name="renderTargetView"> 렌더 타겟 서술자를 전달합니다. </param>
            <param name="color"> 초기화 색상 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ClearUnorderedAccessViewUint(SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12UInt4,System.Collections.Generic.IList{SmartEngine.Core.Numerics.Rectangle})">
            <summary>
            순서없는 접근 텍스처를 초기화합니다.
            </summary>
            <param name="viewGPUHandleInCurrentHeap"> 서술자의 GPU 핸들을 전달합니다. 서술자 힙이 <see cref="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetDescriptorHeaps(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12DescriptorHeap})"/> 메서드로 선택되어 있어야 합니다. </param>
            <param name="viewCPUHandle"> 서술자의 CPU 핸들을 전달합니다. </param>
            <param name="resource"> 자원을 전달합니다. </param>
            <param name="values"> 초기화 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ClearUnorderedAccessViewFloat(SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.ID3D12Resource,SmartEngine.Core.Numerics.Color,System.Collections.Generic.IList{SmartEngine.Core.Numerics.Rectangle})">
            <summary>
            순서없는 접근 텍스처를 초기화합니다.
            </summary>
            <param name="viewGPUHandleInCurrentHeap"> 서술자의 GPU 핸들을 전달합니다. 서술자 힙이 <see cref="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetDescriptorHeaps(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12DescriptorHeap})"/> 메서드로 선택되어 있어야 합니다. </param>
            <param name="viewCPUHandle"> 서술자의 CPU 핸들을 전달합니다. </param>
            <param name="resource"> 자원을 전달합니다. </param>
            <param name="values"> 초기화 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.DiscardResource(SC.ThirdParty.DirectX.ID3D12Resource,System.Nullable{SC.ThirdParty.DirectX.D3D12DiscardRegion})">
            <summary>
            자원의 내용을 버립니다. 자원의 내용을 보존할 필요가 없음을 의미합니다.
            </summary>
            <param name="resource"> 대상 자원을 전달합니다. </param>
            <param name="region"> 버릴 영역을 전달합니다. null을 경우 자원 전체가 사용됩니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.BeginQuery(SC.ThirdParty.DirectX.ID3D12QueryHeap,SC.ThirdParty.DirectX.D3D12QueryType,System.UInt32)">
            <summary>
            GPU를 대상으로 정보 요청을 시작합니다.
            </summary>
            <param name="queryHeap"> 요청 결과를 받을 힙을 전달합니다. </param>
            <param name="type"> 요청 형식을 전달합니다. </param>
            <param name="index"> 대상 인덱스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.EndQuery(SC.ThirdParty.DirectX.ID3D12QueryHeap,SC.ThirdParty.DirectX.D3D12QueryType,System.UInt32)">
            <summary>
            GPU를 대상으로 정보 요청을 종료합니다.
            </summary>
            <param name="queryHeap"> 요청 결과를 받을 힙을 전달합니다. </param>
            <param name="type"> 요청 형식을 전달합니다. </param>
            <param name="index"> 대상 인덱스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ResolveQueryData(SC.ThirdParty.DirectX.ID3D12QueryHeap,SC.ThirdParty.DirectX.D3D12QueryType,System.UInt32,System.UInt32,SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64)">
            <summary>
            정보 요청 결과를 버퍼로 전송합니다.
            </summary>
            <param name="queryHeap"> 요청 결과 힙을 전달합니다. </param>
            <param name="type"> 요청 형식을 전달합니다. </param>
            <param name="startIndex"> 결과를 가져올 인덱스 시작 위치를 전달합니다. </param>
            <param name="numQueries"> 결과를 가져올 인덱스 개수를 전달합니다. </param>
            <param name="destinationBuffer"> 결과를 가져올 버퍼를 전달합니다. </param>
            <param name="alignedDestinationBufferOffset"> 값을 쓰기 시작할, 정렬된 바이트 단위 오프셋을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetPredication(SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64,SC.ThirdParty.DirectX.D3D12PredicationOP)">
            <summary>
            Predication 상태를 설정합니다.
            </summary>
            <param name="buffer"> 설정할 대상 자원을 전달합니다. </param>
            <param name="alignedBufferOffset"> 정렬된 버퍼 오프셋을 전달합니다. </param>
            <param name="operation"> 연산 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.ExecuteIndirect(SC.ThirdParty.DirectX.ID3D12CommandSignature,System.UInt32,SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64,SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64)">
            <summary>
            간접적으로 명령을 실행합니다.
            </summary>
            <param name="commandSignature"> 명령 서명 개체를 전달합니다. <paramref name="argumentBuffer"/>의 데이터는 명령 서명의 명령 내용에 의해 유연하게 해석됩니다. </param>
            <param name="maxCommandCount"> 최대 명령 수를 전달합니다. <paramref name="countBuffer"/>가 null일 경우 이 값은 명령 수를 나타냅니다. 아닐 경우, 수행할 실제 명령 수는 이 값의 최소 값과 <paramref name="countBuffer"/>에 포함된 32비트 부호없는 정수로 정의됩니다. </param>
            <param name="argumentBuffer"> 명령에 따라 해석될 매개 변수 버퍼를 전달합니다. </param>
            <param name="argumentBufferOffset"> 매개 변수 버퍼의 오프셋을 전달합니다. </param>
            <param name="countBuffer"> 작업 횟수 버퍼를 전달합니다. </param>
            <param name="countBufferOffset"> 작업 횟수 버퍼의 오프셋을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.CopyBufferRegion(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            <paramref name="srcBuffer"/> 자원의 데이터를 <paramref name="dstBuffer"/> 자원으로 GPU 차원에서 단순 복사를 수행합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="dstBuffer"> 복사 대상 자원을 전달합니다. </param>
            <param name="srcBuffer"> 복사 원본 자원을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ResolveSubresource(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            멀티 샘플 리소스를 일반 리소스에 복사합니다. 서브리소스 인덱스는 0번이며, 자원의 형식은 대상 일반 리소스의 형식을 참조합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="dstResource"> 대상 일반 리소스를 전달합니다. </param>
            <param name="srcResource"> 원본 멀티 샘플 리소스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.RSSetViewports(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12Viewport[])">
            <summary>
            뷰포트를 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="viewports"> 뷰포트 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.RSSetScissorRects(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            절단 영역을 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="rects"> 절단 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ResourceBarrier(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12ResourceBarrier[])">
            <summary>
            자원 상태 장벽을 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="barriers"> 자원 상태 장벽 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SetDescriptorHeaps(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.ID3D12DescriptorHeap[])">
            <summary>
            서술자 힙 개체를 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="descriptorHeaps"></param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SetComputeRoot32BitConstant(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,System.Single,System.UInt32)">
            <summary>
            32비트 컴퓨트 루트 서명 값을 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SetComputeRoot32BitConstant(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            32비트 컴퓨트 루트 서명 값을 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SetGraphicsRoot32BitConstant(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,System.Single,System.UInt32)">
            <summary>
            32비트 그래픽 루트 서명 값을 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SetGraphicsRoot32BitConstant(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            32비트 그래픽 루트 서명 값을 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SetComputeRoot32BitConstants``1(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,``0,System.UInt32)">
            <summary>
            32비트 컴퓨트 루트 서명 값을 설정합니다.
            </summary>
            <typeparam name="T"> 설정할 값의 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SetGraphicsRoot32BitConstants``1(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,``0,System.UInt32)">
            <summary>
            32비트 그래픽 루트 서명 값을 설정합니다.
            </summary>
            <typeparam name="T"> 설정할 값의 형식을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="rootParameterIndex"> 매개변수 인덱스를 전달합니다. </param>
            <param name="srcData"> 설정할 값을 전달합니다. </param>
            <param name="destOffsetIn32BitValues"> 값을 복사할 대상 바이트 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.IASetVertexBuffers(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,SC.ThirdParty.DirectX.D3D12VertexBufferView[])">
            <summary>
            정점 버퍼 서술 정보를 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="startSlot"> 설정할 슬롯 인덱스를 전달합니다. </param>
            <param name="views"> 서술 정보 구조체 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.SOSetTargets(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,System.UInt32,SC.ThirdParty.DirectX.D3D12StreamOutputBufferView[])">
            <summary>
            스트림 출력 서술 정보를 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="startSlot"> 설정할 슬롯 인덱스를 전달합니다. </param>
            <param name="views"> 서술 정보 구조체 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ClearDepthStencilView(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12ClearFlags,System.Single,System.UInt32,SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            깊이 스텐실 텍스처를 초기화합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="depthStencilView"> 깊이 스텐실 서술자를 전달합니다. </param>
            <param name="clearFlags"> 초기화 플래그를 전달합니다. </param>
            <param name="depth"> 초기화 깊이 값을 전달합니다. </param>
            <param name="stencil"> 초기화 스텐실 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ClearDepthStencilView(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,System.Single,SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            깊이 스텐실 텍스처의 깊이를 초기화합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="depthStencilView"> 깊이 스텐실 서술자를 전달합니다. </param>
            <param name="depth"> 초기화 깊이 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ClearDepthStencilView(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,System.UInt32,SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            깊이 스텐실 텍스처의 스텐실을 초기화합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="depthStencilView"> 깊이 스텐실 서술자를 전달합니다. </param>
            <param name="stencil"> 초기화 스텐실 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ClearRenderTargetView(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SmartEngine.Core.Numerics.Color,SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            렌더 타겟 텍스처를 초기화합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="renderTargetView"> 렌더 타겟 서술자를 전달합니다. </param>
            <param name="color"> 초기화 색상 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ClearUnorderedAccessViewUint(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12UInt4,SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            순서없는 접근 텍스처를 초기화합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="viewGPUHandleInCurrentHeap"> 서술자의 GPU 핸들을 전달합니다. 서술자 힙이 <see cref="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetDescriptorHeaps(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12DescriptorHeap})"/> 메서드로 선택되어 있어야 합니다. </param>
            <param name="viewCPUHandle"> 서술자의 CPU 핸들을 전달합니다. </param>
            <param name="resource"> 자원을 전달합니다. </param>
            <param name="values"> 초기화 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.ClearUnorderedAccessViewFloat(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.D3D12GPUDescriptorHandle,SC.ThirdParty.DirectX.D3D12CPUDescriptorHandle,SC.ThirdParty.DirectX.ID3D12Resource,SmartEngine.Core.Numerics.Color,SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            순서없는 접근 텍스처를 초기화합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="viewGPUHandleInCurrentHeap"> 서술자의 GPU 핸들을 전달합니다. 서술자 힙이 <see cref="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandList.SetDescriptorHeaps(System.Collections.Generic.IList{SC.ThirdParty.DirectX.ID3D12DescriptorHeap})"/> 메서드로 선택되어 있어야 합니다. </param>
            <param name="viewCPUHandle"> 서술자의 CPU 핸들을 전달합니다. </param>
            <param name="resource"> 자원을 전달합니다. </param>
            <param name="values"> 초기화 값을 전달합니다. </param>
            <param name="rects"> 초기화 영역 목록을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.TransitionBarrier(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.D3D12ResourceStates,SC.ThirdParty.DirectX.D3D12ResourceStates,System.UInt32)">
            <summary>
            자원 상태 전이 장벽을 설정합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="resource"> 대상 자원 개체를 전달합니다. </param>
            <param name="stateBefore"> 이전 상태를 전달합니다. </param>
            <param name="stateAfter"> 이후 상태를 전달합니다. </param>
            <param name="subresource"> 서브리소스 인덱스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12GraphicsCommandListExtensions.CopyBufferRegion(SC.ThirdParty.DirectX.ID3D12GraphicsCommandList,SC.ThirdParty.DirectX.ID3D12Resource,SC.ThirdParty.DirectX.ID3D12Resource,System.UInt64)">
            <summary>
            <paramref name="srcBuffer"/> 자원의 데이터를 <paramref name="dstBuffer"/> 자원으로 GPU 차원에서 전송합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="dstBuffer"> 복사 대상 자원을 전달합니다. </param>
            <param name="srcBuffer"> 복사 원본 자원을 전달합니다. </param>
            <param name="numBytes"> 복사 바이트 단위 크기를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12Heap">
            <summary>
            D3D12 힙 영역에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Heap.GetDesc">
            <summary>
            힙 정보 구조체를 가져옵니다.
            </summary>
            <returns> 정보 구조체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12Object">
            <summary>
            D3D12 API에서 사용되는 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Object.SetPrivateData(System.Guid,System.Object)">
            <summary>
            GUID를 이름으로 하여 개체에 개인 데이터를 연결합니다.
            </summary>
            <param name="iid"> 식별 GUID를 전달합니다. </param>
            <param name="data"> 데이터 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Object.GetPrivateData(System.Guid)">
            <summary>
            개체에 연결된 개인 데이터를 GUID 이름으로 가져옵니다.
            </summary>
            <param name="iid"> 식별 GUID를 전달합니다. </param>
            <returns> 개체가 존재할 경우 개체를, 존재하지 않을 경우 null을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Object.SetName(System.String)">
            <summary>
            개체의 디버그 이름을 설정합니다.
            </summary>
            <param name="name"> 이름을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12Pageable">
            <summary>
            개체가 GPU 메모리에 엑세스함을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12PipelineState">
            <summary>
            D3D12 셰이더 파이프라인 상태를 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12PipelineState.GetCachedBlob">
            <summary>
            파이프라인 상태의 캐시 데이터 블록을 가져옵니다.
            </summary>
            <returns> 캐시 데이터 블록 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12QueryHeap">
            <summary>
            D3D12 GPU에 요청한 정보를 받을 힙에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12Resource">
            <summary>
            D3D12 GPU에서 사용되는 자원에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Resource.Map(System.UInt32,System.Nullable{SC.ThirdParty.DirectX.D3D12Range})">
            <summary>
            CPU에서 접근 가능한 메모리 주소를 매핑합니다.
            </summary>
            <param name="subresource"> 자원의 서브리소스 인덱스를 전달합니다. </param>
            <param name="readRange"> 자원의 매핑 범위를 전달합니다. </param>
            <returns> 자원의 매핑 주소가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Resource.Unmap(System.UInt32,System.Nullable{SC.ThirdParty.DirectX.D3D12Range})">
            <summary>
            메모리 주소 매핑을 해제합니다.
            </summary>
            <param name="subresource"> 자원의 서브리소스 인덱스를 전달합니다. </param>
            <param name="writtenRange"> 자원의 쓰기 범위를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Resource.GetDesc">
            <summary>
            자원의 생성 서술 구조체를 가져옵니다.
            </summary>
            <returns> 서술 구조체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Resource.GetGPUVirtualAddress">
            <summary>
            GPU 가상 주소 값을 가져옵니다.
            </summary>
            <returns> 가상 주소 값이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Resource.WriteToSubresource(System.UInt32,System.Nullable{SC.ThirdParty.DirectX.D3D12Box},System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            네이티브 데이터를 자원의 서브리소스에 씁니다.
            </summary>
            <param name="dstSubresource"> 데이터를 제출할 서브리소스 인덱스를 전달합니다. </param>
            <param name="dstBox"> 데이터를 제출할 위치를 전달합니다. </param>
            <param name="pSrcData"> 데이터 원본 네이티브 포인터를 전달합니다. </param>
            <param name="srcRowPitch"> 데이터의 바이트 단위 너비를 전달합니다. </param>
            <param name="srcDepthPitch"> 데이터의 깊이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Resource.ReadFromSubresource(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Nullable{SC.ThirdParty.DirectX.D3D12Box})">
            <summary>
            자원의 서브리소스에서 네이티브 데이터를 가져옵니다.
            </summary>
            <param name="pDstData"> 데이터를 받을 네티이브 포인터를 전달합니다. </param>
            <param name="dstRowPitch"> 데이터를 받을 위치의 바이트 단위 너비를 전달합니다. </param>
            <param name="dstDepthPitch"> 데이터를 받을 위치의 깊이를 전달합니다. </param>
            <param name="srcSubresource"> 데이터를 가져올 서브리소스 인덱스를 전달합니다. </param>
            <param name="srcBox"> 데이터를 가져올 서브리소스의 영역을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12Resource.GetHeapProperties(SC.ThirdParty.DirectX.D3D12HeapProperties@,SC.ThirdParty.DirectX.D3D12HeapFlags@)">
            <summary>
            자원의 힙 속성을 가져옵니다.
            </summary>
            <param name="heapProperties"> 힙 속성 서술 구조체를 받을 변수의 참조를 전달합니다. </param>
            <param name="heapFlags"> 힙 속성을 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12ResourceExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.ID3D12Resource"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12ResourceExtensions.WriteToSubresource(SC.ThirdParty.DirectX.ID3D12Resource,System.Nullable{SC.ThirdParty.DirectX.D3D12Box},System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            네이티브 데이터를 자원의 0번 서브리소스에 씁니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="dstBox"> 데이터를 제출할 위치를 전달합니다. </param>
            <param name="pSrcData"> 데이터 원본 네이티브 포인터를 전달합니다. </param>
            <param name="srcRowPitch"> 데이터의 바이트 단위 너비를 전달합니다. </param>
            <param name="srcDepthPitch"> 데이터의 바이트 단위 깊이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12ResourceExtensions.WriteToSubresource(SC.ThirdParty.DirectX.ID3D12Resource,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            네이티브 데이터를 자원의 0번 서브리소스에 씁니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="pSrcData"> 데이터 원본 네이티브 포인터를 전달합니다. </param>
            <param name="srcRowPitch"> 데이터의 바이트 단위 너비를 전달합니다. </param>
            <param name="srcDepthPitch"> 데이터의 바이트 단위 깊이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12ResourceExtensions.ReadFromSubresource(SC.ThirdParty.DirectX.ID3D12Resource,System.IntPtr,System.UInt32,System.UInt32,System.Nullable{SC.ThirdParty.DirectX.D3D12Box})">
            <summary>
            자원의 0번 서브리소스에서 네이티브 데이터를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="pDstData"> 데이터를 받을 네티이브 포인터를 전달합니다. </param>
            <param name="dstRowPitch"> 데이터를 받을 위치의 바이트 단위 너비를 전달합니다. </param>
            <param name="dstDepthPitch"> 데이터를 받을 위치의 깊이를 전달합니다. </param>
            <param name="srcBox"> 데이터를 가져올 서브리소스의 영역을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12ResourceExtensions.ReadFromSubresource(SC.ThirdParty.DirectX.ID3D12Resource,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            자원의 0번 서브리소스에서 네이티브 데이터를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="pDstData"> 데이터를 받을 네티이브 포인터를 전달합니다. </param>
            <param name="dstRowPitch"> 데이터를 받을 위치의 바이트 단위 너비를 전달합니다. </param>
            <param name="dstDepthPitch"> 데이터를 받을 위치의 깊이를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3D12ResourceExtensions.GetHeapProperties(SC.ThirdParty.DirectX.ID3D12Resource)">
            <summary>
            자원의 힙 속성을 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <returns> 힙 속성 구조체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3D12RootSignature">
            <summary>
            D3D12 셰이더 입력 서명에 대한 정보를 보관합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3DDriverType">
            <summary>
            D3D 드라이버 유형을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DDriverType.Unknown">
            <summary>
            알 수 없는 드라이버 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DDriverType.Hardware">
            <summary>
            하드웨어 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DDriverType.Reference">
            <summary>
            레퍼런스 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DDriverType.Null">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DDriverType.Software">
            <summary>
            소프트웨어 구현 유형입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DDriverType.Warp">
            <summary>
            WARP(Windows Advance Rasterization Platform) 유형입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3DFeatureLevel">
            <summary>
            D3D 기능 레벨을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Unspecified">
            <summary>
            알 수 없는 기능 레벨입니다. 일반적으로 이 값은 오류입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level1_0_Core">
            <summary>
            MCDM 장치를 사용합니다. MCDM은 계산 전용 드라이버 모델입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level9_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level9_2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level9_3">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level10_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level10_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level11_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level11_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level12_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DFeatureLevel.Level12_1">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3DPrimitiveTopology">
            <summary>
            D3D 최소 기하 모형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.Undefined">
            <summary>
            정의되지 않은 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.PointList">
            <summary>
            점 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.LineList">
            <summary>
            선 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.LineStrip">
            <summary>
            선 연결 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.TriangleList">
            <summary>
            삼각형 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.TriangleStrip">
            <summary>
            삼각형 연결 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.LineList_ADJ">
            <summary>
            인접 정보를 가지는 선 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.LineStrip_ADJ">
            <summary>
            인접 정보를 가지는 선 연결 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.TriangleList_ADJ">
            <summary>
            인접 정보를 가지는 삼각형 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.TriangleStrip_ADJ">
            <summary>
            인접 정보를 가지는 삼각형 연결 목록 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.ControlPointPatchList1">
            <summary>
            1개의 제어점을 가지는 패치 리스트 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.ControlPointPatchList32">
            <summary>
            32개의 제어점을 가지는 패치 리스트 형식입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.ControlPointPatchListBegin">
            <summary>
            N개의 제어점을 가지는 패치 리스트에서, 1부터 시작하는 시작 위치를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DPrimitiveTopology.ControlPointPatchListEnd">
            <summary>
            N개의 제어점 위치를 가지는 패치 리스트에서, 32로 종료되는 종료 위치를 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3DPrimitiveTopologyExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.D3DPrimitiveTopology"/> 열거형에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.D3DPrimitiveTopologyExtensions.ControlPointOffset(SC.ThirdParty.DirectX.D3DPrimitiveTopology,System.Int32)">
            <summary>
            N개의 제어점을 가지는 패치 리스트 형식에서 제어점의 개수를 변경합니다.
            </summary>
            <param name="this"> 열거형을 전달합니다. </param>
            <param name="offset"> 변경될 개수를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3DRootSignatureVersion">
            <summary>
            D3D 입력 서명 버전을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DRootSignatureVersion.Version1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DRootSignatureVersion.Version1_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DRootSignatureVersion.Version1_1">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.D3DShaderModel">
            <summary>
            D3D 셰이더 모델 레벨을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel.Unspecified">
            <summary>
            지정되지 않음을 의미합니다. 일반적으로, 이 값은 오류입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel._5_1">
            <summary>
            5.1 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel._6_0">
            <summary>
            6.0 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel._6_1">
            <summary>
            6.1 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel._6_2">
            <summary>
            6.2 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel._6_3">
            <summary>
            6.3 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel._6_4">
            <summary>
            6.4 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.D3DShaderModel._6_5">
            <summary>
            6.5 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.ID3DBlob">
            <summary>
            D3D 표준 데이터 전송 방식으로 사용하는 데이터 블록을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3DBlob.GetBufferPointer">
            <summary>
            버퍼의 네이티브 포인터를 가져옵니다.
            </summary>
            <returns> 네이티브 포인터가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.ID3DBlob.GetBufferSize">
            <summary>
            버퍼의 크기를 가져옵니다.
            </summary>
            <returns> 버퍼의 크기가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteBreakCondition">
            <summary>
            DWrite Condition at the edges of inline object or text used to determine line-breaking behaviour.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteBreakCondition.Neutral">
            <summary>
            Whether a break is allowed is determined by the condition of the neighboring text span or inline object.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteBreakCondition.CanBreak">
            <summary>
            A break is allowed, unless overruled by the condition of the neighboring text span or inline object, either prohibited by a May Not or forced by a Must.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteBreakCondition.MayNotBreak">
            <summary>
            There should be no break, unless overruled by a Must condition from the neighboring text span or inline object.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteBreakCondition.MustBreak">
            <summary>
            The break must happen, regardless of the condition of the adjacent text span or inline object.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteClusterMetrics">
            <summary>
            DWrite Contains information about a glyph cluster.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteClusterMetrics.Width">
            <summary>
            The total advance width of all glyphs in the cluster.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteClusterMetrics.Length">
            <summary>
            The number of text positions in the cluster.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteClusterMetrics.CanWrapLineAfter">
            <summary>
            Indicate whether line can be broken right after the cluster.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteClusterMetrics.IsWhitespace">
            <summary>
            Indicate whether the cluster corresponds to whitespace character.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteClusterMetrics.IsNewline">
            <summary>
            Indicate whether the cluster corresponds to a newline character.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteClusterMetrics.IsSoftHyphen">
            <summary>
            Indicate whether the cluster corresponds to soft hyphen character.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteClusterMetrics.IsRightToLeft">
            <summary>
            Indicate whether the cluster is read from right to left.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteFactoryType">
            <summary>
            <para> DWrite Specifies the type of DirectWrite factory object. </para>
            <para> DirectWrite factory contains internal state such as font loader registration and cached font data. </para>
            <para> In most cases it is recommended to use the shared factory object, because it allows multiple components that use DirectWrite to share internal DirectWrite state and reduce memory usage. </para>
            <para> However, there are cases when it is desirable to reduce the impact of a component, such as a plug-in from an untrusted source, on the rest of the process by sandboxing and isolating it from the rest of the process components. </para>
            <para> In such cases, it is recommended to use an isolated factory for the sandboxed component. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFactoryType.Shared">
            <summary>
            <para> Shared factory allow for re-use of cached font data across multiple in process components. </para>
            <para> Such factories also take advantage of cross process font caching components for better performance. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFactoryType.Isolated">
            <summary>
            Objects created from the isolated factory do not interact with internal DirectWrite state from other components.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteFlowDirection">
            <summary>
            DWrite 절 진행 방향을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFlowDirection.TopToBottom">
            <summary>
            위에서 아래로 진행합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFlowDirection.BottomToTop">
            <summary>
            아래에서 위로 진행합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFlowDirection.LeftToRight">
            <summary>
            왼쪽에서 오른쪽으로 진행합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFlowDirection.RightToLeft">
            <summary>
            오른쪽에서 왼쪽으로 진행합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteFontStretch">
            <summary>
            DWrite The font stretch enumeration describes relative change from the normal aspect ratio as specified by a font designer for the glyphs in a font.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.Undefined">
            <summary>
            Predefined font stretch : Not known (0).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.UltraCondensed">
            <summary>
            Predefined font stretch : Ultra-condensed (1).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.ExtraCondensed">
            <summary>
            Predefined font stretch : Extra-condensed (2).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.Condensed">
            <summary>
            Predefined font stretch : Condensed (3).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.SemiCondensed">
            <summary>
            Predefined font stretch : Semi-condensed (4).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.Normal">
            <summary>
            Predefined font stretch : Normal (5).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.Medium">
            <summary>
            Predefined font stretch : Medium (5).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.SemiExpanded">
            <summary>
            Predefined font stretch : Semi-expanded (6).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.Expanded">
            <summary>
            Predefined font stretch : Expanded (7).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.ExtraExpanded">
            <summary>
            Predefined font stretch : Extra-expanded (8).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStretch.UltraExpanded">
            <summary>
            Predefined font stretch : Ultra-expanded (9).
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteFontStyle">
            <summary>
            DWrite The font style enumeration describes the slope style of a font face, such as Normal, Italic or Oblique.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStyle.Normal">
            <summary>
            Font slope style : Normal.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStyle.Oblique">
            <summary>
            Font slope style : Oblique.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontStyle.Italic">
            <summary>
            Font slope style : Italic.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteFontWeight">
            <summary>
            DWrite The font weight enumeration describes common values for degree of blackness or thickness of strokes of characters in a font.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Thin">
            <summary>
            Predefined font weight : Thin (100).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.ExtraLight">
            <summary>
            Predefined font weight : Extra-light (200).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.UltraLight">
            <summary>
            Predefined font weight : Ultra-light (200).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Light">
            <summary>
            Predefined font weight : Light (300).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.SemiLight">
            <summary>
            Predefined font weight : Semi-light (350).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Normal">
            <summary>
            Predefined font weight : Normal (400).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Regular">
            <summary>
            Predefined font weight : Regular (400).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Medium">
            <summary>
            Predefined font weight : Medium (500).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.DemiBold">
            <summary>
            Predefined font weight : Demi-bold (600).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.SemiBold">
            <summary>
            Predefined font weight : Semi-bold (600).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Bold">
            <summary>
            Predefined font weight : Bold (700).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.ExtraBold">
            <summary>
            Predefined font weight : Extra-bold (800).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.UltraBold">
            <summary>
            Predefined font weight : Ultra-bold (800).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Black">
            <summary>
            Predefined font weight : Black (900).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.Heavy">
            <summary>
            Predefined font weight : Heavy (900).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.ExtraBlack">
            <summary>
            Predefined font weight : Extra-black (950).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteFontWeight.UltraBlack">
            <summary>
            Predefined font weight : Ultra-black (950).
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteGlyphOffset">
            <summary>
            DWrite Optional adjustment to a glyph's position.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphOffset.AdvanceOffset">
            <summary>
             Offset in the advance direction of the run.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphOffset.AscenderOffset">
            <summary>
            Offset in the ascent direction, i.e., the direction ascenders point.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteGlyphRun">
            <summary>
            DWrite Contains the information needed by renderers to draw glyph runs. All coordinates are in device independent pixels (DIPs).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.FontFace">
            <summary>
            The physical font face to draw with.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.FontEmSize">
            <summary>
            Logical size of the font in DIPs, not points (equals 1/96 inch).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.GlyphCount">
            <summary>
            The number of glyphs.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.GlyphIndices">
            <summary>
            The indices to render.
            </summary>    
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.GlyphAdvances">
            <summary>
            Glyph advance widths.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.GlyphOffsets">
            <summary>
            Glyph offsets.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.IsSideways">
            <summary>
            <para> If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. </para>
            <para> Vertical writing is achieved by specifying IsSideways = true and rotating the entire run 90 degrees to the right via a rotate transform. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRun.BidiLevel">
            <summary>
            <para> The implicit resolved bidi level of the run. </para>
            <para> Odd levels indicate right-to-left languages like Hebrew and Arabic, while even levels indicate left-to-right languages like English and Japanese (when written horizontally). </para>
            <para> For right-to-left languages, the text origin is on the right, and text should be drawn to the left. </para>
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteGlyphRunDescription">
            <summary>
            DWrite Contains additional properties related to those in <see cref="T:SC.ThirdParty.DirectX.DWriteGlyphRun"/>.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRunDescription.LocaleName">
            <summary>
            The locale name associated with this run.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRunDescription.String">
            <summary>
            <para> The text associated with the glyphs. </para>
            <para> Note that count of this string may be different than the number of glyphs. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRunDescription.ClusterMap">
            <summary>
            An array of indices to the glyph indices array, of the first glyphs of all the glyph clusters of the glyphs to render.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteGlyphRunDescription.TextPosition">
            <summary>
            Corresponding text position in the original string this glyph run came from.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteHitTestMetrics">
            <summary>
            DWrite Geometry enclosing of text positions.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.TextPosition">
            <summary>
            First text position within the geometry.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.Length">
            <summary>
            Number of text positions within the geometry.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.Left">
            <summary>
            Left position of the top-left coordinate of the geometry.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.Top">
            <summary>
            Top position of the top-left coordinate of the geometry.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.Width">
            <summary>
            Geometry's width.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.Height">
            <summary>
            Geometry's height.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.BidiLevel">
            <summary>
            Bidi level of text positions enclosed within the geometry.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.IsText">
            <summary>
            Geometry encloses text?
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteHitTestMetrics.IsTrimmed">
            <summary>
            Range is trimmed.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteInlineObjectMetrics">
            <summary>
            DWrite Properties describing the geometric measurement of an application-defined inline object.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteInlineObjectMetrics.Width">
            <summary>
            Width of the inline object.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteInlineObjectMetrics.Height">
            <summary>
            Height of the inline object as measured from top to bottom.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteInlineObjectMetrics.Baseline">
            <summary>
            <para> Distance from the top of the object to the baseline where it is lined up with the adjacent text. </para>
            <para> If the baseline is at the bottom, baseline simply equals height. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteInlineObjectMetrics.SupportsSideways">
            <summary>
            Flag indicating whether the object is to be placed upright or alongside the text baseline for vertical text.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteLineMetrics">
            <summary>
            DWrite Contains information about a formatted line of text.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineMetrics.Length">
            <summary>
            <para> The number of total text positions in the line. </para>
            <para> This includes any trailing whitespace and newline characters. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineMetrics.TrailingWhitespaceLength">
            <summary>
            The number of whitespace positions at the end of the line. Newline sequences are considered whitespace.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineMetrics.NewlineLength">
            <summary>
            <para> The number of characters in the newline sequence at the end of the line. </para>
            <para> If the count is zero, then the line was either wrapped or it is the end of the text. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineMetrics.Height">
            <summary>
            Height of the line as measured from top to bottom.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineMetrics.Baseline">
            <summary>
            Distance from the top of the line to its baseline.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineMetrics.IsTrimmed">
            <summary>
            The line is trimmed.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteLineSpacingMethod">
            <summary>
            DWrite The method used for line spacing in layout.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineSpacingMethod.Default">
            <summary>
            Line spacing depends solely on the content, growing to accommodate the size of fonts and inline objects.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineSpacingMethod.Uniform">
            <summary>
            <para> Lines are explicitly set to uniform spacing, regardless of contained font sizes. </para>
            <para> This can be useful to avoid the uneven appearance that can occur from font fallback. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteLineSpacingMethod.Proportional">
            <summary>
            Line spacing and baseline distances are proportional to the computed values based on the content, the size of the fonts and inline objects.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteMeasuringMode">
            <summary>
            DWrite 텍스트 레이아웃에 사용되는 측정 모드를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteMeasuringMode.Natural">
            <summary>
            Text is measured using glyph ideal metrics whose values are independent to the current display resolution.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteMeasuringMode.GDIClassic">
            <summary>
            Text is measured using glyph display compatible metrics whose values tuned for the current display resolution.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteMeasuringMode.GDINatural">
            <summary>
            Text is measured using the same glyph display metrics as text measured by GDI using a font created with CLEARTYPE_NATURAL_QUALITY.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteOverhangMetrics">
            <summary>
            DWrite Holds how much any visible pixels(in DIPs) overshoot each side of the layout or inline objects.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteOverhangMetrics.Left">
            <summary>
            The distance from the left-most visible DIP to its left alignment edge.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteOverhangMetrics.Top">
            <summary>
            The distance from the top-most visible DIP to its top alignment edge.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteOverhangMetrics.Right">
            <summary>
            The distance from the right-most visible DIP to its right alignment edge.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteOverhangMetrics.Bottom">
            <summary>
            The distance from the bottom-most visible DIP to its bottom alignment edge.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteParagraphAlignment">
            <summary>
            DWrite 절 정렬 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteParagraphAlignment.Near">
            <summary>
            레이아웃의 시작 부분에 가깝게 정렬합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteParagraphAlignment.Far">
            <summary>
            레이아웃의 먼 부분에 가깝게 정렬합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteParagraphAlignment.Center">
            <summary>
            레이아웃의 가운데 부분에 가깝게 정렬합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteReadingDirection">
            <summary>
            DWrite 읽기 방향을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteReadingDirection.LeftToRight">
            <summary>
            왼쪽부터 오른쪽으로 읽습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteReadingDirection.RightToLeft">
            <summary>
            오른쪽부터 왼쪽으로 읽습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteReadingDirection.TopToBottom">
            <summary>
            위부터 아래로 읽습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteReadingDirection.BottomToTop">
            <summary>
            아래부터 위로 읽습니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteStrikethrough">
            <summary>
            DWrite Contains information about the size and placement of strikethroughs.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteStrikethrough.Width">
            <summary>
            Width of the strikethrough, measured parallel to the baseline.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteStrikethrough.Thickness">
            <summary>
            Thickness of the strikethrough, measured perpendicular to the baseline.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteStrikethrough.Offset">
            <summary>
            <para> Offset of the strikethrough from the baseline. </para>
            <para> A positive offset represents a position below the baseline and a negative offset is above. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteStrikethrough.ReadingDirection">
            <summary>
            <para> Reading direction of the text associated with the strikethrough. </para>
            <para> This value is used to interpret whether the width value runs horizontally or vertically. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteStrikethrough.FlowDirection">
            <summary>
            <para> Flow direction of the text associated with the strikethrough. </para>
            <para> This value is used to interpret whether the thickness value advances top to bottom, left to right, or right to left. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteStrikethrough.LocaleName">
            <summary>
            Locale of the range.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteStrikethrough.MeasuringMode">
            <summary>
            The measuring mode can be useful to the renderer to determine how strikethroughs are rendered, e.g. rounding the thickness to a whole pixel in GDI_compatible modes.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteTextAlignment">
            <summary>
            DWrite 텍스트 정렬 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextAlignment.Leading">
            <summary>
            선행 정렬 방식을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextAlignment.Trailing">
            <summary>
            후행 정렬 방식을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextAlignment.Center">
            <summary>
            가운데 정렬 방식을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextAlignment.Justified">
            <summary>
            여백 없음 정렬 방식을 사용합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteTextMetrics">
            <summary>
            DWrite Overall metrics associated with text after layout. All coordinates are in device independent pixels (DIPs).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.Left">
            <summary>
            Left-most point of formatted text relative to layout box(excluding any glyph overhang).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.Top">
            <summary>
            Top-most point of formatted text relative to layout box(excluding any glyph overhang).
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.Width">
            <summary>
            The width of the formatted text ignoring trailing whitespace at the end of each line.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.WidthIncludingTrailingWhitespace">
            <summary>
            The width of the formatted text taking into account the trailing whitespace at the end of each line.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.Height">
            <summary>
            The height of the formatted text. The height of an empty string is determined by the size of the default font's line height.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.LayoutWidth">
            <summary>
            Initial width given to the layout. Depending on whether the text was wrapped or not, it can be either larger or smaller than the text content width.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.LayoutHeight">
            <summary>
            Initial height given to the layout. Depending on the length of the text, it may be larger or smaller than the text content height.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.MaxBidiReorderingDepth">
            <summary>
            <para> The maximum reordering count of any line of text, used to calculate the most number of hit-testing boxes needed. </para>
            <para> If the layout has no bidirectional text or no text at all, the minimum level is 1. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextMetrics.LineCount">
            <summary>
            Total number of lines.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteTextRange">
            <summary>
            DWrite Specifies a range of text positions where format is applied.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextRange.StartPosition">
            <summary>
            The start text position of the range.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTextRange.Length">
            <summary>
            The number of text positions in the range.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.DWriteTextRange.EndPosition">
            <summary>
            Gets or sets the end text position of the range.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DWriteTextRange.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteTrimming">
            <summary>
            DWrite Specifies the trimming option for text overflowing the layout box.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTrimming.Granularity">
            <summary>
            Text granularity of which trimming applies.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTrimming.Delimiter">
            <summary>
            <para> Character code used as the delimiter signaling the beginning of the portion of text to be preserved, most useful for path ellipsis, where the delimiter would be a slash. </para>
            <para> Leave this zero if there is no delimiter. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTrimming.DelimiterCount">
            <summary>
            <para> How many occurrences of the delimiter to step back. </para>
            <para> Leave this zero if there is no delimiter. </para>
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteTrimmingGranularity">
            <summary>
            DWrite Text granularity used to trim text overflowing the layout box.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTrimmingGranularity.None">
            <summary>
            No trimming occurs. Text flows beyond the layout width.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTrimmingGranularity.Character">
            <summary>
            Trimming occurs at character cluster boundary.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteTrimmingGranularity.Word">
            <summary>
            Trimming occurs at word boundary.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteUnderline">
            <summary>
            DWrite Contains information about the size and placement of underlines.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.Width">
            <summary>
            Width of the underline, measured parallel to the baseline.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.Thickness">
            <summary>
            Thickness of the underline, measured perpendicular to the baseline.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.Offset">
            <summary>
            <para> Offset of the underline from the baseline. </para>
            <para> A positive offset represents a position below the baseline and a negative offset is above. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.RunHeight">
            <summary>
            Height of the tallest run where the underline applies.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.ReadingDirection">
            <summary>
            <para> Reading direction of the text associated with the underline. </para>
            <para> This value is used to interpret whether the width value runs horizontally or vertically. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.FlowDirection">
            <summary>
            <para> Flow direction of the text associated with the underline. </para>
            <para> This value is used to interpret whether the thickness value advances top to bottom, left to right, or right to left. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.LocaleName">
            <summary>
            Locale of the text the underline is begin drawn under.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteUnderline.MeasuringMode">
            <summary>
            The measuring mode can be useful to the renderer to determine how underlines are rendered, e.g. rounding the thickness to a whole pixel in GDI_compatible modes.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DWriteWordWrapping">
            <summary>
            DWrite 단어 래핑 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteWordWrapping.Wrap">
            <summary>
            텍스트가 레이아웃의 경계를 넘지 않도록 단어가 여러 줄로 나뉩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteWordWrapping.NoWrap">
            <summary>
            <para> 텍스트가 레이아웃의 경계를 넘더라도 단어는 같은 줄에 유지됩니다. </para>
            <para> 이 옵션은 경계를 넘는 텍스트를 표시하기 위해 스크롤과 함께 주로 사용됩니다. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteWordWrapping.EmergencyBreak">
            <summary>
            <para> 텍스트가 레이아웃의 경계를 넘지 않도록 단어가 여러 줄로 나뉩니다. </para>
            <para> 단어가 최대 너비보다 큰 경우 긴급 줄 바꿈 알고리즘이 적용됩니다. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteWordWrapping.WholeWord">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DWriteWordWrapping.Character">
            <summary>
            유효한 문자 단위로 래핑합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteFactory">
            <summary>
            DWrite 자원을 관리하는 팩토리 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteFactory.CreateTextFormat(System.String,SC.ThirdParty.DirectX.IDWriteFontCollection,SC.ThirdParty.DirectX.DWriteFontWeight,SC.ThirdParty.DirectX.DWriteFontStyle,SC.ThirdParty.DirectX.DWriteFontStretch,System.Single,System.String)">
            <summary>
            Create a text format object used for text layout.
            </summary>
            <param name="fontFamilyName"> Name of the font family. </param>
            <param name="fontCollection"> Font collection. <c>null</c> indicates the system font collection. </param>
            <param name="fontWeight"> Font weight. </param>
            <param name="fontStyle"> Font style. </param>
            <param name="fontStretch"> Font stretch. </param>
            <param name="fontSize"> Logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch. </param>
            <param name="localeName"> Locale name. </param>
            <returns> Return created text format object, or <c>null</c> in case of failure. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteFactory.CreateTextLayout(System.String,SC.ThirdParty.DirectX.IDWriteTextFormat,SmartEngine.Core.Numerics.Vector2)">
            <summary>
            CreateTextLayout takes a string, format, and associated constraints and produces an object representing the fully analyzed and formatted result.
            </summary>
            <param name="string"> The string to layout. </param>
            <param name="textFormat"> The format to apply to the string. </param>
            <param name="maxSize"> Size of the layout box. </param>
            <returns> Return the resultant object. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteFontCollection">
            <summary>
            DWrite 폰트 패밀리에 대한 컬렉션을 캡슐화합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteFontCollection.GetFontFamilyCount">
            <summary>
            폰트 패밀리 개수를 가져옵니다.
            </summary>
            <returns> 개수가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteFontFace">
            <summary>
            DWrite Exposes various font data such as metrics, names, and glyph outlines.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteFontFace.GetGlyphRunOutline(System.Single,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{SC.ThirdParty.DirectX.DWriteGlyphOffset},System.Boolean,System.Boolean,SC.ThirdParty.DirectX.ID2D1SimplifiedGeometrySink)">
            <summary>
            글리프 런 정보의 외각선 정보를 D2D1 기하 모형 형태로 가져옵니다.
            </summary>
            <param name="emSize"> 폰트 크기를 전달합니다. </param>
            <param name="glyphIndices"> 글리프 인덱스 목록을 전달합니다. </param>
            <param name="glyphAdvances"> 글리프 진행 간격 목록을 전달합니다. </param>
            <param name="glyphOffsets"> 글리프 오프셋 목록을 전달합니다. </param>
            <param name="isSideways"> <c>true</c>일 경우, 글리프가 반시계방향으로 90도 회전하고 수직 정보가 사용됩니다. </param>
            <param name="isRightToLeft"> <c>true</c>일 경우, 진행 방향이 왼쪽으로 향하도록 지시합니다. 기본적으로, 진행 방향은 오른쪽입니다. </param>
            <param name="geometrySink"> 기하 정보를 받을 개체를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteFontFaceExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDWriteFontFace"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteFontFaceExtensions.GetGlyphRunOutline(SC.ThirdParty.DirectX.IDWriteFontFace,SC.ThirdParty.DirectX.DWriteGlyphRun,SC.ThirdParty.DirectX.ID2D1SimplifiedGeometrySink,System.Boolean)">
            <summary>
            글리프 런 정보의 외각선 정보를 D2D1 기하 모형 형태로 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="glyphRun"> 글리프 런 정보를 전달합니다. </param>
            <param name="geometrySink"> 기하 정보를 받을 개체를 전달합니다. </param>
            <param name="isSideways"> <c>true</c>일 경우, 글리프가 반시계방향으로 90도 회전하고 수직 정보가 사용됩니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteInlineObject">
            <summary>
            DWrite 텍스트 내부에 표현되는 그래픽 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteInlineObject.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single,System.Boolean,System.Boolean,SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            <para> The application implement rendering callback <see cref="M:SC.ThirdParty.DirectX.IDWriteTextRenderer.DrawInlineObject(System.Object,System.Single,System.Single,SC.ThirdParty.DirectX.IDWriteInlineObject,System.Boolean,System.Boolean,SC.ThirdParty.DirectX.IUnknown)"/> can use this to draw the inline object without needing to cast or query the object type. </para>
            <para> The text layout does not call this method directly. </para>
            </summary>
            <param name="clientDrawingContext"> The context passed to <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/>. </param>
            <param name="renderer"> The renderer passed to <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/> as the object's containing parent. </param>
            <param name="originX"> X-coordinate at the top-left corner of the inline object. </param>
            <param name="originY"> Y-coordinate at the top-left corner of the inline object. </param>
            <param name="isSideways"> The object should be drawn on its side. </param>
            <param name="isRightToLeft"> The object is in an right-to-left context and should be drawn flipped. </param>
            <param name="clientDrawingEffect"> The drawing effect set in <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetDrawingEffect(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DWriteTextRange)"/>. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteInlineObject.GetMetrics">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDWriteTextLayout"/> calls this callback function to get the measurement of the inline object.
            </summary>
            <returns> Return metrics. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteInlineObject.GetOverhangMetrics">
            <summary>
            <para> <see cref="T:SC.ThirdParty.DirectX.IDWriteTextLayout"/> calls this callback function to get the visible extents (in DIPs) of the inline object. </para>
            <para> In the case of a single bitmap, with no padding and no overhang, all the overhangs will simply be zeroes. </para>
            </summary>
            <returns> Return overshoot of visible extents (in DIPs) outside the object. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteInlineObject.GetBreakConditions(SC.ThirdParty.DirectX.DWriteBreakCondition@,SC.ThirdParty.DirectX.DWriteBreakCondition@)">
            <summary>
            Layout used this to determine the line breaking behaviour of the inline object amidst the text.
            </summary>
            <param name="breakConditionBefore"> Line-breaking condition between the object and the content immediately preceding it. </param>
            <param name="breakConditionAfter"> Line-breaking condition between the object and the content immediately following it. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWritePixelSnapping">
            <summary>
            DWrite 텍스트 렌더러의 픽셀 스내핑 속성을 정의합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWritePixelSnapping.IsPixelSnappingDisabled(System.Object)">
            <summary>
            픽셀 스내핑 속성이 활성화됐는지 여부를 가져옵니다.
            </summary>
            <param name="clientDrawingContext"> 클라이언트 렌더링 컨텍스트가 전달됩니다. </param>
            <returns> 활성화 여부가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWritePixelSnapping.GetCurrentTransform(System.Object)">
            <summary>
            추상 좌표를 DIP에 매핑하는 트랜스폼을 가져옵니다.
            </summary>
            <param name="clientDrawingContext"> 클라이언트 렌더링 컨텍스트가 전달됩니다. </param>
            <returns> 트랜스폼이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWritePixelSnapping.GetPixelsPerDip(System.Object)">
            <summary>
            DPI당 물리적 픽셀 수를 가져옵니다.
            </summary>
            <param name="clientDrawingContext"> 클라이언트 렌더링 컨텍스트가 전달됩니다. </param>
            <returns> DPI당 물리적 픽셀 수가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteTextFormat">
            <summary>
            DWrite 텍스트 배치 정보에 대한 서식을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.SetTextAlignment(SC.ThirdParty.DirectX.DWriteTextAlignment)">
            <summary>
            텍스트 정렬 방식을 설정합니다.
            </summary>
            <param name="textAlignment"> 정렬 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.SetParagraphAlignment(SC.ThirdParty.DirectX.DWriteParagraphAlignment)">
            <summary>
            텍스트 절 정렬 방식을 설정합니다.
            </summary>
            <param name="paragraphAlignment"> 절 정렬 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.SetWordWrapping(SC.ThirdParty.DirectX.DWriteWordWrapping)">
            <summary>
            단어 래핑 방식을 설정합니다.
            </summary>
            <param name="wordWrapping"> 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.SetReadingDirection(SC.ThirdParty.DirectX.DWriteReadingDirection)">
            <summary>
            읽기 방향을 설정합니다.
            </summary>
            <param name="readingDirection"> 읽기 방향을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.SetIncrementalTabStop(System.Single)">
            <summary>
            증분 탭 정지 위치를 설정합니다.
            </summary>
            <param name="incrementalTabStop"> 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.SetTrimming(SC.ThirdParty.DirectX.DWriteTrimming,SC.ThirdParty.DirectX.IDWriteInlineObject)">
            <summary>
            Set trimming options for any trailing text exceeding the layout width or for any far text exceeding the layout height.
            </summary>
            <param name="trimmingOptions"> Text trimming options. </param>
            <param name="trimmingSign"> Application-defined omission sign. This parameter may be <c>null</c> if no trimming sign is desired. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.SetLineSpacing(SC.ThirdParty.DirectX.DWriteLineSpacingMethod,System.Single,System.Single)">
            <summary>
            Set line spacing.
            </summary>
            <param name="lineSpacingMethod"> How to determine line height. </param>
            <param name="lineSpacing"> The line height, or rather distance between one baseline to another. </param>
            <param name="baseline"> Distance from top of line to baseline. A reasonable ratio to lineSpacing is 80%. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetTextAlignment">
            <summary>
            Get alignment option of text relative to layout box's leading and trailing edge.
            </summary>
            <returns> Return text alignment. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetParagraphAlignment">
            <summary>
            Get alignment option of paragraph relative to layout box's top and bottom edge.
            </summary>
            <returns> Return paragraph alignment. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetWordWrapping">
            <summary>
            Get word wrapping option.
            </summary>
            <returns> Return word wrapping. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetReadingDirection">
            <summary>
            Get paragraph reading direction.
            </summary>
            <returns> Return reading direction. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetFlowDirection">
            <summary>
            Get paragraph flow direction.
            </summary>
            <returns> Return flow direction. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetIncrementalTabStop">
            <summary>
            Get incremental tab stop position.
            </summary>
            <returns> Return tab stop value. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetTrimming(SC.ThirdParty.DirectX.DWriteTrimming@,SC.ThirdParty.DirectX.IDWriteInlineObject@)">
            <summary>
            Get trimming options for text overflowing the layout width.
            </summary>
            <param name="trimmingOptions"> Text trimming options. </param>
            <param name="trimmingSign"> Trimming omission sign. This parameter may be <c>null</c>. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetLineSpacing(SC.ThirdParty.DirectX.DWriteLineSpacingMethod@,System.Single@,System.Single@)">
            <summary>
            Get line spacing.
            </summary>
            <param name="lineSpacingMethod"> How line height is determined. </param>
            <param name="lineSpacing"> The line height, or rather distance between one baseline to another. </param>
            <param name="baseline"> Distance from top of line to baseline. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetFontCollection">
            <summary>
            Get the font collection.
            </summary>
            <returns> Return current font collection. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetFontFamilyName">
            <summary>
            Get a copy of the font family name.
            </summary>
            <returns> Return string that receives the current font family name. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetFontWeight">
            <summary>
            Get the font weight.
            </summary>
            <returns> Return font weight. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetFontStyle">
            <summary>
            Get the font style.
            </summary>
            <returns> Return font style. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetFontStretch">
            <summary>
            Get the font stretch.
            </summary>
            <returns> Return font stretch. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetFontSize">
            <summary>
            Get the font em height.
            </summary>
            <returns> Return font em height. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextFormat.GetLocaleName">
            <summary>
            Get a copy of the locale name.
            </summary>
            <returns> Return locale name. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteTextLayout">
            <summary>
            DWrite Represents a block of text after it has been fully analyzed and formatted.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetMaxWidth(System.Single)">
            <summary>
            Set layout maximum width.
            </summary>
            <param name="maxWidth"> Layout maximum width. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetMaxHeight(System.Single)">
            <summary>
            Set layout maximum height.
            </summary>
            <param name="maxHeight"> Layout maximum height. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetFontCollection(SC.ThirdParty.DirectX.IDWriteFontCollection,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set the font collection.
            </summary>
            <param name="fontCollection"> The font collection to set. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetFontFamilyName(System.String,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set null-terminated font family name.
            </summary>
            <param name="fontFamilyName"> Font family name. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetFontWeight(SC.ThirdParty.DirectX.DWriteFontWeight,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set font weight.
            </summary>
            <param name="fontWeight"> Font weight. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetFontStyle(SC.ThirdParty.DirectX.DWriteFontStyle,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set font style.
            </summary>
            <param name="fontStyle"> Font style. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetFontStretch(SC.ThirdParty.DirectX.DWriteFontStretch,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set font stretch.
            </summary>
            <param name="fontStretch"> Font stretch. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetFontSize(System.Single,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set font em height.
            </summary>
            <param name="fontSize"> Font em height. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetUnderline(System.Boolean,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set underline.
            </summary>
            <param name="hasUnderline"> The Boolean flag indicates whether underline takes place. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetStrikethrough(System.Boolean,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set strikethrough.
            </summary>
            <param name="hasStrikethrough"> The Boolean flag indicates whether strikethrough takes place. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetDrawingEffect(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set application-defined drawing effect.
            </summary>
            <param name="drawingEffect"> Application-defined drawing effect. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetInlineObject(SC.ThirdParty.DirectX.IDWriteInlineObject,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set inline object.
            </summary>
            <param name="inlineObject"> Application-implemented inline object. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetTypography(SC.ThirdParty.DirectX.IDWriteTypography,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set font typography features.
            </summary>
            <param name="typography"> Font typography setting. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetLocaleName(System.String,SC.ThirdParty.DirectX.DWriteTextRange)">
            <summary>
            Set locale name.
            </summary>
            <param name="localeName"> Locale name. </param>
            <param name="textRange"> Text range to which this change applies. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetMaxWidth">
            <summary>
            Get layout maximum width.
            </summary>
            <returns> Return maximum width. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetMaxHeight">
            <summary>
            Get layout maximum height.
            </summary>
            <returns> Return maximum height. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetFontCollection(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the font collection where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return font collection on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetFontFamilyName(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Copy the font family name where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return font family name on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetFontWeight(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the font weight where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return font weight on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetFontStyle(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the font style where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return font style on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetFontStretch(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the font style where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return font stretch on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetFontSize(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the font em height where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return font em height on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetUnderline(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the underline presence where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return boolean flag indicates whether text is undelined on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetStrikethrough(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the strikethrough presence where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return boolean flag indicates whether text is strikethrough on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetDrawingEffect(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the application-defined drawing effect where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return drawing effect on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetInlineObject(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the inline object at the given position.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return inline object on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetTypography(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the typography setting where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return typography on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetLocaleName(System.UInt32,SC.ThirdParty.DirectX.DWriteTextRange@)">
            <summary>
            Get the locale name where the current position is at.
            </summary>
            <param name="currentPosition"> The current text position. </param>
            <param name="textRange"> Text range to which this change applies. </param>
            <returns> Return locale name on current position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)">
            <summary>
            Initiate drawing of the text.
            </summary>
            <param name="clientDrawingContext"> An application defined value included in rendering callbacks. </param>
            <param name="renderer"> The set of application-defined callbacks that do the actual rendering. </param>
            <param name="originX"> X-coordinate of the layout's left side. </param>
            <param name="originY"> Y-coordinate of the layout's top side. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetLineMetrics">
            <summary>
            GetLineMetrics returns properties of each line.
            </summary>
            <returns> Return the array to fill with line information. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetMetrics">
            <summary>
            GetMetrics retrieves overall metrics for the formatted string.
            </summary>
            <returns> Return metrics. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetOverhangMetrics">
            <summary>
            GetOverhangMetrics returns the overhangs (in DIPs) of the layout and all objects contained in it, including text glyphs and inline objects.
            </summary>
            <returns> Return overshoots of visible extents (in DIPs) outside the layout. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.GetClusterMetrics">
            <summary>
            Retrieve logical properties and measurement of each cluster.
            </summary>
            <returns> Return array to fill with cluster information. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.DetermineMinWidth">
            <summary>
            Determines the minimum possible width the layout can be set to without emergency breaking between the characters of whole words.
            </summary>
            <returns> Return minimum width. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.HitTestPoint(SmartEngine.Core.Numerics.Vector2,System.Boolean@,System.Boolean@)">
            <summary>
            <para> Given a coordinate (in DIPs) relative to the top-left of the layout box, this returns the corresponding hit-test metrics of the text string where the hit-test has occurred. </para>
            <para> This is useful for mapping mouse clicks to caret positions. </para>
            <para> When the given coordinate is outside the text string, the function sets the output value <c>out isInside</c> to false but returns the nearest character position. </para>
            </summary>
            <param name="point"> Coordinate to hit-test, relative to the top-left location of the layout box. </param>
            <param name="isTrailingHit"> Output flag indicating whether the hit-test location is at the leading or the trailing side of the character. When the output <c>out isInside</c> value is set to false, this value is set according to the output position value to represent the edge closest to the hit-test location. </param>
            <param name="isInside"> Output flag indicating whether the hit-test location is inside the text string. When false, the position nearest the text's edge is returned. </param>
            <returns> Return geometry fully enclosing the hit-test location. When the output <c>out isInside</c> value is set to false, this structure represents the geometry enclosing the edge closest to the hit-test location. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.HitTestTextPosition(System.UInt32,System.Boolean,SmartEngine.Core.Numerics.Vector2@)">
            <summary>
            <para>Given a text position and whether the caret is on the leading or trailing edge of that position, this returns the corresponding coordinate (in DIPs) relative to the top-left of the layout box. </para>
            <para> This is most useful for drawing the caret's current position, but it could also be used to anchor an IME to the typed text or attach a floating menu near the point of interest. </para>
            <para> It may also be used to programmatically obtain the geometry of a particular text position for UI automation. </para>
            </summary>
            <param name="textPosition"> Text position to get the coordinate of. </param>
            <param name="isTrailingHit"> Flag indicating whether the location is of the leading or the trailing side of the specified text position. </param>
            <param name="point"> Output caret position, relative to the top-left of the layout box. </param>
            <returns> Return geometry fully enclosing the specified text position. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextLayout.HitTestTextRange(System.UInt32,System.UInt32,SmartEngine.Core.Numerics.Vector2)">
            <summary>
            The application calls this function to get a set of hit-test metrics corresponding to a range of text positions. The main usage for this is to draw highlighted selection of the text string.
            </summary>
            <param name="textPosition"> First text position of the specified range. </param>
            <param name="textLength"> Number of positions of the specified range. </param>
            <param name="origin"> Point of origin (left of the layout box) which is added to each of the hit-test metrics returned. </param>
            <returns> Return array to a buffer of the output geometry fully enclosing the specified position range. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteTextRenderer">
            <summary>
            DWrite 사용자가 정의하는 텍스트 렌더러에 대한 공통 Callback 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextRenderer.DrawGlyphRun(System.Object,System.Single,System.Single,SC.ThirdParty.DirectX.DWriteMeasuringMode,SC.ThirdParty.DirectX.DWriteGlyphRun,SC.ThirdParty.DirectX.DWriteGlyphRunDescription,SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/> calls this function to instruct the client to render a run of glyphs.
            </summary>
            <param name="clientDrawingContext"> The context passed to <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/>. </param>
            <param name="baselineOriginX"> X-coordinate of the baseline. </param>
            <param name="baselineOriginY"> Y-coordinate of the baseline. </param>
            <param name="measuringMode"> Specifies measuring mode for glyphs in the run. </param>
            <param name="glyphRun"> The glyph run to draw. </param>
            <param name="glyphRunDescription"> Properties of the characters associated with this run. </param>
            <param name="clientDrawingEffect"> The drawing effect set in <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetDrawingEffect(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DWriteTextRange)"/>. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextRenderer.DrawUnderline(System.Object,System.Single,System.Single,SC.ThirdParty.DirectX.DWriteUnderline,SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/> calls this function to instruct the client to draw an underline.
            </summary>
            <param name="clientDrawingContext"> The context passed to <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/>. </param>
            <param name="baselineOriginX"> X-coordinate of the baseline. </param>
            <param name="baselineOriginY"> Y-coordinate of the baseline. </param>
            <param name="underline"> Underline logical information. </param>
            <param name="clientDrawingEffect"> The drawing effect set in <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetDrawingEffect(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DWriteTextRange)"/>. </param>
            <remarks>
            <para> A single underline can be broken into multiple calls, depending on how the formatting changes attributes. </para>
            <para> If font sizes/styles change within an underline, the thickness and offset will be averaged weighted according to characters. </para>
            <para> To get the correct top coordinate of the underline rect, add <see cref="F:SC.ThirdParty.DirectX.DWriteUnderline.Offset"/> to the baseline's Y. Otherwise the underline will be immediately under the text. </para>
            <para> The x coordinate will always be passed as the left side, regardless of text directionality. </para>
            <para> This simplifies drawing and reduces the problem of round-off that could potentially cause gaps or a double stamped alpha blend. </para>
            <para> To avoid alpha overlap, round the end points to the nearest device pixel. </para>
            </remarks>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextRenderer.DrawStrikethrough(System.Object,System.Single,System.Single,SC.ThirdParty.DirectX.DWriteStrikethrough,SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/> calls this function to instruct the client to draw an strikethrough.
            </summary>
            <param name="clientDrawingContext"> The context passed to <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/>. </param>
            <param name="baselineOriginX"> X-coordinate of the baseline. </param>
            <param name="baselineOriginY"> Y-coordinate of the baseline. </param>
            <param name="strikethrough"> Strikethrough logical information. </param>
            <param name="clientDrawingEffect"> The drawing effect set in <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetDrawingEffect(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DWriteTextRange)"/>. </param>
            <remarks>
            <para> A single strikethrough can be broken into multiple calls, depending on how the formatting changes attributes. </para>
            <para> If font sizes/styles change within an strikethrough, the thickness and offset will be averaged weighted according to characters. </para>
            <para> To get the correct top coordinate of the strikethrough rect, add <see cref="F:SC.ThirdParty.DirectX.DWriteStrikethrough.Offset"/> to the baseline's Y. Otherwise the strikethrough will be immediately under the text. </para>
            <para> The x coordinate will always be passed as the left side, regardless of text directionality. </para>
            <para> This simplifies drawing and reduces the problem of round-off that could potentially cause gaps or a double stamped alpha blend. </para>
            <para> To avoid alpha overlap, round the end points to the nearest device pixel. </para>
            </remarks>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDWriteTextRenderer.DrawInlineObject(System.Object,System.Single,System.Single,SC.ThirdParty.DirectX.IDWriteInlineObject,System.Boolean,System.Boolean,SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/> calls this application callback when it needs to draw in inline object.
            </summary>
            <param name="clientDrawingContext"> The context passed to <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.Draw(System.Object,SC.ThirdParty.DirectX.IDWriteTextRenderer,System.Single,System.Single)"/>. </param>
            <param name="originX"> X-coordinate at the top-left corner of the inline object. </param>
            <param name="originY"> Y-coordinate at the top-left corner of the inline object. </param>
            <param name="inlineObject"> The object set using <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetInlineObject(SC.ThirdParty.DirectX.IDWriteInlineObject,SC.ThirdParty.DirectX.DWriteTextRange)"/>. </param>
            <param name="isSideways"> The object shoud be drawn on its side. </param>
            <param name="isRightToLeft"> The object is in an right-to-left context and should be drawn flipped. </param>
            <param name="clientDrawingEffect"> The drawing effect set in <see cref="M:SC.ThirdParty.DirectX.IDWriteTextLayout.SetDrawingEffect(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DWriteTextRange)"/>. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDWriteTypography">
            <summary>
            DWrite Font typography setting.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIAdapterDesc">
            <summary>
            DXGI 그래픽 어댑터에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.Description">
            <summary>
            장치에 대한 설명을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.VendorId">
            <summary>
            장치 공급자의 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.DeviceId">
            <summary>
            하드웨어 장치의 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.SubSysId">
            <summary>
            서브 시스템의 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.Revision">
            <summary>
            어댑터의 개정 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.DedicatedVideoMemory">
            <summary>
            CPU와 공유되지 않는 GPU 전용 비디오 메모리의 바이트 단위 용량을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.DedicatedSystemMemory">
            <summary>
            CPU와 공유하지 않는 GPU 전용 시스템 메모리의 바이트 단위 용량을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.SharedSystemMemory">
            <summary>
            공유 시스템 메모리의 바이트 단위 용량을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc.AdapterLuid">
            <summary>
            어댑터를 식별하는 고유한 값을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIAdapterDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIAdapterDesc1">
            <summary>
            DXGI 그래픽 어댑터에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.Description">
            <summary>
            장치에 대한 설명을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.VendorId">
            <summary>
            장치 공급자의 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.DeviceId">
            <summary>
            하드웨어 장치의 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.SubSysId">
            <summary>
            서브 시스템의 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.Revision">
            <summary>
            어댑터의 개정 PCI ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.DedicatedVideoMemory">
            <summary>
            CPU와 공유되지 않는 GPU 전용 비디오 메모리의 바이트 단위 용량을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.DedicatedSystemMemory">
            <summary>
            CPU와 공유하지 않는 GPU 전용 시스템 메모리의 바이트 단위 용량을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.SharedSystemMemory">
            <summary>
            공유 시스템 메모리의 바이트 단위 용량을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.AdapterLuid">
            <summary>
            어댑터를 식별하는 고유한 값을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterDesc1.Flags">
            <summary>
            어댑터의 속성을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIAdapterDesc1.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIAdapterFlags">
            <summary>
            어댑터의 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterFlags.None">
            <summary>
            아무 속성도 나타내지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterFlags.Remote">
            <summary>
            원격 어댑터를 표현합니다. 이 속성은 현재 예약된 속성이므로 사용되지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAdapterFlags.Software">
            <summary>
            소프트웨어 구현 어댑터를 표현합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIAlphaMode">
            <summary>
            알파 값의 처리 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAlphaMode.Unspecified">
            <summary>
            처리 방식을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAlphaMode.Premultiplied">
            <summary>
            미리 계산된 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAlphaMode.Straight">
            <summary>
            알파 값이 계산되지 않은 값임을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIAlphaMode.Ignore">
            <summary>
            알파 값을 무시합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIColorSpaceType">
            <summary>
            DXGI 컬러 스페이스 유형을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_FULL_G22_NONE_P709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_FULL_G10_NONE_P709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_STUDIO_G22_NONE_P709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_STUDIO_G22_NONE_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RESERVED">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_FULL_G22_NONE_P709_X601">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G22_LEFT_P601">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_FULL_G22_LEFT_P601">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G22_LEFT_P709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_FULL_G22_LEFT_P709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G22_LEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_FULL_G22_LEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_FULL_G2084_NONE_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G2084_LEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_STUDIO_G2084_NONE_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G22_TOPLEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G2084_TOPLEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_FULL_G22_NONE_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_GHLG_TOPLEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_FULL_GHLG_TOPLEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_STUDIO_G24_NONE_P709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.RGB_STUDIO_G24_NONE_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G24_LEFT_P709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G24_LEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIColorSpaceType.YCBCR_STUDIO_G24_TOPLEFT_P2020">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGICreateFlags">
            <summary>
            DXGI 팩토리 개체 생성 플래그를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGICreateFlags.None">
            <summary>
            아무 플래그를 설정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGICreateFlags.Debug">
            <summary>
            팩토리 개체를 디버그 모드로 생성합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIEnumModeFlags">
            <summary>
            DXGI 출력 디스플레이 모드를 열거하는데 사용되는 속성들입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIEnumModeFlags.None">
            <summary>
            아무 속성을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIEnumModeFlags.Interlaced">
            <summary>
            인터레이스 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIEnumModeFlags.Scaling">
            <summary>
            늘림 비례 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIEnumModeFlags.Stereo">
            <summary>
            스테레오 모드를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIEnumModeFlags.DisabledStereo">
            <summary>
            사용자에 의해 스테레오가 비활성화된 모드를 포함합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIFormat">
            <summary>
            DXGI 모든 자원 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.Unknown">
            <summary>
            알 수 없는 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32A32_TYPELESS">
            <summary>
            4개의 32비트 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32A32_FLOAT">
            <summary>
            4개의 32비트 부동소수점 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32A32_UINT">
            <summary>
            4개의 32비트 부호없는 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32A32_SINT">
            <summary>
            4개의 32비트 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32_TYPELESS">
            <summary>
            3개의 32비트 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32_FLOAT">
            <summary>
            3개의 32비트 부동소수점 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32_UINT">
            <summary>
            3개의 32비트 부호없는 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32B32_SINT">
            <summary>
            3개의 32비트 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16B16A16_TYPELESS">
            <summary>
            4개의 16비트 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16B16A16_FLOAT">
            <summary>
            4개의 16비트 부동소수점 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16B16A16_UNORM">
            <summary>
            4개의 16비트 부호없는 정규화된 실수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16B16A16_UINT">
            <summary>
            4개의 16비트 부호없는 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16B16A16_SNORM">
            <summary>
            4개의 16비트 정규화된 실수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16B16A16_SINT">
            <summary>
            4개의 16비트 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32_TYPELESS">
            <summary>
            2개의 32비트 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32_FLOAT">
            <summary>
            2개의 32비트 부동소수점 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32_UINT">
            <summary>
            2개의 32비트 부호없는 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G32_SINT">
            <summary>
            2개의 32비트 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32G8X24_TYPELESS">
            <summary>
            1개의 32비트 값, 1개의 8비트 값 및 24비트 채움을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.D32_FLOAT_S8X24_UINT">
            <summary>
            깊이를 나타내는 1개의 32비트 부동소수점 값, 스텐실을 나타내는 1개의 8비트 부호없는 정수 값 및 24비트 채움을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32_FLOAT_X8X24_TYPELESS">
            <summary>
            1개의 32비트 부동소수점 값, 8비트 채움 및 24비트 채움을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.X32_TYPELESS_G8X24_UINT">
            <summary>
            32비트 채움, 1개의 8비트 부호없는 정수 값 및 24비트 채움을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R10G10B10A2_TYPELESS">
            <summary>
            3개의 10비트 값 및 1개의 2비트 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R10G10B10A2_UNORM">
            <summary>
            3개의 10비트 부호없는 정규화된 실수 값 및 1개의 2비트 부호없는 정규화된 실수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R10G10B10A2_UINT">
            <summary>
            3개의 10비트 부호없는 정수 값 및 1개의 2비트 부호없는 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R11G11B10_FLOAT">
            <summary>
            11, 11, 10비트를 사용하는 부동소수점 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8B8A8_TYPELESS">
            <summary>
            4개의 8비트 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8B8A8_UNORM">
            <summary>
            4개의 8비트 부호없는 정규화된 실수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8B8A8_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8B8A8_UINT">
            <summary>
            4개의 8비트 부호없는 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8B8A8_SNORM">
            <summary>
            4개의 8비트 정규화된 실수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8B8A8_SINT">
            <summary>
            4개의 8비트 정수 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16_SNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16G16_SINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.D32_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R32_SINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R24G8_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.D24_UNORM_S8_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R24_UNORM_X8_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.X24_TYPELESS_G8_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8_SNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8_SINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.D16_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16_SNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R16_SINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8_SNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8_SINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.A8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R1_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R9G9B9E5_SHAREDEXP">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R8G8_B8G8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.G8R8_G8B8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC1_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC1_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC1_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC2_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC2_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC2_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC3_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC3_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC3_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC4_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC4_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC4_SNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC5_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC5_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC5_SNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B5G6R5_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B5G5R5A1_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B8G8R8A8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B8G8R8X8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.R10G10B10_XR_BIAS_A2_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B8G8R8A8_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B8G8R8A8_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B8G8R8X8_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B8G8R8X8_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC6H_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC6H_UF16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC6H_SF16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC7_TYPELESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC7_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.BC7_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.AYUV">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.Y410">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.Y416">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.NV12">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.P010">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.P016">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat._420_OPAQUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.YUY2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.Y210">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.Y216">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.NV11">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.AI44">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.IA44">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.P8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.A8P8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.B4G4R4A4_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.P208">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.V208">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFormat.V408">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIFormatExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGIFormat"/> 열거형의 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIFormatExtensions.GetSizeInBytes(SC.ThirdParty.DirectX.DXGIFormat)">
            <summary>
            해당 형식의 바이트 단위 크기를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <returns> 바이트 단위 크기가 반환됩니다. </returns>
            <exception cref="T:System.ArgumentException"> 형식이 크기를 가질 수 없는 형식일 경우 발생합니다. </exception>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIFrameStatistics">
            <summary>
            프레임 통계를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFrameStatistics.PresentCount">
            <summary>
            화면의 출력 횟수를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFrameStatistics.PresentRefreshCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFrameStatistics.SyncRefreshCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFrameStatistics.SyncQPCTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIFrameStatistics.SyncGPUTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIFrameStatistics.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIGammaControl">
            <summary>
            감마 제어에 대한 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIGammaControl.Scale">
            <summary>
            색상 비례 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIGammaControl.Offset">
            <summary>
            색상 오프셋 값을 표현합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.DXGIGammaControl.GammaCurve">
            <summary>
            감마 커브 목록을 가져옵니다. 값은 1025개의 <see cref="T:SC.ThirdParty.DirectX.DXGIRGB"/> 배열입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIGammaControlCapabilities">
            <summary>
            감마 컨트롤 호환 정보 구조를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIGammaControlCapabilities.ScaleAndOffsetSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIGammaControlCapabilities.MaxConvertedValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIGammaControlCapabilities.MinConvertedValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIGammaControlCapabilities.NumGammaControlPoints">
            <summary>
            
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.DXGIGammaControlCapabilities.ControlPointPositions">
            <summary>
            감마 제어점 값 목록을 가져옵니다. 값은 1025개의 <see cref="T:System.Single"/> 배열입니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIMapFlags">
            <summary>
            DXGI 표면 데이터 매핑 속성을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIMapFlags.Read">
            <summary>
            데이터를 읽기 상태로 매핑합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIMapFlags.Write">
            <summary>
            데이터를 쓰기 상태로 매핑합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIMapFlags.Discard">
            <summary>
            데이터를 쓰기 상태로 매핑하며, 이전 데이터는 버려집니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIMappedRect">
            <summary>
            DXGI 매핑된 표면 영역에 대한 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIMappedRect.Pitch">
            <summary>
            2차원 표면 영역의 너비 바이트 단위 크기를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIMappedRect.pBits">
            <summary>
            (네이티브) 2차원 표면 영역의 바이트 데이터를 표현합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIModeDesc">
            <summary>
            DXGI 화면 모드에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeDesc.Width">
            <summary>
            화면 넓이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeDesc.Height">
            <summary>
            화면 높이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeDesc.RefreshRate">
            <summary>
            화면 모드의 재생 빈도를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeDesc.Format">
            <summary>
            화면 모드의 출력 포맷을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeDesc.ScanlineOrdering">
            <summary>
            화면 모드의 스캔라인 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeDesc.Scaling">
            <summary>
            화면 모드의 비례 방식을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIModeDesc.#ctor(System.Int32,System.Int32,SC.ThirdParty.DirectX.DXGIFormat)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGIModeDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="width"> 화면의 넓이를 전달합니다. </param>
            <param name="height"> 화면의 높이를 전달합니다. </param>
            <param name="format"> 화면의 출력 형식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIModeDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIModeRotation">
            <summary>
            DXGI 화면 회전을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeRotation.Unspecified">
            <summary>
            지정되지 않은 회전 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeRotation.Identity">
            <summary>
            회전 없음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeRotation.Rotate90">
            <summary>
            90도 회전을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeRotation.Rotate180">
            <summary>
            180도 회전을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeRotation.Rotate270">
            <summary>
            270도 회전을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIModeScaling">
            <summary>
            DXGI 모드의 크기 비례 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeScaling.Unspecified">
            <summary>
            크기 비례 방식을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeScaling.Centered">
            <summary>
            화면의 중앙에 위치하도록 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeScaling.Stretched">
            <summary>
            화면의 크기에 맞춰 늘어나도록 지정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIModeScanlineOrder">
            <summary>
            DXGI 화면의 스캔라인 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeScanlineOrder.Unspecified">
            <summary>
            방식을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeScanlineOrder.Progressive">
            <summary>
            건너뛰지 않고 순차적 스캔을 수행하도록 합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeScanlineOrder.UpperFieldFirst">
            <summary>
            위쪽 영역 스캔을 우선하도록 합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIModeScanlineOrder.LowerFieldFirst">
            <summary>
            아래쪽 영역 스캔을 우선하도록 합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIOutputDesc">
            <summary>
            DXGI 출력 디스플레이 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIOutputDesc.DeviceName">
            <summary>
            장치 이름을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIOutputDesc.DesktopCoordinates">
            <summary>
            장치의 바탕화면 좌표를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIOutputDesc.AttachedToDesktop">
            <summary>
            바탕화면을 사용하는지 여부를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIOutputDesc.Rotation">
            <summary>
            회전 각도를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIOutputDesc.Monitor">
            <summary>
            Windows 모니터 핸들을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIOutputDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIPresent">
            <summary>
            DXGI 스왑 체인의 출력 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.None">
            <summary>
            아무 속성도 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.Test">
            <summary>
            프레임을 출력하지 않고, 출력 가능한 상태인지 검사합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.DoNotSequence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.Restart">
            <summary>
            대기중인 출력을 제거하도록 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.DoNotWait">
            <summary>
            호출 스레드가 차단될 경우 런타임이 오류 코드와 함께 출력에 실패함을 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.RestrictToOuptut">
            <summary>
            출력된 내용이 특정 디스플레이에만 표시될 수 있음을 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.StereopreferRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.StereoTemporaryMono">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.UseDuration">
            <summary>
            
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresent.AllowTearing">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIPresentParameters">
            <summary>
            DXGI 디스플레이 출력 매개변수를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresentParameters.DirtyRects">
            <summary>
            업데이트 된 그래픽 내용의 사각 영역 목록입니다. 이 작업으로 런타임은 디스플레이 출력을 최적화할 수 있습니다. 사각 영역 이외에 영역에 렌더링 된 부분은 정의되지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresentParameters.ScrollRect">
            <summary>
            스크롤 된 사각 영역을 가리킵니다. 이 영역은 내용이 전송되기 전 이전 프레임의 사각형입니다. null을 지정할 경우 스크롤 되지 않음을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIPresentParameters.ScrollOffset">
            <summary>
            이전 프레임의 사각 영역에서 현재 프레임의 사각 영역으로 이동하는 값을 나타냅니다. null을 지정할 경우 이동하지 않음을 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIPresentParameters.#ctor(SmartEngine.Core.Numerics.Rectangle[])">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGIPresentParameters"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="dirtyRects"> 업데이트된 사각 영역 목록을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIRational">
            <summary>
            DXGI 분모 및 분자로 표현되는 실수를 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRational.Numerator">
            <summary>
            분자 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRational.Denominator">
            <summary>
            분모 값을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRational.#ctor(System.Int32,System.Int32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGIRational"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="numerator"> 분자 값을 전달합니다. </param>
            <param name="denominator"> 분모 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRational.#ctor(System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGIRational"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="value"> 계산된 실수 값을 전달합니다. </param>
        </member>
        <member name="P:SC.ThirdParty.DirectX.DXGIRational.Value">
            <summary>
            계산된 실수 값을 가져옵니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRational.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIResidency">
            <summary>
            자원의 메모리 위치를 나타내는 속성입니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIResidency.FullyResident">
            <summary>
            리소스 전체가 비디오 메모리에 존재함을 의미합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIResidency.ResidentInSharedMemory">
            <summary>
            일부 리소스가 공유 메모리 영역에 있음을 의미합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIResidency.EvictedToDisk">
            <summary>
            일부 리소스가 하드 디스크로 페이징되어 있음을 의미합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIRGB">
            <summary>
            DXGI RGB 값을 간단하게 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRGB.R">
            <summary>
            빨간색 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRGB.G">
            <summary>
            초록색 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRGB.B">
            <summary>
            파란색 값을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRGB.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGIRGB"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="r"> 빨간색 값을 전달합니다. </param>
            <param name="g"> 초록색 값을 전달합니다. </param>
            <param name="b"> 파란색 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRGB.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRGB.FromColor(SmartEngine.Core.Numerics.Color)">
            <summary>
            <see cref="T:SmartEngine.Core.Numerics.Color"/> 구조체로부터 색상 정보를 가져옵니다.
            </summary>
            <param name="color"> 색상을 전달합니다. </param>
            <returns> 변환된 색상 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIRGBA">
            <summary>
            DXGI RGBA 값을 간단하게 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRGBA.R">
            <summary>
            빨간색 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRGBA.G">
            <summary>
            초록색 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRGBA.B">
            <summary>
            파란색 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIRGBA.A">
            <summary>
            알파 값을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRGBA.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGIRGBA"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="r"> 빨간색 값을 전달합니다. </param>
            <param name="g"> 초록색 값을 전달합니다. </param>
            <param name="b"> 파란색 값을 전달합니다. </param>
            <param name="a"> 알파 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRGBA.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGIRGBA.FromColor(SmartEngine.Core.Numerics.Color)">
            <summary>
            <see cref="T:SmartEngine.Core.Numerics.Color"/> 구조체로부터 색상 정보를 가져옵니다.
            </summary>
            <param name="color"> 색상을 전달합니다. </param>
            <returns> 변환된 색상 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISampleDesc">
            <summary>
            DXGI 샘플링 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISampleDesc.Count">
            <summary>
            샘플 횟수를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISampleDesc.Quality">
            <summary>
            샘플 품질을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISampleDesc.#ctor(System.UInt32,System.UInt32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGISampleDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="count"> 샘플 횟수를 전달합니다. </param>
            <param name="quality"> 샘플 품질을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISampleDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="P:SC.ThirdParty.DirectX.DXGISampleDesc.One">
            <summary>
            단일 샘플을 수행하는 서술 구조체를 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIScaling">
            <summary>
            DXGI 비례 방식을 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIScaling.Stretch">
            <summary>
            화면의 크기에 맞춰 늘어나도록 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIScaling.None">
            <summary>
            크기 비례 방식을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIScaling.AspectRatioStretch">
            <summary>
            화면의 종횡비에 맞춰 늘어나도록 지정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISharedResource">
            <summary>
            DXGI 공유된 자원에 대한 핸들을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISharedResource.Handle">
            <summary>
            핸들을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISharedResource.#ctor(System.IntPtr)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGISharedResource"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="handle"> 핸들을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISurfaceDesc">
            <summary>
            DXGI 표면 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISurfaceDesc.Width">
            <summary>
            표면의 너비를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISurfaceDesc.Height">
            <summary>
            표면의 높이를 표현합니다..
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISurfaceDesc.Format">
            <summary>
            표면의 픽셀 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISurfaceDesc.SampleDesc">
            <summary>
            표면의 샘플링 정보를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISurfaceDesc.#ctor(System.UInt32,System.UInt32,SC.ThirdParty.DirectX.DXGIFormat)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGISurfaceDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="width"> 표면의 너비를 전달합니다.</param>
            <param name="height"> 표면의 높이를 전달합니다. </param>
            <param name="format"> 표면의 픽셀 형식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISurfaceDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISwapChainColorSpaceSupportFlags">
            <summary>
            DXGI 스왑 체인의 컬러 스페이스 지원 플래그 목록을 나열합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainColorSpaceSupportFlags.Present">
            <summary>
            컬러 스페이스 변환이 디스플레이 출력에서 지원됨을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainColorSpaceSupportFlags.OverlayPresent">
            <summary>
            컬러 스페이스 변환이 오버레이 디스플레이 출력에서 지원됨을 나타냅니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISwapChainDesc">
            <summary>
            스왑 체인에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.BufferDesc">
            <summary>
            화면 버퍼에 대한 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.SampleDesc">
            <summary>
            화면의 샘플링 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.BufferUsage">
            <summary>
            후면 버퍼의 사용 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.BufferCount">
            <summary>
            후면 버퍼의 개수를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.OutputWindow">
            <summary>
            후면 버퍼의 출력 대상 창 핸들을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.Windowed">
            <summary>
            출력 대상 창이 창 화면을 사용하도록 지정하는 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.SwapEffect">
            <summary>
            스왑 체인의 스왑 효과를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc.Flags">
            <summary>
            스왑 체인의 속성을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISwapChainDesc.#ctor(SC.ThirdParty.DirectX.DXGIModeDesc,SC.ThirdParty.DirectX.DXGIUsage,System.UInt32,SmartEngine.Platform.Win32.HHandleBase,SC.ThirdParty.DirectX.DXGISwapEffect)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGISwapChainDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="bufferDesc"> 버퍼의 모드 정보를 전달합니다. </param>
            <param name="bufferUsage"> 버퍼의 사용 방식을 전달합니다. </param>
            <param name="bufferCount"> 버퍼의 개수를 전달합니다. </param>
            <param name="outputWindow"> 출력 대상 창의 핸들을 전달합니다. </param>
            <param name="swapEffect"> 스왑 체인의 스왑 효과를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISwapChainDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISwapChainDesc1">
            <summary>
            스왑 체인에 대한 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.Width">
            <summary>
            화면의 넓이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.Height">
            <summary>
            화면의 높이를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.Format">
            <summary>
            화면의 형식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.Stereo">
            <summary>
            화면이 스테레오 방식으로 작동하는지를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.SampleDesc">
            <summary>
            화면의 샘플링 정보를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.BufferUsage">
            <summary>
            후면 버퍼의 사용 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.BufferCount">
            <summary>
            버퍼의 개수를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.Scaling">
            <summary>
            버퍼의 비례 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.SwapEffect">
            <summary>
            화면의 스왑 효과를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.AlphaMode">
            <summary>
            화면의 알파 처리 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainDesc1.Flags">
            <summary>
            스왑 체인의 속성을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISwapChainDesc1.#ctor(System.Int32,System.Int32,SC.ThirdParty.DirectX.DXGIFormat,SC.ThirdParty.DirectX.DXGIUsage,System.UInt32,SC.ThirdParty.DirectX.DXGISwapEffect)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGISwapChainDesc1"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="width"> 화면의 너비를 전달합니다. </param>
            <param name="height"> 화면의 높이를 전달합니다. </param>
            <param name="format"> 화면의 형식을 전달합니다. </param>
            <param name="bufferUsage"> 버퍼의 사용 방식을 전달합니다. </param>
            <param name="bufferCount"> 버퍼의 개수를 전달합니다. </param>
            <param name="swapEffect"> 스왑 효과를 전달합니다.</param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISwapChainDesc1.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISwapChainFlag">
            <summary>
            스왑 체인의 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.None">
            <summary>
            속성을 지정하지 않습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.NonPreRotated">
            <summary>
            DXGI가 화면을 출력할 때 자동으로 회전하지 않도록 설정합니다. 응용 프로그램 내부에서 회전에 대한 처리를 할 때 이 플래그를 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.AllowModeSwitch">
            <summary>
            DXGI가 화면 모드 변환을 수행할 수 있도록 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.GdiCompatible">
            <summary>
            GDI 호환 가능하도록 허용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.RestrictedContent">
            <summary>
            보호된 컨텐츠를 사용하도록 합니다. 운영 체제에서 보호된 컨텐츠를 지원하지 않을 경우 작업이 실패합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.RestrictSharedResourceDriver">
            <summary>
            스왑 체인 내에서 공유된 자원에 대해 이 자원이 보호되어야 함을 나타냅니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.DisplayOnly">
            <summary>
            제시된 스왑 체인 컨텐츠가 로컬 디스플레이에만 표시됩니다. 복제 또는 원격 데스크탑 API를 통해 엑세스할 수 없습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.FrameLatencyWaitableObject">
            <summary>
            프레임이 표시되는 동안 대기를 사용할 수 있는 대기 가능 오브젝트를 생성합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.ForegroundLayer">
            <summary>
            다중 평면 렌더링을 위해 포그라운드 레이어에서 스왑 체인을 생성합니다. 이 플래그는 <see cref="M:SC.ThirdParty.DirectX.IDXGIFactory2.CreateSwapChainForCoreWindow(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DXGISwapChainDesc1,SC.ThirdParty.DirectX.IDXGIOutput)"/>로 작성된 스왑 체인에서만 유효합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.FullscreenVideo">
            <summary>
            전체 화면 비디오 재생을 위한 스왑 체인을 생성할 경우 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.YUVVideo">
            <summary>
            YUV 비디오 재생을 위한 스왑 체인을 생성할 경우 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.HWProtected">
            <summary>
            <para> 모든 기본 리소스를 하드웨어로 보호할 수 있도록 스왑 체인을 만들어야 함을 나타냅니다. 하드웨어 컨텐츠 보호가 지원되지 않으면 생성에 실패합니다. </para>
            <para> 이 플래그는 <see cref="F:SC.ThirdParty.DirectX.DXGISwapEffect.FlipSequential"/> 스왑 효과에서만 사용할 수 있습니다. </para>
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.AllowTearing">
            <summary>
            화면의 가변 주사율을 지원합니다.
            </summary>
            <remarks>
            응용 프로그램이 전체 화면 창모드를 사용할 때, 가변 주사율을 지원하는 디스플레이가 제대로 작동하려면 티어링 지원이 필요합니다. 이 플래그는 <see cref="F:SC.ThirdParty.DirectX.DXGISwapEffect.FlipDiscard"/> 또는 <see cref="F:SC.ThirdParty.DirectX.DXGISwapEffect.FlipSequential"/> 스왑 효과를 사용해야 합니다.
            </remarks>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFlag.RestrictedToAllHolographicDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc">
            <summary>
            DXGI 스왑 체인의 전체화면 정보를 서술합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc.RefreshRate">
            <summary>
            화면의 재생 빈도를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc.ScanlineOrdering">
            <summary>
            스캔라인 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc.Scaling">
            <summary>
            비례 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc.Windowed">
            <summary>
            창 모드 상태를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc.#ctor(SC.ThirdParty.DirectX.DXGIRational,SC.ThirdParty.DirectX.DXGIModeScanlineOrder,SC.ThirdParty.DirectX.DXGIModeScaling)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="refreshRate"> 화면의 재생 빈도를 전달합니다. </param>
            <param name="scanlineOrder"> 화면의 스캔라인 방식을 전달합니다. </param>
            <param name="scaling"> 화면의 비례 방식을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc.ToString">
            <summary>
            구조체의 간단한 텍스트 형식을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 텍스트 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGISwapEffect">
            <summary>
            DXGI 개체의 교환 효과를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapEffect.Discard">
            <summary>
            비트 블록 전송 모델을 사용하며, 버퍼 내용을 출력 후 DXGI가 버퍼의 내용을 제거하도록 지정합니다. 이 값을 지정할 경우 응용 프로그램은 0번 버퍼에 대한 읽기 및 쓰기 권한만 갖습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapEffect.Sequential">
            <summary>
            비트 블록 전송 모델을 사용하며, 버퍼 내용을 출력 후 DXGI가 버퍼의 내용을 유지하도록 지정합니다. 첫 번째 버퍼에서 마지막 버퍼의 내용까지 순차적으로 표시할 경우 이 값을 사용합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapEffect.FlipSequential">
            <summary>
            Flip 전송 모델을 사용하며, 버퍼 내용을 출력 후 DXGI가 버퍼의 내용을 유지하도록 지정합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGISwapEffect.FlipDiscard">
            <summary>
            Flip 전송 모델을 사용하며, 버퍼 내용을 출력 후 DXGI가 버퍼의 내용을 제거하도록 지정합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIUsage">
            <summary>
            DXGI 버퍼의 사용 방식을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIUsage.ShaderInput">
            <summary>
            셰이더 입력 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIUsage.RenderTargetOutput">
            <summary>
            렌더 타겟의 출력 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIUsage.BackBuffer">
            <summary>
            후면 버퍼로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIUsage.Shared">
            <summary>
            공유된 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIUsage.ReadOnly">
            <summary>
            읽기 전용 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIUsage.DiscardOnPresent">
            <summary>
            출력된 후 버려지는 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIUsage.UnorderedAccess">
            <summary>
            순서없는 접근 자원으로 사용됩니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.DXGIWindowAssociation">
            <summary>
            DXGI 개체의 창 연결에 관련된 속성을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIWindowAssociation.NoWindowChanges">
            <summary>
            DXGI가 응용 프로그램의 메시지 대기열을 모니터링하지 못하게 합니다. 이 경우 모드 변경에 응답할 수 없습니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIWindowAssociation.NoAltEnter">
            <summary>
            DXGI가 Alt+Enter 키 조합 입력 시퀸스에 응답하지 않도록 합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.DXGIWindowAssociation.NoPrintScreen">
            <summary>
            DXGI가 PrintScreen 키 입력 시퀸스에 응답하지 않도록 합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIAdapter">
            <summary>
            시스템에 설치된 물리 또는 소프트웨어 어댑터를 제어하기 위한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIAdapter.GetDesc">
            <summary>
            GPU 어댑터의 정보를 가져옵니다.
            </summary>
            <returns> 정보를 표현하는 구조체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIAdapter.CheckInterfaceSupport(System.Guid)">
            <summary>
            시스템이 그래픽 구성 요소에 대한 장치 인터페이스를 지원하는지 확인합니다.
            </summary>
            <param name="interfaceName"> 지원을 확인할 장치 인터페이스의 GUID를 전달합니다. </param>
            <returns> 인터페이스의 지원되는 드라이버 버전을 반환합니다. 지원되지 않을 경우 null이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIAdapter1">
            <summary>
            시스템에 설치된 물리 또는 소프트웨어 어댑터를 제어하기 위한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIAdapter1.GetDesc1">
            <summary>
            GPU 어댑터의 정보를 가져옵니다.
            </summary>
            <returns> 정보를 표현하는 구조체를 반환합니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIDevice">
            <summary>
            DXGI 장치 인터페이스 개체에 대한 공통 함수를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDevice.GetAdapter">
            <summary>
            이 장치 인터페이스가 참조하는 어댑터 개체를 가져옵니다.
            </summary>
            <returns> 어댑터 인터페이스 개체를 가져옵니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDevice.QueryResourceResidency(System.Collections.Generic.IList{SC.ThirdParty.DirectX.IUnknown})">
            <summary>
            리소스의 메모리 위치를 조회합니다.
            </summary>
            <param name="unknowns"> 리소스 목록을 전달합니다. </param>
            <returns> 리소스의 위치를 나타내는 열거형 목록을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDevice.SetGPUThreadPriority(System.Int32)">
            <summary>
            GPU 스레드의 우선 순위를 설정합니다. 
            </summary>
            <param name="priority"> 우선 순위 값을 전달합니다. 값은 -7에서 7사이이며, 0은 보통 우선 순위를 나타냅니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDevice.GetGPUThreadPriority">
            <summary>
            GPU 스레드의 우선 순위를 가져옵니다.
            </summary>
            <returns> 우선 순위 값이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIDeviceExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDXGIDevice"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDeviceExtensions.QueryResourceResidency(SC.ThirdParty.DirectX.IDXGIDevice,SC.ThirdParty.DirectX.IUnknown[])">
            <summary>
            리소스의 메모리 위치를 조회합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="unknowns"> 리소스 목록을 전달합니다. </param>
            <returns> 리소스의 위치를 나타내는 열거형 목록을 반환합니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIDeviceSubObject">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDXGIDevice"/> 인터페이스 개체에서 파생된 개체에 대한 공통 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDeviceSubObject.GetDevice(System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            이 개체를 생성한 장치 인터페이스 개체를 가져옵니다.
            </summary>
            <param name="riid"> 장치 인터페이스 ID를 전달합니다. </param>
            <param name="ppUnknown"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIDeviceSubObjectExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDXGIDeviceSubObject"/> 인터페이스 개체의 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDeviceSubObjectExtensions.GetDevice``1(SC.ThirdParty.DirectX.IDXGIDeviceSubObject,System.Guid)">
            <summary>
            이 개체를 생성한 장치 인터페이스 개체를 가져옵니다.
            </summary>
            <typeparam name="T"> 장치 인터페이스의 유형을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="riid"> 장치 인터페이스 ID를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIDeviceSubObjectExtensions.GetDevice``1(SC.ThirdParty.DirectX.IDXGIDeviceSubObject)">
            <summary>
            이 개체를 생성한 장치 인터페이스 개체를 가져옵니다.
            </summary>
            <typeparam name="T"> 장치 인터페이스의 유형을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIFactory">
            <summary>
            DXGI 개체를 통합 관리하는 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory.MakeWindowAssociation(SmartEngine.Platform.Win32.HHandleBase,SC.ThirdParty.DirectX.DXGIWindowAssociation)">
            <summary>
            DXGI 개체의 창 연결 속성을 설정합니다.
            </summary>
            <param name="windowHandle"> 대상 창 핸들을 전달합니다. </param>
            <param name="flags"> 창 연결 속성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory.GetWindowAssociation">
            <summary>
            DXGI 개체의 연결된 창 핸들을 가져옵니다.
            </summary>
            <returns> 연결된 창이 있을 경우 핸들을, 그렇지 않을 경우 null이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory.CreateSwapChain(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DXGISwapChainDesc)">
            <summary>
            스왑 체인 개체를 생성합니다.
            </summary>
            <param name="device"> 스왑 체인의 출력 명령을 수행할 수 있는 디바이스 개체를 전달합니다. 예를 들어, D3D11에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D11Device"/> 개체를, D3D12에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D12CommandQueue"/> 개체를 전달합니다. </param>
            <param name="desc"> 스왑 체인을 서술하는 구조체를 전달합니다. </param>
            <returns> 생성된 스왑 체인 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory.CreateSoftwareAdapter(SmartEngine.Platform.Win32.HHandleBase)">
            <summary>
            소프트웨어 기능으로 구현된 어댑터를 생성합니다.
            </summary>
            <param name="hModule"> 소프트웨어 구현체의 핸들을 전달합니다. </param>
            <returns> 생성된 어댑터 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIFactory1">
            <summary>
            DXGI 개체를 통합 관리하는 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.IDXGIFactory1.IsCurrent">
            <summary>
            시스템에서 조회 가능한 어댑터 장치가 추가 또는 제거되었을 경우 false가 반환됩니다. 이 경우 응용 프로그램은 어댑터 장치를 다시 열거해야 합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIFactory2">
            <summary>
            DXGI 개체를 통합 관리하는 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.IDXGIFactory2.IsWindowedStereoEnabled">
            <summary>
            스테레오 모드 사용 여부를 가져옵니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.CreateSwapChainForHwnd(SC.ThirdParty.DirectX.IUnknown,System.IntPtr,SC.ThirdParty.DirectX.DXGISwapChainDesc1,System.Nullable{SC.ThirdParty.DirectX.DXGISwapChainFullscreenDesc},SC.ThirdParty.DirectX.IDXGIOutput)">
            <summary>
            창 핸들을 대상으로 하는 스왑 체인 개체를 생성합니다.
            </summary>
            <param name="device"> 스왑 체인의 출력 명령을 수행할 수 있는 디바이스 개체를 전달합니다. 예를 들어, D3D11에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D11Device"/> 개체를, D3D12에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D12CommandQueue"/> 개체를 전달합니다. </param>
            <param name="hWnd"> 창 핸들을 전달합니다. </param>
            <param name="desc"> 스왑 체인의 정보 서술 구조체를 전달합니다. </param>
            <param name="fullscreenDesc"> 전체 화면 정보 서술 구조체를 전달합니다. </param>
            <param name="restrictToOutput"> 출력을 제한할 대상 모니터 개체를 전달합니다. </param>
            <returns> 생성된 스왑 체인 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.CreateSwapChainForCoreWindow(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DXGISwapChainDesc1,SC.ThirdParty.DirectX.IDXGIOutput)">
            <summary>
            창 개체를 대상으로 하는 스왑 체인 개체를 생성합니다.
            </summary>
            <param name="device"> 스왑 체인의 출력 명령을 수행할 수 있는 디바이스 개체를 전달합니다. 예를 들어, D3D11에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D11Device"/> 개체를, D3D12에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D12CommandQueue"/> 개체를 전달합니다. </param>
            <param name="hWnd"> 창 핸들을 전달합니다. </param>
            <param name="desc"> 스왑 체인의 정보 서술 구조체를 전달합니다. </param>
            <param name="restrictToOutput"> 출력을 제한할 대상 모니터 개체를 전달합니다. </param>
            <returns> 생성된 스왑 체인 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.CreateSwapChainForComposition(SC.ThirdParty.DirectX.IUnknown,SC.ThirdParty.DirectX.DXGISwapChainDesc1,SC.ThirdParty.DirectX.IDXGIOutput)">
            <summary>
            DirectComposition API 또는 Windows.UI.Xaml 프레임워크를 대상으로 하는 스왑 체인을 생성합니다.
            </summary>
            <param name="device"> 스왑 체인의 출력 명령을 수행할 수 있는 디바이스 개체를 전달합니다. 예를 들어, D3D11에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D11Device"/> 개체를, D3D12에서는 <see cref="T:SC.ThirdParty.DirectX.ID3D12CommandQueue"/> 개체를 전달합니다. </param>
            <param name="desc"> 스왑 체인의 정보 서술 구조체를 전달합니다. </param>
            <param name="restrictToOutput"> 출력을 제한할 대상 모니터 개체를 전달합니다. </param>
            <returns> 생성된 스왑 체인 개체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.GetSharedResourceAdapterLuid(System.IntPtr)">
            <summary>
            공유된 자원에 대한 어댑터 LUID를 가져옵니다.
            </summary>
            <param name="hResource"> 공유 자원의 핸들을 전달합니다. </param>
            <returns> LUID 값을 가져옵니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.RegisterStereoStatusWindow(System.IntPtr,System.UInt32)">
            <summary>
            스테레오 상태 변경에 대한 알림 메시지를 받도록 응용 프로그램 창을 등록합니다.
            </summary>
            <param name="windowHandle"> 알림을 받을 창 핸들을 전달합니다. </param>
            <param name="wMsg"> 창에 전달될 메시지의 ID를 전달합니다. </param>
            <returns> <see cref="M:SC.ThirdParty.DirectX.IDXGIFactory2.UnregisterStereoStatus(System.UInt32)"/> 메서드에 전달할 수 있도록 이 등록을 식별하는 값을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.RegisterStereoStatusEvent(System.IntPtr)">
            <summary>
            스테레오 상태 변경에 대한 알림을 받을 이벤트를 등록합니다.
            </summary>
            <param name="hEvent"> 알림을 받을 이벤트의 핸들을 전달합니다. </param>
            <returns> <see cref="M:SC.ThirdParty.DirectX.IDXGIFactory2.UnregisterStereoStatus(System.UInt32)"/> 메서드에 전달할 수 있도록 이 등록을 식별하는 값을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.UnregisterStereoStatus(System.UInt32)">
            <summary>
            스트레오 상태 변경에 대한 알림을 해제합니다.
            </summary>
            <param name="cookie"> 등록 시 발급되었던 등록 식별 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.RegisterOcclusionStatusWindow(System.IntPtr,System.UInt32)">
            <summary>
            오클루전 상태 변경에 대한 알림 메시지를 받도록 응용 프로그램 창을 등록합니다.
            </summary>
            <param name="windowHandle"> 알림을 받을 창 핸들을 전달합니다. </param>
            <param name="wMsg"> 창에 전달될 메시지의 ID를 전달합니다. </param>
            <returns> <see cref="M:SC.ThirdParty.DirectX.IDXGIFactory2.UnregisterOcclusionStatus(System.UInt32)"/> 메서드에 전달할 수 있도록 이 등록을 식별하는 값을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.RegisterOcclusionStatusEvent(System.IntPtr)">
            <summary>
            오클루전 상태 변경에 대한 알림을 받을 이벤트를 등록합니다.
            </summary>
            <param name="hEvent"> 알림을 받을 이벤트의 핸들을 전달합니다. </param>
            <returns> <see cref="M:SC.ThirdParty.DirectX.IDXGIFactory2.UnregisterOcclusionStatus(System.UInt32)"/> 메서드에 전달할 수 있도록 이 등록을 식별하는 값을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory2.UnregisterOcclusionStatus(System.UInt32)">
            <summary>
            오클루전 상태 변경에 대한 알림을 해제합니다.
            </summary>
            <param name="cookie"> 등록 시 발급되었던 등록 식별 값을 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIFactory3">
            <summary>
            DXGI 개체를 통합 관리하는 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="P:SC.ThirdParty.DirectX.IDXGIFactory3.CreationFlags">
            <summary>
            이 개체가 생성될 때 전달되었던 플래그 집합을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIFactory4">
            <summary>
            DXGI 개체를 통합 관리하는 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory4.GetAdapterByLuid(SC.ThirdParty.DirectX.Luid,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            어댑터를 LUID 정보를 이용해 조회합니다.
            </summary>
            <param name="adapterLuid"> 어댑터 LUID 정보를 전달합니다. </param>
            <param name="iid"> 어댑터 개체의 GUID를 전달합니다. </param>
            <param name="ppUnknown"> 어댑터 개체를 받을 변수의 참조를 전달합니다. </param>
            <returns> 어댑터가 검색되었을 경우 true를, 아닐 경우 false를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory4.GetWarpAdapter(System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            WARP 어댑터를 조회합니다.
            </summary>
            <param name="iid"> 어댑터 개체의 GUID를 전달합니다. </param>
            <param name="ppUnknown"> 어댑터 개체를 받을 변수의 참조를 전달합니다. </param>
            <returns> 어댑터가 검색되었을 경우 true를, 아닐 경우 false를 반환합니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIFactory4Extensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDXGIFactory4"/> 인터페이스에 대한 추가 기능을 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory4Extensions.GetAdapterByLuid(SC.ThirdParty.DirectX.IDXGIFactory4,SC.ThirdParty.DirectX.Luid)">
            <summary>
            어댑터를 LUID 정보를 이용해 조회합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="adapterLuid"> 어댑터 LUID 정보를 전달합니다. </param>
            <returns> 검색된 어댑터 개체가 반환됩니다. 개체를 찾지 못했을 경우 null이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIFactory4Extensions.GetWarpAdapter(SC.ThirdParty.DirectX.IDXGIFactory4)">
            <summary>
            WRAP 어댑터를 조회합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <returns> 검색된 어댑터 개체가 반환됩니다. 개체를 찾지 못했을 경우 null이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIObject">
            <summary>
            모든 DXGI 개체에 공통으로 제공되는 함수를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIObject.SetPrivateData(System.Guid,System.Object)">
            <summary>
            GUID를 이름으로 하여 개체에 개인 데이터를 연결합니다.
            </summary>
            <param name="iid"> 식별 GUID를 전달합니다. </param>
            <param name="data"> 데이터 개체를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIObject.GetPrivateData(System.Guid)">
            <summary>
            개체에 연결된 개인 데이터를 GUID 이름으로 가져옵니다.
            </summary>
            <param name="iid"> 식별 GUID를 전달합니다. </param>
            <returns> 개체가 존재할 경우 개체를, 존재하지 않을 경우 null을 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIObject.GetParent(System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            개체의 부모 개체를 가져옵니다.
            </summary>
            <param name="iid"> 부모 개체의 형식 인터페이스 GUID를 전달합니다. </param>
            <param name="ppUnknown"> 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIObjectExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDXGIObject"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIObjectExtensions.GetParent``1(SC.ThirdParty.DirectX.IDXGIObject,System.Guid)">
            <summary>
            개체의 부모 개체를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="iid"> 부모 개체의 형식 인터페이스 GUID를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIObjectExtensions.GetParent``1(SC.ThirdParty.DirectX.IDXGIObject)">
            <summary>
            개체의 부모 개체를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGIOutput">
            <summary>
            DXGI 출력 디스플레이에 대한 요약 인스턴스의 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.GetDesc">
            <summary>
            출력 디스플레이의 정보를 가져옵니다.
            </summary>
            <returns> 정보 서술 구조체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.GetDisplayModeList(SC.ThirdParty.DirectX.DXGIFormat,SC.ThirdParty.DirectX.DXGIEnumModeFlags)">
            <summary>
            디스플레이 호환 모드 정보 목록을 가져옵니다.
            </summary>
            <param name="enumFormat"> 검색할 디스플레이 포맷을 전달합니다. </param>
            <param name="flags"> </param>
            <returns> 호환 가능한 모드 목록이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.FindClosestMatchingMode(SC.ThirdParty.DirectX.DXGIModeDesc,SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            지정된 모드와 가장 근접한 호환 모드를 가져옵니다.
            </summary>
            <param name="modeToMatch"> 모드를 지정합니다. </param>
            <param name="concernedDevice"> 장치 인터페이스를 전달합니다. 해당 장치와 호환되는 모드를 </param>
            <returns> 호환 가능한 가장 근접한 모드가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.WaitForVBlank">
            <summary>
            대상 출력 디스플레이의 수직 동기 시점까지 대기합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.TakeOwnership(SC.ThirdParty.DirectX.IUnknown,System.Boolean)">
            <summary>
            출력 디스플레이의 소유권을 가져옵니다.
            </summary>
            <param name="device"> 소유권을 소유할 장치 개체를 전달합니다. </param>
            <param name="exclusive"> 이 디스플레이 장치를 베타적으로 소유할지 여부를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.ReleaseOwnership">
            <summary>
            출력 디스플레이의 소유권을 포기합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.GetGammaControlCapabilities">
            <summary>
            감마 컨트롤 호환 값을 가져옵니다.
            </summary>
            <returns> 감마 컨트롤 호환 값이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.SetGammaControl(SC.ThirdParty.DirectX.DXGIGammaControl)">
            <summary>
            감마 컨트롤 값을 설정합니다.
            </summary>
            <param name="gammaControl"> 감마 컨트롤 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.GetGammaControl">
            <summary>
            감마 컨트롤 값을 가져옵니다.
            </summary>
            <returns> 감마 컨트롤 값이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.SetDisplaySurface(SC.ThirdParty.DirectX.IDXGISurface)">
            <summary>
            디스플레이 모드를 변경합니다.
            </summary>
            <param name="scanoutSurface"> 이미지를 화면에 렌더링하는 데 사용되는 표면에 대한 인터페이스 개체를 전달됩니다. 표면 개체는 <see cref="F:SC.ThirdParty.DirectX.DXGIUsage.BackBuffer"/>로 생성되어야 합니다. </param>
            <remarks> 이 메서드를 응용 프로그램에서 직접 호출하면 결과를 예측할 수 없습니다. 전체 화면 전환 중 DXGI에 의해 암시적으로 호출되므로 스왑 체인 메서드 대신 사용할 수 없습니다. </remarks>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.GetDisplaySurfaceData(SC.ThirdParty.DirectX.IDXGISurface)">
            <summary>
            현재 표시 화면의 복사본을 가져옵니다.
            </summary>
            <param name="destination"> 복사 대상 표면 개체를 전달합니다. </param>
            <remarks> 이 메서드는 출력이 전체 화면 모드인 경우에만 호출할 수 있습니다. </remarks>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGIOutput.GetFrameStatistics">
            <summary>
            프레임 통계를 가져옵니다.
            </summary>
            <returns> 프레임 통계 값이 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGISurface">
            <summary>
            DXGI GPU에서 사용하는 표면 데이터를 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISurface.GetDesc">
            <summary>
            표면의 정보를 서술하는 구조체를 가져옵니다.
            </summary>
            <returns> 표면의 정보를 서술하는 구조체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISurface.Map(SC.ThirdParty.DirectX.DXGIMapFlags)">
            <summary>
            표면을 매핑합니다.
            </summary>
            <param name="flags"> 매핑 속성을 전달합니다. </param>
            <returns> 매핑 데이터 정보 구조체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISurface.Unmap">
            <summary>
            표면의 매핑을 종료합니다.
            </summary>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGISwapChain">
            <summary>
            화면에 내용을 출력하는 스왑 체인에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.Present(System.UInt32,SC.ThirdParty.DirectX.DXGIPresent)">
            <summary>
            후면 버퍼를 디스플레이 화면에 출력합니다.
            </summary>
            <param name="syncInterval"> 수직 동기 인터벌을 전달합니다. </param>
            <param name="flags"> 출력 속성을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.GetBuffer(System.Int32,System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            후면 버퍼를 가져옵니다.
            </summary>
            <param name="index"> 후면 버퍼 인덱스를 전달합니다. </param>
            <param name="riid"> 후면 버퍼의 인터페이스 GUID를 전달합니다.  </param>
            <param name="ppUnknown"> 후면 버퍼를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.SetFullscreenState(System.Boolean,SC.ThirdParty.DirectX.IDXGIOutput)">
            <summary>
            전체 화면 모드를 설정합니다.
            </summary>
            <param name="fullscreen"> 전체 화면 상태를 전달합니다. </param>
            <param name="target"> 대상 디스플레이 인터페이스를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.GetFullscreenState(SC.ThirdParty.DirectX.IDXGIOutput@)">
            <summary>
            현재 스왑 체인에 지정된 전체 화면 설정 정보를 가져옵니다.
            </summary>
            <param name="target"> 대상 디스플레이 인터페이스를 받을 변수의 참조를 전달합니다. </param>
            <returns> 전체 화면 상태가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.GetDesc">
            <summary>
            현재 스왑 체인의 정보 서술 구조체를 가져옵니다.
            </summary>
            <returns> 서술 구조체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.ResizeBuffers(System.Nullable{System.UInt32},System.Int32,System.Int32,System.Nullable{SC.ThirdParty.DirectX.DXGIFormat},System.Nullable{SC.ThirdParty.DirectX.DXGISwapChainFlag})">
            <summary>
            후면 버퍼의 크기를 변경합니다.
            </summary>
            <param name="bufferCount"> 변경할 버퍼의 개수를 전달합니다. null을 전달할 경우 버퍼의 개수를 변경하지 않습니다. </param>
            <param name="width"> 변경할 버퍼의 너비를 전달합니다. </param>
            <param name="height"> 변경할 버퍼의 높이를 전달합니다. </param>
            <param name="newFormat"> 변경할 버퍼의 픽셀 형식을 전달합니다. null을 전달할 경우 형식을 변경하지 않습니다. </param>
            <param name="swapChainFlag"> 변경할 스왑 체인의 속성을 전달합니다. null을 전달할 경우 속성을 변경하지 않습니다. </param>
            <remarks> 이 메서드를 호출하기 전, 반드시 모든 후면 버퍼의 참조가 제거되어야 합니다. <see cref="M:SC.ThirdParty.DirectX.IUnknown.Release"/> 메서드를 참조하십시오. </remarks>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.ResizeTarget(SC.ThirdParty.DirectX.DXGIModeDesc)">
            <summary>
            스왑 체인의 대상 창의 모드를 변경합니다.
            </summary>
            <param name="newTargetMode"> 새로운 디스플레이 모드를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.GetContainingOutput">
            <summary>
            현재 스왑 체인의 대부분의 영역을 포함하는 디스플레이 인터페이스를 가져옵니다.
            </summary>
            <returns> 디스플레이 인터페이스 개체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.GetFrameStatistics">
            <summary>
            현재 스왑 체인의 프레임 통계를 가져옵니다.
            </summary>
            <returns> 프레임 통계 값이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain.GetLastPresentCount">
            <summary>
            마지막 출력의 출력 횟수를 가져옵니다.
            </summary>
            <returns> 출력 횟수가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGISwapChain1">
            <summary>
            화면에 내용을 출력하는 스왑 체인에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.GetDesc1">
            <summary>
            현재 스왑 체인의 정보 서술 구조체를 가져옵니다.
            </summary>
            <returns> 서술 구조체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.GetFullscreenDesc">
            <summary>
            현재 스왑 체인의 전체 화면 서술 구조체를 가져옵니다.
            </summary>
            <returns> 서술 구조체가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.GetHwnd">
            <summary>
            출력 대상 창의 핸들을 가져옵니다.
            </summary>
            <returns> 창 핸들이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.GetCoreWindow(System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            출력 대상 CoreWindow 개체를 가져옵니다.
            </summary>
            <param name="riid"> CoreWindow 개체의 GUID를 전달합니다. </param>
            <param name="ppUnknown"> 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.Present1(System.UInt32,SC.ThirdParty.DirectX.DXGIPresent,SC.ThirdParty.DirectX.DXGIPresentParameters)">
            <summary>
            후면 버퍼를 디스플레이 화면에 출력합니다.
            </summary>
            <param name="syncInterval"> 수직 동기 인터벌을 전달합니다. </param>
            <param name="presentFlags"> 출력 속성을 전달합니다. </param>
            <param name="presentParams"> 출력 매개변수를 전달합니다. </param>
        </member>
        <member name="P:SC.ThirdParty.DirectX.IDXGISwapChain1.IsTemporaryMonoSupported">
            <summary>
            스왑 체인 개체가 임시 모노 상태를 지원하는지 나타냅니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.GetRestrictToOutput">
            <summary>
            현재 설정된 출력 내용 제한 디스플레이 장치를 가져옵니다.
            </summary>
            <returns> 디스플레이 장치를 나타내는 인터페이스 개체를 가져옵니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.SetBackgroundColor(SC.ThirdParty.DirectX.DXGIRGBA)">
            <summary>
            백그라운드 색상을 설정합니다.
            </summary>
            <param name="color"> 색상을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.GetBackgroundColor">
            <summary>
            백그라운드 색상을 가져옵니다.
            </summary>
            <returns> 색상 구조체를 가져옵니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.SetRotation(SC.ThirdParty.DirectX.DXGIModeRotation)">
            <summary>
            회전 상태를 설정합니다.
            </summary>
            <param name="rotation"> 회전 상태를 나타내는 열거형을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1.GetRotation">
            <summary>
            회전 상태를 가져옵니다.
            </summary>
            <returns> 회전 상태를 나타내는 열거형을 가져옵니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGISwapChain1Extensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDXGISwapChain1"/> 인터페이스의 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1Extensions.GetCoreWindow``1(SC.ThirdParty.DirectX.IDXGISwapChain1,System.Guid)">
            <summary>
            출력 대상 CoreWindow 개체를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <typeparam name="T"> <see cref="T:SC.ThirdParty.DirectX.IUnknown"/> 인터페이스를 구현하는 원하는 대상 타입을 전달합니다. </typeparam>
            <param name="riid"> CoreWindow 개체의 GUID를 전달합니다. </param>
            <returns> 지정한 형식으로 변환 된 개체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain1Extensions.GetCoreWindow``1(SC.ThirdParty.DirectX.IDXGISwapChain1)">
            <summary>
            출력 대상 CoreWindow 개체를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <typeparam name="T"> <see cref="T:SC.ThirdParty.DirectX.IUnknown"/> 인터페이스를 구현하는 원하는 대상 타입을 전달합니다. </typeparam>
            <returns> 지정한 형식으로 변환 된 개체를 반환합니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGISwapChain2">
            <summary>
            화면에 내용을 출력하는 스왑 체인에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain2.SetSourceSize(SmartEngine.Core.Numerics.Vector2)">
            <summary>
            스왑 체인에 사용될 소스의 크기를 설정합니다.
            </summary>
            <param name="size"> 크기를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain2.GetSourceSize">
            <summary>
            스왑 체인에 사용될 소스의 크기를 가져옵니다.
            </summary>
            <returns> 크기 구조체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain2.SetMaximumFrameLatency(System.UInt32)">
            <summary>
            스왑 체인이 렌더링을 위해 대기할 수 있는 프레임 수를 설정합니다.
            </summary>
            <param name="maxLatency"> 프레임 수를 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain2.GetMaximumFrameLatency">
            <summary>
            스왑 체인이 렌더링을 위해 대기할 수 있는 프레임 수를 가져옵니다.
            </summary>
            <returns> 프레임 수를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain2.GetFrameLatencyWaitableObject">
            <summary>
            DXGI가 새로운 프레임 출력 시간까지 대기할 수 있는 대기 가능 오브젝트의 핸들을 반환합니다.
            </summary>
            <returns> 핸들 개체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain2.SetMatrixTransform(SmartEngine.Core.Numerics.Matrix3x2)">
            <summary>
            컴포지션 스왑 체인일 경우, 다음 프레임 렌더링 시 사용될 변환 행렬을 설정합니다.
            </summary>
            <param name="matrix"> 변환 행렬을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain2.GetMatrixTransform">
            <summary>
            컴포지션 스왑 체인일 경우, 프레임 렌더링에 사용될 변환 행렬을 가져옵니다.
            </summary>
            <returns> 변환 행렬 개체가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGISwapChain3">
            <summary>
            화면에 내용을 출력하는 스왑 체인에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain3.GetCurrentBackBufferIndex">
            <summary>
            현재 프레임 렌더링으로 사용 가능한 후면 버퍼의 인덱스를 가져옵니다.
            </summary>
            <returns> 후면 버퍼의 인덱스를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain3.CheckColorSpaceSupport(SC.ThirdParty.DirectX.DXGIColorSpaceType)">
            <summary>
            컬러 스페이스 지원 여부에 대한 열거형 조합을 가져옵니다.
            </summary>
            <param name="colorSpace"> 컬러 스페이스 유형을 전달합니다. </param>
            <returns> 열거형 조합이 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain3.SetColorSpace1(SC.ThirdParty.DirectX.DXGIColorSpaceType)">
            <summary>
            컬러 스페이스를 설정합니다.
            </summary>
            <param name="colorSpace"> 컬러 스페이스 유형을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChain3.ResizeBuffers1(System.Nullable{System.UInt32},System.Int32,System.Int32,System.Nullable{SC.ThirdParty.DirectX.DXGIFormat},System.Nullable{SC.ThirdParty.DirectX.DXGISwapChainFlag},System.Collections.Generic.IList{System.UInt32},System.Collections.Generic.IList{SC.ThirdParty.DirectX.IUnknown})">
            <summary>
            후면 버퍼의 크기를 변경합니다.
            </summary>
            <param name="bufferCount"> 변경할 버퍼의 개수를 전달합니다. null을 전달할 경우 버퍼의 개수를 변경하지 않습니다. </param>
            <param name="width"> 변경할 버퍼의 너비를 전달합니다. </param>
            <param name="height"> 변경할 버퍼의 높이를 전달합니다. </param>
            <param name="newFormat"> 변경할 버퍼의 픽셀 형식을 전달합니다. null을 전달할 경우 형식을 변경하지 않습니다. </param>
            <param name="swapChainFlag"> 변경할 스왑 체인의 속성을 전달합니다. null을 전달할 경우 속성을 변경하지 않습니다. </param>
            <param name="creationNodeMask"> 생성 노드 마스크를 전달합니다. 개수는 버퍼의 개수와 일치합니다. </param>
            <param name="presentQueues"> 명령 대기열 목록을 전달합니다. 개수는 버퍼의 개수와 일치합니다. </param>
            <remarks> 이 메서드를 호출하기 전, 반드시 모든 후면 버퍼의 참조가 제거되어야 합니다. <see cref="M:SC.ThirdParty.DirectX.IUnknown.Release"/> 메서드를 참조하십시오. </remarks>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IDXGISwapChainExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IDXGISwapChain"/> 인터페이스의 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChainExtensions.GetBuffer``1(SC.ThirdParty.DirectX.IDXGISwapChain,System.Int32,System.Guid)">
            <summary>
            후면 버퍼를 가져옵니다.
            </summary>
            <typeparam name="T"> <see cref="T:SC.ThirdParty.DirectX.IUnknown"/> 인터페이스를 구현하는 원하는 대상 타입을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="index"> 후면 버퍼 인덱스를 전달합니다. </param>
            <param name="riid"> 후면 버퍼의 인터페이스 GUID를 전달합니다.  </param>
            <returns> 지정한 형식으로 변환 된 개체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChainExtensions.GetBuffer``1(SC.ThirdParty.DirectX.IDXGISwapChain,System.Int32)">
            <summary>
            후면 버퍼를 가져옵니다.
            </summary>
            <typeparam name="T"> <see cref="T:SC.ThirdParty.DirectX.IUnknown"/> 인터페이스를 구현하는 원하는 대상 타입을 전달합니다. </typeparam>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="index"> 후면 버퍼 인덱스를 전달합니다. </param>
            <returns> 지정한 형식으로 변환 된 개체를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChainExtensions.ResizeBuffers(SC.ThirdParty.DirectX.IDXGISwapChain,System.Int32,System.Int32)">
            <summary>
            후면 버퍼의 크기를 변경합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="width"> 변경할 버퍼의 너비를 전달합니다. </param>
            <param name="height"> 변경할 버퍼의 높이를 전달합니다. </param>
            <remarks> 이 메서드를 호출하기 전, 반드시 모든 후면 버퍼의 참조가 제거되어야 합니다. <see cref="M:SC.ThirdParty.DirectX.IUnknown.Release"/> 메서드를 참조하십시오. </remarks>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IDXGISwapChainExtensions.GetFullscreenState(SC.ThirdParty.DirectX.IDXGISwapChain)">
            <summary>
            현재 스왑 체인에 지정된 전체 화면 설정 정보를 가져옵니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <returns> 전체 화면 상태가 반환됩니다. </returns>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IUnknown">
            <summary>
            COM 구성 요소 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IUnknown.AddRef">
            <summary>
            개체의 참조 횟수를 1회 증가시킵니다.
            </summary>
            <returns> 개체의 현재 참조 횟수가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IUnknown.Release">
            <summary>
            개체의 참조 횟수를 1회 감소시킵니다.
            </summary>
            <returns> 개체의 현재 참조 횟수가 반환됩니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IUnknown.QueryInterface(System.Guid,SC.ThirdParty.DirectX.IUnknown@)">
            <summary>
            사용 가능한 대상 인터페이스 개체를 조회합니다.
            </summary>
            <param name="iid"> 대상 인터페이스의 GUID를 전달합니다. </param>
            <param name="ppUnknown"> 인터페이스 개체를 받을 변수의 참조를 전달합니다. </param>
        </member>
        <member name="T:SC.ThirdParty.DirectX.IUnknownExtensions">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.IUnknown"/> 인터페이스 개체에 대한 확장 메서드를 제공합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IUnknownExtensions.QueryInterface``1(SC.ThirdParty.DirectX.IUnknown,System.Guid)">
            <summary>
            사용 가능한 대상 인터페이스 개체를 조회합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <param name="riid"> 대상 인터페이스의 GUID를 전달합니다. </param>
            <returns> 인터페이스 요청에 성공한 경우 해당 인터페이스 개체를 가져옵니다. </returns>
            <exception cref="T:System.NotSupportedException"> 요청한 GUID가 지원되지 않는 인터페이스를 나타내는 경우 발생합니다. </exception>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IUnknownExtensions.QueryInterface``1(SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            사용 가능한 대상 인터페이스 개체를 조회합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <returns> 인터페이스 요청에 성공한 경우 해당 인터페이스 개체를 가져옵니다. </returns>
            <exception cref="T:System.NotSupportedException"> 요청한 GUID가 지원되지 않는 인터페이스를 나타내는 경우 발생합니다. </exception>
        </member>
        <member name="M:SC.ThirdParty.DirectX.IUnknownExtensions.As``1(SC.ThirdParty.DirectX.IUnknown)">
            <summary>
            사용 가능한 대상 인터페이스 개체를 조회합니다.
            </summary>
            <param name="this"> 개체를 전달합니다. </param>
            <returns> 인터페이스 요청에 성공한 경우 해당 인터페이스 개체를 가져옵니다. </returns>
            <exception cref="T:System.NotSupportedException"> 요청한 GUID가 지원되지 않는 인터페이스를 나타내는 경우 발생합니다. </exception>
        </member>
        <member name="T:SC.ThirdParty.DirectX.Luid">
            <summary>
            개체의 범위 내에서만 사용되는 지역 고유 ID를 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.Luid.LowPart">
            <summary>
            LowPart 값을 표현합니다.
            </summary>
        </member>
        <member name="F:SC.ThirdParty.DirectX.Luid.HighPart">
            <summary>
            HighPart 값을 표현합니다.
            </summary>
        </member>
        <member name="M:SC.ThirdParty.DirectX.Luid.#ctor(System.UInt32,System.Int32)">
            <summary>
            <see cref="T:SC.ThirdParty.DirectX.Luid"/> 구조체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="lowPart"> LowPart 값을 전달합니다. </param>
            <param name="highPart"> HighPart 값을 전달합니다. </param>
        </member>
        <member name="M:SC.ThirdParty.DirectX.Luid.Equals(System.Object)">
            <summary>
            두 개체가 같은지 비교합니다.
            </summary>
            <param name="right"> 비교 대상 개체를 전달합니다. </param>
            <returns> 비교 결과를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.Luid.Equals(SC.ThirdParty.DirectX.Luid)">
            <summary>
            두 개체가 같은지 비교합니다.
            </summary>
            <param name="right"> 비교 대상 개체를 전달합니다. </param>
            <returns> 비교 결과를 반환합니다. </returns>
        </member>
        <member name="M:SC.ThirdParty.DirectX.Luid.GetHashCode">
            <summary>
            구조체의 간단한 해쉬 값을 생성하여 반환합니다.
            </summary>
            <returns> 생성된 해쉬 값이 반환됩니다. </returns>
        </member>
    </members>
</doc>
